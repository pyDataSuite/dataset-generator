<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1782" onload="init(evt)" viewBox="0 0 1200 1782" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1782" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1765.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1765.00"> </text><svg id="frames" x="10" width="1180" total_samples="1451"><g><title>&lt;&amp;[u8] as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (2 samples, 0.14%)</title><rect x="0.0000%" y="1685" width="0.1378%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1695.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.07%)</title><rect x="0.0689%" y="1669" width="0.0689%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.3189%" y="1679.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.07%)</title><rect x="0.0689%" y="1653" width="0.0689%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.3189%" y="1663.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.07%)</title><rect x="0.0689%" y="1637" width="0.0689%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.3189%" y="1647.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.07%)</title><rect x="0.1378%" y="1685" width="0.0689%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.3878%" y="1695.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 0.07%)</title><rect x="0.2068%" y="1685" width="0.0689%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="1"/><text x="0.4568%" y="1695.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.07%)</title><rect x="0.2757%" y="1685" width="0.0689%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="1"/><text x="0.5257%" y="1695.50"></text></g><g><title>H5D__write (1 samples, 0.07%)</title><rect x="0.3446%" y="1685" width="0.0689%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="1"/><text x="0.5946%" y="1695.50"></text></g><g><title>[libc.so.6] (4 samples, 0.28%)</title><rect x="0.4135%" y="1685" width="0.2757%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="4"/><text x="0.6635%" y="1695.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="0.6892%" y="1685" width="0.0689%" height="15" fill="rgb(220,122,19)" fg:x="10" fg:w="1"/><text x="0.9392%" y="1695.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.07%)</title><rect x="0.7581%" y="1685" width="0.0689%" height="15" fill="rgb(250,228,42)" fg:x="11" fg:w="1"/><text x="1.0081%" y="1695.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (2 samples, 0.14%)</title><rect x="0.8270%" y="1685" width="0.1378%" height="15" fill="rgb(240,193,28)" fg:x="12" fg:w="2"/><text x="1.0770%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="0.9649%" y="1685" width="0.0689%" height="15" fill="rgb(216,20,37)" fg:x="14" fg:w="1"/><text x="1.2149%" y="1695.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (2 samples, 0.14%)</title><rect x="1.0338%" y="1685" width="0.1378%" height="15" fill="rgb(206,188,39)" fg:x="15" fg:w="2"/><text x="1.2838%" y="1695.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.14%)</title><rect x="1.0338%" y="1669" width="0.1378%" height="15" fill="rgb(217,207,13)" fg:x="15" fg:w="2"/><text x="1.2838%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.14%)</title><rect x="1.0338%" y="1653" width="0.1378%" height="15" fill="rgb(231,73,38)" fg:x="15" fg:w="2"/><text x="1.2838%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="1.0338%" y="1637" width="0.1378%" height="15" fill="rgb(225,20,46)" fg:x="15" fg:w="2"/><text x="1.2838%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.14%)</title><rect x="1.0338%" y="1621" width="0.1378%" height="15" fill="rgb(210,31,41)" fg:x="15" fg:w="2"/><text x="1.2838%" y="1631.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.14%)</title><rect x="1.0338%" y="1605" width="0.1378%" height="15" fill="rgb(221,200,47)" fg:x="15" fg:w="2"/><text x="1.2838%" y="1615.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.07%)</title><rect x="1.1716%" y="1685" width="0.0689%" height="15" fill="rgb(226,26,5)" fg:x="17" fg:w="1"/><text x="1.4216%" y="1695.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.07%)</title><rect x="1.2405%" y="1685" width="0.0689%" height="15" fill="rgb(249,33,26)" fg:x="18" fg:w="1"/><text x="1.4905%" y="1695.50"></text></g><g><title>cfree (2 samples, 0.14%)</title><rect x="1.3094%" y="1685" width="0.1378%" height="15" fill="rgb(235,183,28)" fg:x="19" fg:w="2"/><text x="1.5594%" y="1695.50"></text></g><g><title>core::num::from_str_radix (2 samples, 0.14%)</title><rect x="1.4473%" y="1685" width="0.1378%" height="15" fill="rgb(221,5,38)" fg:x="21" fg:w="2"/><text x="1.6973%" y="1695.50"></text></g><g><title>core::str::converts::from_utf8 (2 samples, 0.14%)</title><rect x="1.5851%" y="1685" width="0.1378%" height="15" fill="rgb(247,18,42)" fg:x="23" fg:w="2"/><text x="1.8351%" y="1695.50"></text></g><g><title>generator::initialize_cpu_data::{{closure}} (1 samples, 0.07%)</title><rect x="1.7229%" y="1685" width="0.0689%" height="15" fill="rgb(241,131,45)" fg:x="25" fg:w="1"/><text x="1.9729%" y="1695.50"></text></g><g><title>generator::initialize_data_file::{{closure}} (1 samples, 0.07%)</title><rect x="1.7919%" y="1685" width="0.0689%" height="15" fill="rgb(249,31,29)" fg:x="26" fg:w="1"/><text x="2.0419%" y="1695.50"></text></g><g><title>readdir64 (1 samples, 0.07%)</title><rect x="1.8608%" y="1685" width="0.0689%" height="15" fill="rgb(225,111,53)" fg:x="27" fg:w="1"/><text x="2.1108%" y="1695.50"></text></g><g><title>std::fs::buffer_capacity_required (1 samples, 0.07%)</title><rect x="1.9297%" y="1685" width="0.0689%" height="15" fill="rgb(238,160,17)" fg:x="28" fg:w="1"/><text x="2.1797%" y="1695.50"></text></g><g><title>std::io::default_read_to_end (1 samples, 0.07%)</title><rect x="1.9986%" y="1685" width="0.0689%" height="15" fill="rgb(214,148,48)" fg:x="29" fg:w="1"/><text x="2.2486%" y="1695.50"></text></g><g><title>std::path::Path::file_name (1 samples, 0.07%)</title><rect x="2.0675%" y="1685" width="0.0689%" height="15" fill="rgb(232,36,49)" fg:x="30" fg:w="1"/><text x="2.3175%" y="1695.50"></text></g><g><title>std::path::Path::is_dir (1 samples, 0.07%)</title><rect x="2.1365%" y="1685" width="0.0689%" height="15" fill="rgb(209,103,24)" fg:x="31" fg:w="1"/><text x="2.3865%" y="1695.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.07%)</title><rect x="2.2054%" y="1685" width="0.0689%" height="15" fill="rgb(229,88,8)" fg:x="32" fg:w="1"/><text x="2.4554%" y="1695.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.07%)</title><rect x="2.8256%" y="1653" width="0.0689%" height="15" fill="rgb(213,181,19)" fg:x="41" fg:w="1"/><text x="3.0756%" y="1663.50"></text></g><g><title>sysinfo::linux::component::Component::from_hwmon::{{closure}} (1 samples, 0.07%)</title><rect x="2.8256%" y="1637" width="0.0689%" height="15" fill="rgb(254,191,54)" fg:x="41" fg:w="1"/><text x="3.0756%" y="1647.50"></text></g><g><title>std::ffi::os_str::OsStr::to_str (1 samples, 0.07%)</title><rect x="2.8256%" y="1621" width="0.0689%" height="15" fill="rgb(241,83,37)" fg:x="41" fg:w="1"/><text x="3.0756%" y="1631.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (2 samples, 0.14%)</title><rect x="2.8946%" y="1653" width="0.1378%" height="15" fill="rgb(233,36,39)" fg:x="42" fg:w="2"/><text x="3.1446%" y="1663.50"></text></g><g><title>sysinfo::linux::component::get_components (12 samples, 0.83%)</title><rect x="2.2743%" y="1685" width="0.8270%" height="15" fill="rgb(226,3,54)" fg:x="33" fg:w="12"/><text x="2.5243%" y="1695.50"></text></g><g><title>sysinfo::linux::component::Component::from_hwmon (10 samples, 0.69%)</title><rect x="2.4121%" y="1669" width="0.6892%" height="15" fill="rgb(245,192,40)" fg:x="35" fg:w="10"/><text x="2.6621%" y="1679.50"></text></g><g><title>sysinfo::linux::component::fill_component (1 samples, 0.07%)</title><rect x="3.0324%" y="1653" width="0.0689%" height="15" fill="rgb(238,167,29)" fg:x="44" fg:w="1"/><text x="3.2824%" y="1663.50"></text></g><g><title>sysinfo::linux::component::read_number_from_file (1 samples, 0.07%)</title><rect x="3.1013%" y="1685" width="0.0689%" height="15" fill="rgb(232,182,51)" fg:x="45" fg:w="1"/><text x="3.3513%" y="1695.50"></text></g><g><title>sysinfo::linux::cpu::CpusWrapper::refresh (1 samples, 0.07%)</title><rect x="3.1702%" y="1685" width="0.0689%" height="15" fill="rgb(231,60,39)" fg:x="46" fg:w="1"/><text x="3.4202%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="3.1702%" y="1669" width="0.0689%" height="15" fill="rgb(208,69,12)" fg:x="46" fg:w="1"/><text x="3.4202%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="3.1702%" y="1653" width="0.0689%" height="15" fill="rgb(235,93,37)" fg:x="46" fg:w="1"/><text x="3.4202%" y="1663.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="3.1702%" y="1637" width="0.0689%" height="15" fill="rgb(213,116,39)" fg:x="46" fg:w="1"/><text x="3.4202%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="3.1702%" y="1621" width="0.0689%" height="15" fill="rgb(222,207,29)" fg:x="46" fg:w="1"/><text x="3.4202%" y="1631.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="3.1702%" y="1605" width="0.0689%" height="15" fill="rgb(206,96,30)" fg:x="46" fg:w="1"/><text x="3.4202%" y="1615.50"></text></g><g><title>[[heap]] (48 samples, 3.31%)</title><rect x="0.0000%" y="1701" width="3.3081%" height="15" fill="rgb(218,138,4)" fg:x="0" fg:w="48"/><text x="0.2500%" y="1711.50">[[h..</text></g><g><title>sysinfo::linux::disk::get_all_disks (1 samples, 0.07%)</title><rect x="3.2391%" y="1685" width="0.0689%" height="15" fill="rgb(250,191,14)" fg:x="47" fg:w="1"/><text x="3.4891%" y="1695.50"></text></g><g><title>sysinfo::linux::disk::get_all_disks_inner (1 samples, 0.07%)</title><rect x="3.2391%" y="1669" width="0.0689%" height="15" fill="rgb(239,60,40)" fg:x="47" fg:w="1"/><text x="3.4891%" y="1679.50"></text></g><g><title>std::fs::read_dir (1 samples, 0.07%)</title><rect x="3.2391%" y="1653" width="0.0689%" height="15" fill="rgb(206,27,48)" fg:x="47" fg:w="1"/><text x="3.4891%" y="1663.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="3.3081%" y="1685" width="0.0689%" height="15" fill="rgb(225,35,8)" fg:x="48" fg:w="1"/><text x="3.5581%" y="1695.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.14%)</title><rect x="3.3770%" y="1685" width="0.1378%" height="15" fill="rgb(250,213,24)" fg:x="49" fg:w="2"/><text x="3.6270%" y="1695.50"></text></g><g><title>&lt;hdf5::handle::Handle as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="3.5148%" y="1685" width="0.0689%" height="15" fill="rgb(247,123,22)" fg:x="51" fg:w="1"/><text x="3.7648%" y="1695.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (4 samples, 0.28%)</title><rect x="3.5837%" y="1685" width="0.2757%" height="15" fill="rgb(231,138,38)" fg:x="52" fg:w="4"/><text x="3.8337%" y="1695.50"></text></g><g><title>std::sys::unix::fs::File::read (2 samples, 0.14%)</title><rect x="3.7216%" y="1669" width="0.1378%" height="15" fill="rgb(231,145,46)" fg:x="54" fg:w="2"/><text x="3.9716%" y="1679.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (2 samples, 0.14%)</title><rect x="3.7216%" y="1653" width="0.1378%" height="15" fill="rgb(251,118,11)" fg:x="54" fg:w="2"/><text x="3.9716%" y="1663.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (1 samples, 0.07%)</title><rect x="3.8594%" y="1685" width="0.0689%" height="15" fill="rgb(217,147,25)" fg:x="56" fg:w="1"/><text x="4.1094%" y="1695.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="3.9283%" y="1685" width="0.2068%" height="15" fill="rgb(247,81,37)" fg:x="57" fg:w="3"/><text x="4.1783%" y="1695.50"></text></g><g><title>&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="4.1351%" y="1685" width="0.0689%" height="15" fill="rgb(209,12,38)" fg:x="60" fg:w="1"/><text x="4.3851%" y="1695.50"></text></g><g><title>std::sys::unix::os::set_errno (1 samples, 0.07%)</title><rect x="4.1351%" y="1669" width="0.0689%" height="15" fill="rgb(227,1,9)" fg:x="60" fg:w="1"/><text x="4.3851%" y="1679.50"></text></g><g><title>[generator] (1 samples, 0.07%)</title><rect x="4.2040%" y="1685" width="0.0689%" height="15" fill="rgb(248,47,43)" fg:x="61" fg:w="1"/><text x="4.4540%" y="1695.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.07%)</title><rect x="4.2040%" y="1669" width="0.0689%" height="15" fill="rgb(221,10,30)" fg:x="61" fg:w="1"/><text x="4.4540%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::InnerReadDir&gt; (1 samples, 0.07%)</title><rect x="4.2040%" y="1653" width="0.0689%" height="15" fill="rgb(210,229,1)" fg:x="61" fg:w="1"/><text x="4.4540%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::Dir&gt; (1 samples, 0.07%)</title><rect x="4.2040%" y="1637" width="0.0689%" height="15" fill="rgb(222,148,37)" fg:x="61" fg:w="1"/><text x="4.4540%" y="1647.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="4.2729%" y="1685" width="0.0689%" height="15" fill="rgb(234,67,33)" fg:x="62" fg:w="1"/><text x="4.5229%" y="1695.50"></text></g><g><title>__close (1 samples, 0.07%)</title><rect x="4.3418%" y="1685" width="0.0689%" height="15" fill="rgb(247,98,35)" fg:x="63" fg:w="1"/><text x="4.5918%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="4.4108%" y="1685" width="0.0689%" height="15" fill="rgb(247,138,52)" fg:x="64" fg:w="1"/><text x="4.6608%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="4.4108%" y="1669" width="0.0689%" height="15" fill="rgb(213,79,30)" fg:x="64" fg:w="1"/><text x="4.6608%" y="1679.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.07%)</title><rect x="4.4108%" y="1653" width="0.0689%" height="15" fill="rgb(246,177,23)" fg:x="64" fg:w="1"/><text x="4.6608%" y="1663.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.07%)</title><rect x="4.4108%" y="1637" width="0.0689%" height="15" fill="rgb(230,62,27)" fg:x="64" fg:w="1"/><text x="4.6608%" y="1647.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.28%)</title><rect x="4.4797%" y="1685" width="0.2757%" height="15" fill="rgb(216,154,8)" fg:x="65" fg:w="4"/><text x="4.7297%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.21%)</title><rect x="4.5486%" y="1669" width="0.2068%" height="15" fill="rgb(244,35,45)" fg:x="66" fg:w="3"/><text x="4.7986%" y="1679.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.21%)</title><rect x="4.5486%" y="1653" width="0.2068%" height="15" fill="rgb(251,115,12)" fg:x="66" fg:w="3"/><text x="4.7986%" y="1663.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.21%)</title><rect x="4.5486%" y="1637" width="0.2068%" height="15" fill="rgb(240,54,50)" fg:x="66" fg:w="3"/><text x="4.7986%" y="1647.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (1 samples, 0.07%)</title><rect x="4.7553%" y="1685" width="0.0689%" height="15" fill="rgb(233,84,52)" fg:x="69" fg:w="1"/><text x="5.0053%" y="1695.50"></text></g><g><title>alloc::string::String::push (4 samples, 0.28%)</title><rect x="4.8243%" y="1685" width="0.2757%" height="15" fill="rgb(207,117,47)" fg:x="70" fg:w="4"/><text x="5.0743%" y="1695.50"></text></g><g><title>core::fmt::write (1 samples, 0.07%)</title><rect x="5.0999%" y="1685" width="0.0689%" height="15" fill="rgb(249,43,39)" fg:x="74" fg:w="1"/><text x="5.3499%" y="1695.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="5.1688%" y="1685" width="0.0689%" height="15" fill="rgb(209,38,44)" fg:x="75" fg:w="1"/><text x="5.4188%" y="1695.50"></text></g><g><title>core::slice::memchr::memchr_aligned (4 samples, 0.28%)</title><rect x="5.2378%" y="1685" width="0.2757%" height="15" fill="rgb(236,212,23)" fg:x="76" fg:w="4"/><text x="5.4878%" y="1695.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.07%)</title><rect x="5.5134%" y="1685" width="0.0689%" height="15" fill="rgb(242,79,21)" fg:x="80" fg:w="1"/><text x="5.7634%" y="1695.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.07%)</title><rect x="5.5824%" y="1685" width="0.0689%" height="15" fill="rgb(211,96,35)" fg:x="81" fg:w="1"/><text x="5.8324%" y="1695.50"></text></g><g><title>hdf5::sync::sync (1 samples, 0.07%)</title><rect x="5.6513%" y="1685" width="0.0689%" height="15" fill="rgb(253,215,40)" fg:x="82" fg:w="1"/><text x="5.9013%" y="1695.50"></text></g><g><title>hdf5::hl::container::Writer::write_from_buf::{{closure}} (1 samples, 0.07%)</title><rect x="5.6513%" y="1669" width="0.0689%" height="15" fill="rgb(211,81,21)" fg:x="82" fg:w="1"/><text x="5.9013%" y="1679.50"></text></g><g><title>malloc (2 samples, 0.14%)</title><rect x="5.7202%" y="1685" width="0.1378%" height="15" fill="rgb(208,190,38)" fg:x="83" fg:w="2"/><text x="5.9702%" y="1695.50"></text></g><g><title>open64 (6 samples, 0.41%)</title><rect x="5.8580%" y="1685" width="0.4135%" height="15" fill="rgb(235,213,38)" fg:x="85" fg:w="6"/><text x="6.1080%" y="1695.50"></text></g><g><title>std::path::Components::parse_next_component_back (1 samples, 0.07%)</title><rect x="6.2715%" y="1685" width="0.0689%" height="15" fill="rgb(237,122,38)" fg:x="91" fg:w="1"/><text x="6.5215%" y="1695.50"></text></g><g><title>std::path::Path::_join (1 samples, 0.07%)</title><rect x="6.3405%" y="1685" width="0.0689%" height="15" fill="rgb(244,218,35)" fg:x="92" fg:w="1"/><text x="6.5905%" y="1695.50"></text></g><g><title>[[stack]] (46 samples, 3.17%)</title><rect x="3.3081%" y="1701" width="3.1702%" height="15" fill="rgb(240,68,47)" fg:x="48" fg:w="46"/><text x="3.5581%" y="1711.50">[[s..</text></g><g><title>sysinfo::linux::utils::get_all_data (1 samples, 0.07%)</title><rect x="6.4094%" y="1685" width="0.0689%" height="15" fill="rgb(210,16,53)" fg:x="93" fg:w="1"/><text x="6.6594%" y="1695.50"></text></g><g><title>std::fs::File::open (1 samples, 0.07%)</title><rect x="6.4094%" y="1669" width="0.0689%" height="15" fill="rgb(235,124,12)" fg:x="93" fg:w="1"/><text x="6.6594%" y="1679.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="6.4783%" y="1685" width="0.0689%" height="15" fill="rgb(224,169,11)" fg:x="94" fg:w="1"/><text x="6.7283%" y="1695.50"></text></g><g><title>[anon] (2 samples, 0.14%)</title><rect x="6.4783%" y="1701" width="0.1378%" height="15" fill="rgb(250,166,2)" fg:x="94" fg:w="2"/><text x="6.7283%" y="1711.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (1 samples, 0.07%)</title><rect x="6.5472%" y="1685" width="0.0689%" height="15" fill="rgb(242,216,29)" fg:x="95" fg:w="1"/><text x="6.7972%" y="1695.50"></text></g><g><title>&lt;generator::SensorDataHandler&lt;T&gt; as generator::Updatable&gt;::update (1 samples, 0.07%)</title><rect x="6.6161%" y="1685" width="0.0689%" height="15" fill="rgb(230,116,27)" fg:x="96" fg:w="1"/><text x="6.8661%" y="1695.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (1 samples, 0.07%)</title><rect x="6.6161%" y="1669" width="0.0689%" height="15" fill="rgb(228,99,48)" fg:x="96" fg:w="1"/><text x="6.8661%" y="1679.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="6.6850%" y="1685" width="0.0689%" height="15" fill="rgb(253,11,6)" fg:x="97" fg:w="1"/><text x="6.9350%" y="1695.50"></text></g><g><title>[generator] (4 samples, 0.28%)</title><rect x="6.6161%" y="1701" width="0.2757%" height="15" fill="rgb(247,143,39)" fg:x="96" fg:w="4"/><text x="6.8661%" y="1711.50"></text></g><g><title>std::fs::OpenOptions::_open (2 samples, 0.14%)</title><rect x="6.7540%" y="1685" width="0.1378%" height="15" fill="rgb(236,97,10)" fg:x="98" fg:w="2"/><text x="7.0040%" y="1695.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.41%)</title><rect x="6.8918%" y="1701" width="0.4135%" height="15" fill="rgb(233,208,19)" fg:x="100" fg:w="6"/><text x="7.1418%" y="1711.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="7.2364%" y="1685" width="0.0689%" height="15" fill="rgb(216,164,2)" fg:x="105" fg:w="1"/><text x="7.4864%" y="1695.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="7.2364%" y="1669" width="0.0689%" height="15" fill="rgb(220,129,5)" fg:x="105" fg:w="1"/><text x="7.4864%" y="1679.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="7.2364%" y="1653" width="0.0689%" height="15" fill="rgb(242,17,10)" fg:x="105" fg:w="1"/><text x="7.4864%" y="1663.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="7.2364%" y="1637" width="0.0689%" height="15" fill="rgb(242,107,0)" fg:x="105" fg:w="1"/><text x="7.4864%" y="1647.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.07%)</title><rect x="7.2364%" y="1621" width="0.0689%" height="15" fill="rgb(251,28,31)" fg:x="105" fg:w="1"/><text x="7.4864%" y="1631.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="7.2364%" y="1605" width="0.0689%" height="15" fill="rgb(233,223,10)" fg:x="105" fg:w="1"/><text x="7.4864%" y="1615.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="7.2364%" y="1589" width="0.0689%" height="15" fill="rgb(215,21,27)" fg:x="105" fg:w="1"/><text x="7.4864%" y="1599.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="7.2364%" y="1573" width="0.0689%" height="15" fill="rgb(232,23,21)" fg:x="105" fg:w="1"/><text x="7.4864%" y="1583.50"></text></g><g><title>__ctype_init (4 samples, 0.28%)</title><rect x="7.9945%" y="1669" width="0.2757%" height="15" fill="rgb(244,5,23)" fg:x="116" fg:w="4"/><text x="8.2445%" y="1679.50"></text></g><g><title>__sigsetjmp (4 samples, 0.28%)</title><rect x="8.2702%" y="1669" width="0.2757%" height="15" fill="rgb(226,81,46)" fg:x="120" fg:w="4"/><text x="8.5202%" y="1679.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (1 samples, 0.07%)</title><rect x="8.5458%" y="1237" width="0.0689%" height="15" fill="rgb(247,70,30)" fg:x="124" fg:w="1"/><text x="8.7958%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="8.5458%" y="1221" width="0.0689%" height="15" fill="rgb(212,68,19)" fg:x="124" fg:w="1"/><text x="8.7958%" y="1231.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (5 samples, 0.34%)</title><rect x="8.6147%" y="1125" width="0.3446%" height="15" fill="rgb(240,187,13)" fg:x="125" fg:w="5"/><text x="8.8647%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (5 samples, 0.34%)</title><rect x="8.6147%" y="1109" width="0.3446%" height="15" fill="rgb(223,113,26)" fg:x="125" fg:w="5"/><text x="8.8647%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.34%)</title><rect x="8.6147%" y="1093" width="0.3446%" height="15" fill="rgb(206,192,2)" fg:x="125" fg:w="5"/><text x="8.8647%" y="1103.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (7 samples, 0.48%)</title><rect x="8.5458%" y="1301" width="0.4824%" height="15" fill="rgb(241,108,4)" fg:x="124" fg:w="7"/><text x="8.7958%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (7 samples, 0.48%)</title><rect x="8.5458%" y="1285" width="0.4824%" height="15" fill="rgb(247,173,49)" fg:x="124" fg:w="7"/><text x="8.7958%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (7 samples, 0.48%)</title><rect x="8.5458%" y="1269" width="0.4824%" height="15" fill="rgb(224,114,35)" fg:x="124" fg:w="7"/><text x="8.7958%" y="1279.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (7 samples, 0.48%)</title><rect x="8.5458%" y="1253" width="0.4824%" height="15" fill="rgb(245,159,27)" fg:x="124" fg:w="7"/><text x="8.7958%" y="1263.50"></text></g><g><title>crossbeam_epoch::default::pin (6 samples, 0.41%)</title><rect x="8.6147%" y="1237" width="0.4135%" height="15" fill="rgb(245,172,44)" fg:x="125" fg:w="6"/><text x="8.8647%" y="1247.50"></text></g><g><title>crossbeam_epoch::default::with_handle (6 samples, 0.41%)</title><rect x="8.6147%" y="1221" width="0.4135%" height="15" fill="rgb(236,23,11)" fg:x="125" fg:w="6"/><text x="8.8647%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.41%)</title><rect x="8.6147%" y="1205" width="0.4135%" height="15" fill="rgb(205,117,38)" fg:x="125" fg:w="6"/><text x="8.8647%" y="1215.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (6 samples, 0.41%)</title><rect x="8.6147%" y="1189" width="0.4135%" height="15" fill="rgb(237,72,25)" fg:x="125" fg:w="6"/><text x="8.8647%" y="1199.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (6 samples, 0.41%)</title><rect x="8.6147%" y="1173" width="0.4135%" height="15" fill="rgb(244,70,9)" fg:x="125" fg:w="6"/><text x="8.8647%" y="1183.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (6 samples, 0.41%)</title><rect x="8.6147%" y="1157" width="0.4135%" height="15" fill="rgb(217,125,39)" fg:x="125" fg:w="6"/><text x="8.8647%" y="1167.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (6 samples, 0.41%)</title><rect x="8.6147%" y="1141" width="0.4135%" height="15" fill="rgb(235,36,10)" fg:x="125" fg:w="6"/><text x="8.8647%" y="1151.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (1 samples, 0.07%)</title><rect x="8.9593%" y="1125" width="0.0689%" height="15" fill="rgb(251,123,47)" fg:x="130" fg:w="1"/><text x="9.2093%" y="1135.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (1 samples, 0.07%)</title><rect x="8.9593%" y="1109" width="0.0689%" height="15" fill="rgb(221,13,13)" fg:x="130" fg:w="1"/><text x="9.2093%" y="1119.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="8.9593%" y="1093" width="0.0689%" height="15" fill="rgb(238,131,9)" fg:x="130" fg:w="1"/><text x="9.2093%" y="1103.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (1 samples, 0.07%)</title><rect x="8.9593%" y="1077" width="0.0689%" height="15" fill="rgb(211,50,8)" fg:x="130" fg:w="1"/><text x="9.2093%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.07%)</title><rect x="8.9593%" y="1061" width="0.0689%" height="15" fill="rgb(245,182,24)" fg:x="130" fg:w="1"/><text x="9.2093%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="8.9593%" y="1045" width="0.0689%" height="15" fill="rgb(242,14,37)" fg:x="130" fg:w="1"/><text x="9.2093%" y="1055.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.07%)</title><rect x="9.0283%" y="1301" width="0.0689%" height="15" fill="rgb(246,228,12)" fg:x="131" fg:w="1"/><text x="9.2783%" y="1311.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.07%)</title><rect x="9.0283%" y="1285" width="0.0689%" height="15" fill="rgb(213,55,15)" fg:x="131" fg:w="1"/><text x="9.2783%" y="1295.50"></text></g><g><title>core::mem::replace (1 samples, 0.07%)</title><rect x="9.0283%" y="1269" width="0.0689%" height="15" fill="rgb(209,9,3)" fg:x="131" fg:w="1"/><text x="9.2783%" y="1279.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="9.0283%" y="1253" width="0.0689%" height="15" fill="rgb(230,59,30)" fg:x="131" fg:w="1"/><text x="9.2783%" y="1263.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (3 samples, 0.21%)</title><rect x="9.0972%" y="1109" width="0.2068%" height="15" fill="rgb(209,121,21)" fg:x="132" fg:w="3"/><text x="9.3472%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (3 samples, 0.21%)</title><rect x="9.0972%" y="1093" width="0.2068%" height="15" fill="rgb(220,109,13)" fg:x="132" fg:w="3"/><text x="9.3472%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.21%)</title><rect x="9.0972%" y="1077" width="0.2068%" height="15" fill="rgb(232,18,1)" fg:x="132" fg:w="3"/><text x="9.3472%" y="1087.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (1 samples, 0.07%)</title><rect x="9.3039%" y="1109" width="0.0689%" height="15" fill="rgb(215,41,42)" fg:x="135" fg:w="1"/><text x="9.5539%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.07%)</title><rect x="9.3039%" y="1093" width="0.0689%" height="15" fill="rgb(224,123,36)" fg:x="135" fg:w="1"/><text x="9.5539%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="9.3039%" y="1077" width="0.0689%" height="15" fill="rgb(240,125,3)" fg:x="135" fg:w="1"/><text x="9.5539%" y="1087.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (1 samples, 0.07%)</title><rect x="9.3728%" y="1093" width="0.0689%" height="15" fill="rgb(205,98,50)" fg:x="136" fg:w="1"/><text x="9.6228%" y="1103.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="9.3728%" y="1077" width="0.0689%" height="15" fill="rgb(205,185,37)" fg:x="136" fg:w="1"/><text x="9.6228%" y="1087.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (1 samples, 0.07%)</title><rect x="9.3728%" y="1061" width="0.0689%" height="15" fill="rgb(238,207,15)" fg:x="136" fg:w="1"/><text x="9.6228%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.07%)</title><rect x="9.3728%" y="1045" width="0.0689%" height="15" fill="rgb(213,199,42)" fg:x="136" fg:w="1"/><text x="9.6228%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="9.3728%" y="1029" width="0.0689%" height="15" fill="rgb(235,201,11)" fg:x="136" fg:w="1"/><text x="9.6228%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (14 samples, 0.96%)</title><rect x="8.5458%" y="1413" width="0.9649%" height="15" fill="rgb(207,46,11)" fg:x="124" fg:w="14"/><text x="8.7958%" y="1423.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (14 samples, 0.96%)</title><rect x="8.5458%" y="1397" width="0.9649%" height="15" fill="rgb(241,35,35)" fg:x="124" fg:w="14"/><text x="8.7958%" y="1407.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (14 samples, 0.96%)</title><rect x="8.5458%" y="1381" width="0.9649%" height="15" fill="rgb(243,32,47)" fg:x="124" fg:w="14"/><text x="8.7958%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (14 samples, 0.96%)</title><rect x="8.5458%" y="1365" width="0.9649%" height="15" fill="rgb(247,202,23)" fg:x="124" fg:w="14"/><text x="8.7958%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.96%)</title><rect x="8.5458%" y="1349" width="0.9649%" height="15" fill="rgb(219,102,11)" fg:x="124" fg:w="14"/><text x="8.7958%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.96%)</title><rect x="8.5458%" y="1333" width="0.9649%" height="15" fill="rgb(243,110,44)" fg:x="124" fg:w="14"/><text x="8.7958%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.96%)</title><rect x="8.5458%" y="1317" width="0.9649%" height="15" fill="rgb(222,74,54)" fg:x="124" fg:w="14"/><text x="8.7958%" y="1327.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.41%)</title><rect x="9.0972%" y="1301" width="0.4135%" height="15" fill="rgb(216,99,12)" fg:x="132" fg:w="6"/><text x="9.3472%" y="1311.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (6 samples, 0.41%)</title><rect x="9.0972%" y="1285" width="0.4135%" height="15" fill="rgb(226,22,26)" fg:x="132" fg:w="6"/><text x="9.3472%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (6 samples, 0.41%)</title><rect x="9.0972%" y="1269" width="0.4135%" height="15" fill="rgb(217,163,10)" fg:x="132" fg:w="6"/><text x="9.3472%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (6 samples, 0.41%)</title><rect x="9.0972%" y="1253" width="0.4135%" height="15" fill="rgb(213,25,53)" fg:x="132" fg:w="6"/><text x="9.3472%" y="1263.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (6 samples, 0.41%)</title><rect x="9.0972%" y="1237" width="0.4135%" height="15" fill="rgb(252,105,26)" fg:x="132" fg:w="6"/><text x="9.3472%" y="1247.50"></text></g><g><title>crossbeam_epoch::default::pin (6 samples, 0.41%)</title><rect x="9.0972%" y="1221" width="0.4135%" height="15" fill="rgb(220,39,43)" fg:x="132" fg:w="6"/><text x="9.3472%" y="1231.50"></text></g><g><title>crossbeam_epoch::default::with_handle (6 samples, 0.41%)</title><rect x="9.0972%" y="1205" width="0.4135%" height="15" fill="rgb(229,68,48)" fg:x="132" fg:w="6"/><text x="9.3472%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.41%)</title><rect x="9.0972%" y="1189" width="0.4135%" height="15" fill="rgb(252,8,32)" fg:x="132" fg:w="6"/><text x="9.3472%" y="1199.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (6 samples, 0.41%)</title><rect x="9.0972%" y="1173" width="0.4135%" height="15" fill="rgb(223,20,43)" fg:x="132" fg:w="6"/><text x="9.3472%" y="1183.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (6 samples, 0.41%)</title><rect x="9.0972%" y="1157" width="0.4135%" height="15" fill="rgb(229,81,49)" fg:x="132" fg:w="6"/><text x="9.3472%" y="1167.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (6 samples, 0.41%)</title><rect x="9.0972%" y="1141" width="0.4135%" height="15" fill="rgb(236,28,36)" fg:x="132" fg:w="6"/><text x="9.3472%" y="1151.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (6 samples, 0.41%)</title><rect x="9.0972%" y="1125" width="0.4135%" height="15" fill="rgb(249,185,26)" fg:x="132" fg:w="6"/><text x="9.3472%" y="1135.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (2 samples, 0.14%)</title><rect x="9.3728%" y="1109" width="0.1378%" height="15" fill="rgb(249,174,33)" fg:x="136" fg:w="2"/><text x="9.6228%" y="1119.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (1 samples, 0.07%)</title><rect x="9.4418%" y="1093" width="0.0689%" height="15" fill="rgb(233,201,37)" fg:x="137" fg:w="1"/><text x="9.6918%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="9.4418%" y="1077" width="0.0689%" height="15" fill="rgb(221,78,26)" fg:x="137" fg:w="1"/><text x="9.6918%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.34%)</title><rect x="9.5107%" y="1205" width="0.3446%" height="15" fill="rgb(250,127,30)" fg:x="138" fg:w="5"/><text x="9.7607%" y="1215.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.34%)</title><rect x="9.5107%" y="1189" width="0.3446%" height="15" fill="rgb(230,49,44)" fg:x="138" fg:w="5"/><text x="9.7607%" y="1199.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.34%)</title><rect x="9.5107%" y="1173" width="0.3446%" height="15" fill="rgb(229,67,23)" fg:x="138" fg:w="5"/><text x="9.7607%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.34%)</title><rect x="9.5107%" y="1157" width="0.3446%" height="15" fill="rgb(249,83,47)" fg:x="138" fg:w="5"/><text x="9.7607%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.34%)</title><rect x="9.5107%" y="1141" width="0.3446%" height="15" fill="rgb(215,43,3)" fg:x="138" fg:w="5"/><text x="9.7607%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.34%)</title><rect x="9.5107%" y="1125" width="0.3446%" height="15" fill="rgb(238,154,13)" fg:x="138" fg:w="5"/><text x="9.7607%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.34%)</title><rect x="9.5107%" y="1109" width="0.3446%" height="15" fill="rgb(219,56,2)" fg:x="138" fg:w="5"/><text x="9.7607%" y="1119.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.34%)</title><rect x="9.5107%" y="1093" width="0.3446%" height="15" fill="rgb(233,0,4)" fg:x="138" fg:w="5"/><text x="9.7607%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (5 samples, 0.34%)</title><rect x="9.5107%" y="1077" width="0.3446%" height="15" fill="rgb(235,30,7)" fg:x="138" fg:w="5"/><text x="9.7607%" y="1087.50"></text></g><g><title>sysinfo::linux::cpu::CpusWrapper::refresh::{{closure}} (5 samples, 0.34%)</title><rect x="9.5107%" y="1061" width="0.3446%" height="15" fill="rgb(250,79,13)" fg:x="138" fg:w="5"/><text x="9.7607%" y="1071.50"></text></g><g><title>sysinfo::linux::cpu::get_cpu_frequency (5 samples, 0.34%)</title><rect x="9.5107%" y="1045" width="0.3446%" height="15" fill="rgb(211,146,34)" fg:x="138" fg:w="5"/><text x="9.7607%" y="1055.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (5 samples, 0.34%)</title><rect x="9.5107%" y="1029" width="0.3446%" height="15" fill="rgb(228,22,38)" fg:x="138" fg:w="5"/><text x="9.7607%" y="1039.50"></text></g><g><title>sysinfo::linux::cpu::get_cpu_frequency::{{closure}} (5 samples, 0.34%)</title><rect x="9.5107%" y="1013" width="0.3446%" height="15" fill="rgb(235,168,5)" fg:x="138" fg:w="5"/><text x="9.7607%" y="1023.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (5 samples, 0.34%)</title><rect x="9.5107%" y="997" width="0.3446%" height="15" fill="rgb(221,155,16)" fg:x="138" fg:w="5"/><text x="9.7607%" y="1007.50"></text></g><g><title>alloc::string::String::reserve (5 samples, 0.34%)</title><rect x="9.5107%" y="981" width="0.3446%" height="15" fill="rgb(215,215,53)" fg:x="138" fg:w="5"/><text x="9.7607%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.34%)</title><rect x="9.5107%" y="965" width="0.3446%" height="15" fill="rgb(223,4,10)" fg:x="138" fg:w="5"/><text x="9.7607%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.34%)</title><rect x="9.5107%" y="949" width="0.3446%" height="15" fill="rgb(234,103,6)" fg:x="138" fg:w="5"/><text x="9.7607%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.34%)</title><rect x="9.5107%" y="933" width="0.3446%" height="15" fill="rgb(227,97,0)" fg:x="138" fg:w="5"/><text x="9.7607%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.34%)</title><rect x="9.5107%" y="917" width="0.3446%" height="15" fill="rgb(234,150,53)" fg:x="138" fg:w="5"/><text x="9.7607%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.34%)</title><rect x="9.5107%" y="901" width="0.3446%" height="15" fill="rgb(228,201,54)" fg:x="138" fg:w="5"/><text x="9.7607%" y="911.50"></text></g><g><title>malloc (5 samples, 0.34%)</title><rect x="9.5107%" y="885" width="0.3446%" height="15" fill="rgb(222,22,37)" fg:x="138" fg:w="5"/><text x="9.7607%" y="895.50"></text></g><g><title>[libc.so.6] (5 samples, 0.34%)</title><rect x="9.5107%" y="869" width="0.3446%" height="15" fill="rgb(237,53,32)" fg:x="138" fg:w="5"/><text x="9.7607%" y="879.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.07%)</title><rect x="9.8553%" y="1157" width="0.0689%" height="15" fill="rgb(233,25,53)" fg:x="143" fg:w="1"/><text x="10.1053%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="9.8553%" y="1141" width="0.0689%" height="15" fill="rgb(210,40,34)" fg:x="143" fg:w="1"/><text x="10.1053%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="9.8553%" y="1125" width="0.0689%" height="15" fill="rgb(241,220,44)" fg:x="143" fg:w="1"/><text x="10.1053%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.07%)</title><rect x="9.8553%" y="1109" width="0.0689%" height="15" fill="rgb(235,28,35)" fg:x="143" fg:w="1"/><text x="10.1053%" y="1119.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="9.8553%" y="1093" width="0.0689%" height="15" fill="rgb(210,56,17)" fg:x="143" fg:w="1"/><text x="10.1053%" y="1103.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.07%)</title><rect x="9.8553%" y="1077" width="0.0689%" height="15" fill="rgb(224,130,29)" fg:x="143" fg:w="1"/><text x="10.1053%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="9.8553%" y="1061" width="0.0689%" height="15" fill="rgb(235,212,8)" fg:x="143" fg:w="1"/><text x="10.1053%" y="1071.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="9.8553%" y="1045" width="0.0689%" height="15" fill="rgb(223,33,50)" fg:x="143" fg:w="1"/><text x="10.1053%" y="1055.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.07%)</title><rect x="9.8553%" y="1029" width="0.0689%" height="15" fill="rgb(219,149,13)" fg:x="143" fg:w="1"/><text x="10.1053%" y="1039.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (1 samples, 0.07%)</title><rect x="9.8553%" y="1013" width="0.0689%" height="15" fill="rgb(250,156,29)" fg:x="143" fg:w="1"/><text x="10.1053%" y="1023.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (1 samples, 0.07%)</title><rect x="9.8553%" y="997" width="0.0689%" height="15" fill="rgb(216,193,19)" fg:x="143" fg:w="1"/><text x="10.1053%" y="1007.50"></text></g><g><title>std::sync::condvar::Condvar::wait (1 samples, 0.07%)</title><rect x="9.8553%" y="981" width="0.0689%" height="15" fill="rgb(216,135,14)" fg:x="143" fg:w="1"/><text x="10.1053%" y="991.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (1 samples, 0.07%)</title><rect x="9.8553%" y="965" width="0.0689%" height="15" fill="rgb(241,47,5)" fg:x="143" fg:w="1"/><text x="10.1053%" y="975.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (1 samples, 0.07%)</title><rect x="9.8553%" y="949" width="0.0689%" height="15" fill="rgb(233,42,35)" fg:x="143" fg:w="1"/><text x="10.1053%" y="959.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (1 samples, 0.07%)</title><rect x="9.8553%" y="933" width="0.0689%" height="15" fill="rgb(231,13,6)" fg:x="143" fg:w="1"/><text x="10.1053%" y="943.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.07%)</title><rect x="9.8553%" y="917" width="0.0689%" height="15" fill="rgb(207,181,40)" fg:x="143" fg:w="1"/><text x="10.1053%" y="927.50"></text></g><g><title>syscall (1 samples, 0.07%)</title><rect x="9.8553%" y="901" width="0.0689%" height="15" fill="rgb(254,173,49)" fg:x="143" fg:w="1"/><text x="10.1053%" y="911.50"></text></g><g><title>rayon_core::registry::Registry::pop_injected_job (1 samples, 0.07%)</title><rect x="9.9242%" y="1093" width="0.0689%" height="15" fill="rgb(221,1,38)" fg:x="144" fg:w="1"/><text x="10.1742%" y="1103.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::steal (1 samples, 0.07%)</title><rect x="9.9242%" y="1077" width="0.0689%" height="15" fill="rgb(206,124,46)" fg:x="144" fg:w="1"/><text x="10.1742%" y="1087.50"></text></g><g><title>core::sync::atomic::fence (1 samples, 0.07%)</title><rect x="9.9242%" y="1061" width="0.0689%" height="15" fill="rgb(249,21,11)" fg:x="144" fg:w="1"/><text x="10.1742%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (2 samples, 0.14%)</title><rect x="9.9242%" y="1125" width="0.1378%" height="15" fill="rgb(222,201,40)" fg:x="144" fg:w="2"/><text x="10.1742%" y="1135.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (2 samples, 0.14%)</title><rect x="9.9242%" y="1109" width="0.1378%" height="15" fill="rgb(235,61,29)" fg:x="144" fg:w="2"/><text x="10.1742%" y="1119.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (1 samples, 0.07%)</title><rect x="9.9931%" y="1093" width="0.0689%" height="15" fill="rgb(219,207,3)" fg:x="145" fg:w="1"/><text x="10.2431%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.07%)</title><rect x="9.9931%" y="1077" width="0.0689%" height="15" fill="rgb(222,56,46)" fg:x="145" fg:w="1"/><text x="10.2431%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="9.9931%" y="1061" width="0.0689%" height="15" fill="rgb(239,76,54)" fg:x="145" fg:w="1"/><text x="10.2431%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="9.9931%" y="1045" width="0.0689%" height="15" fill="rgb(231,124,27)" fg:x="145" fg:w="1"/><text x="10.2431%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="9.9931%" y="1029" width="0.0689%" height="15" fill="rgb(249,195,6)" fg:x="145" fg:w="1"/><text x="10.2431%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="9.9931%" y="1013" width="0.0689%" height="15" fill="rgb(237,174,47)" fg:x="145" fg:w="1"/><text x="10.2431%" y="1023.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.07%)</title><rect x="9.9931%" y="997" width="0.0689%" height="15" fill="rgb(206,201,31)" fg:x="145" fg:w="1"/><text x="10.2431%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.07%)</title><rect x="9.9931%" y="981" width="0.0689%" height="15" fill="rgb(231,57,52)" fg:x="145" fg:w="1"/><text x="10.2431%" y="991.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (1 samples, 0.07%)</title><rect x="9.9931%" y="965" width="0.0689%" height="15" fill="rgb(248,177,22)" fg:x="145" fg:w="1"/><text x="10.2431%" y="975.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1 samples, 0.07%)</title><rect x="9.9931%" y="949" width="0.0689%" height="15" fill="rgb(215,211,37)" fg:x="145" fg:w="1"/><text x="10.2431%" y="959.50"></text></g><g><title>crossbeam_epoch::default::pin (1 samples, 0.07%)</title><rect x="9.9931%" y="933" width="0.0689%" height="15" fill="rgb(241,128,51)" fg:x="145" fg:w="1"/><text x="10.2431%" y="943.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.07%)</title><rect x="9.9931%" y="917" width="0.0689%" height="15" fill="rgb(227,165,31)" fg:x="145" fg:w="1"/><text x="10.2431%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.07%)</title><rect x="9.9931%" y="901" width="0.0689%" height="15" fill="rgb(228,167,24)" fg:x="145" fg:w="1"/><text x="10.2431%" y="911.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (1 samples, 0.07%)</title><rect x="9.9931%" y="885" width="0.0689%" height="15" fill="rgb(228,143,12)" fg:x="145" fg:w="1"/><text x="10.2431%" y="895.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (1 samples, 0.07%)</title><rect x="9.9931%" y="869" width="0.0689%" height="15" fill="rgb(249,149,8)" fg:x="145" fg:w="1"/><text x="10.2431%" y="879.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.07%)</title><rect x="9.9931%" y="853" width="0.0689%" height="15" fill="rgb(243,35,44)" fg:x="145" fg:w="1"/><text x="10.2431%" y="863.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (1 samples, 0.07%)</title><rect x="9.9931%" y="837" width="0.0689%" height="15" fill="rgb(246,89,9)" fg:x="145" fg:w="1"/><text x="10.2431%" y="847.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (1 samples, 0.07%)</title><rect x="9.9931%" y="821" width="0.0689%" height="15" fill="rgb(233,213,13)" fg:x="145" fg:w="1"/><text x="10.2431%" y="831.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (1 samples, 0.07%)</title><rect x="9.9931%" y="805" width="0.0689%" height="15" fill="rgb(233,141,41)" fg:x="145" fg:w="1"/><text x="10.2431%" y="815.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="9.9931%" y="789" width="0.0689%" height="15" fill="rgb(239,167,4)" fg:x="145" fg:w="1"/><text x="10.2431%" y="799.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (1 samples, 0.07%)</title><rect x="9.9931%" y="773" width="0.0689%" height="15" fill="rgb(209,217,16)" fg:x="145" fg:w="1"/><text x="10.2431%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.07%)</title><rect x="9.9931%" y="757" width="0.0689%" height="15" fill="rgb(219,88,35)" fg:x="145" fg:w="1"/><text x="10.2431%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="9.9931%" y="741" width="0.0689%" height="15" fill="rgb(220,193,23)" fg:x="145" fg:w="1"/><text x="10.2431%" y="751.50"></text></g><g><title>std::sync::poison::Flag::get (1 samples, 0.07%)</title><rect x="10.0620%" y="1077" width="0.0689%" height="15" fill="rgb(230,90,52)" fg:x="146" fg:w="1"/><text x="10.3120%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.07%)</title><rect x="10.0620%" y="1061" width="0.0689%" height="15" fill="rgb(252,106,19)" fg:x="146" fg:w="1"/><text x="10.3120%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="10.0620%" y="1045" width="0.0689%" height="15" fill="rgb(206,74,20)" fg:x="146" fg:w="1"/><text x="10.3120%" y="1055.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.07%)</title><rect x="10.1309%" y="1013" width="0.0689%" height="15" fill="rgb(230,138,44)" fg:x="147" fg:w="1"/><text x="10.3809%" y="1023.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (17 samples, 1.17%)</title><rect x="9.9242%" y="1157" width="1.1716%" height="15" fill="rgb(235,182,43)" fg:x="144" fg:w="17"/><text x="10.1742%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (17 samples, 1.17%)</title><rect x="9.9242%" y="1141" width="1.1716%" height="15" fill="rgb(242,16,51)" fg:x="144" fg:w="17"/><text x="10.1742%" y="1151.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (15 samples, 1.03%)</title><rect x="10.0620%" y="1125" width="1.0338%" height="15" fill="rgb(248,9,4)" fg:x="146" fg:w="15"/><text x="10.3120%" y="1135.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (15 samples, 1.03%)</title><rect x="10.0620%" y="1109" width="1.0338%" height="15" fill="rgb(210,31,22)" fg:x="146" fg:w="15"/><text x="10.3120%" y="1119.50"></text></g><g><title>std::sync::condvar::Condvar::wait (15 samples, 1.03%)</title><rect x="10.0620%" y="1093" width="1.0338%" height="15" fill="rgb(239,54,39)" fg:x="146" fg:w="15"/><text x="10.3120%" y="1103.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (14 samples, 0.96%)</title><rect x="10.1309%" y="1077" width="0.9649%" height="15" fill="rgb(230,99,41)" fg:x="147" fg:w="14"/><text x="10.3809%" y="1087.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (14 samples, 0.96%)</title><rect x="10.1309%" y="1061" width="0.9649%" height="15" fill="rgb(253,106,12)" fg:x="147" fg:w="14"/><text x="10.3809%" y="1071.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (14 samples, 0.96%)</title><rect x="10.1309%" y="1045" width="0.9649%" height="15" fill="rgb(213,46,41)" fg:x="147" fg:w="14"/><text x="10.3809%" y="1055.50"></text></g><g><title>std::sys::unix::futex::futex_wait (14 samples, 0.96%)</title><rect x="10.1309%" y="1029" width="0.9649%" height="15" fill="rgb(215,133,35)" fg:x="147" fg:w="14"/><text x="10.3809%" y="1039.50"></text></g><g><title>syscall (13 samples, 0.90%)</title><rect x="10.1999%" y="1013" width="0.8959%" height="15" fill="rgb(213,28,5)" fg:x="148" fg:w="13"/><text x="10.4499%" y="1023.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="11.0958%" y="981" width="0.0689%" height="15" fill="rgb(215,77,49)" fg:x="161" fg:w="1"/><text x="11.3458%" y="991.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.07%)</title><rect x="11.0958%" y="965" width="0.0689%" height="15" fill="rgb(248,100,22)" fg:x="161" fg:w="1"/><text x="11.3458%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.07%)</title><rect x="11.0958%" y="949" width="0.0689%" height="15" fill="rgb(208,67,9)" fg:x="161" fg:w="1"/><text x="11.3458%" y="959.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (1 samples, 0.07%)</title><rect x="11.0958%" y="933" width="0.0689%" height="15" fill="rgb(219,133,21)" fg:x="161" fg:w="1"/><text x="11.3458%" y="943.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (1 samples, 0.07%)</title><rect x="11.0958%" y="917" width="0.0689%" height="15" fill="rgb(246,46,29)" fg:x="161" fg:w="1"/><text x="11.3458%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.07%)</title><rect x="11.0958%" y="901" width="0.0689%" height="15" fill="rgb(246,185,52)" fg:x="161" fg:w="1"/><text x="11.3458%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="11.0958%" y="885" width="0.0689%" height="15" fill="rgb(252,136,11)" fg:x="161" fg:w="1"/><text x="11.3458%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="11.0958%" y="869" width="0.0689%" height="15" fill="rgb(219,138,53)" fg:x="161" fg:w="1"/><text x="11.3458%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="11.0958%" y="853" width="0.0689%" height="15" fill="rgb(211,51,23)" fg:x="161" fg:w="1"/><text x="11.3458%" y="863.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.07%)</title><rect x="11.0958%" y="837" width="0.0689%" height="15" fill="rgb(247,221,28)" fg:x="161" fg:w="1"/><text x="11.3458%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.07%)</title><rect x="11.0958%" y="821" width="0.0689%" height="15" fill="rgb(251,222,45)" fg:x="161" fg:w="1"/><text x="11.3458%" y="831.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (1 samples, 0.07%)</title><rect x="11.0958%" y="805" width="0.0689%" height="15" fill="rgb(217,162,53)" fg:x="161" fg:w="1"/><text x="11.3458%" y="815.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1 samples, 0.07%)</title><rect x="11.0958%" y="789" width="0.0689%" height="15" fill="rgb(229,93,14)" fg:x="161" fg:w="1"/><text x="11.3458%" y="799.50"></text></g><g><title>crossbeam_epoch::default::pin (1 samples, 0.07%)</title><rect x="11.0958%" y="773" width="0.0689%" height="15" fill="rgb(209,67,49)" fg:x="161" fg:w="1"/><text x="11.3458%" y="783.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.07%)</title><rect x="11.0958%" y="757" width="0.0689%" height="15" fill="rgb(213,87,29)" fg:x="161" fg:w="1"/><text x="11.3458%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.07%)</title><rect x="11.0958%" y="741" width="0.0689%" height="15" fill="rgb(205,151,52)" fg:x="161" fg:w="1"/><text x="11.3458%" y="751.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (1 samples, 0.07%)</title><rect x="11.0958%" y="725" width="0.0689%" height="15" fill="rgb(253,215,39)" fg:x="161" fg:w="1"/><text x="11.3458%" y="735.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (1 samples, 0.07%)</title><rect x="11.0958%" y="709" width="0.0689%" height="15" fill="rgb(221,220,41)" fg:x="161" fg:w="1"/><text x="11.3458%" y="719.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.07%)</title><rect x="11.0958%" y="693" width="0.0689%" height="15" fill="rgb(218,133,21)" fg:x="161" fg:w="1"/><text x="11.3458%" y="703.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (1 samples, 0.07%)</title><rect x="11.0958%" y="677" width="0.0689%" height="15" fill="rgb(221,193,43)" fg:x="161" fg:w="1"/><text x="11.3458%" y="687.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (1 samples, 0.07%)</title><rect x="11.0958%" y="661" width="0.0689%" height="15" fill="rgb(240,128,52)" fg:x="161" fg:w="1"/><text x="11.3458%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.07%)</title><rect x="11.0958%" y="645" width="0.0689%" height="15" fill="rgb(253,114,12)" fg:x="161" fg:w="1"/><text x="11.3458%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.07%)</title><rect x="11.0958%" y="629" width="0.0689%" height="15" fill="rgb(215,223,47)" fg:x="161" fg:w="1"/><text x="11.3458%" y="639.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (29 samples, 2.00%)</title><rect x="9.5107%" y="1253" width="1.9986%" height="15" fill="rgb(248,225,23)" fg:x="138" fg:w="29"/><text x="9.7607%" y="1263.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (29 samples, 2.00%)</title><rect x="9.5107%" y="1237" width="1.9986%" height="15" fill="rgb(250,108,0)" fg:x="138" fg:w="29"/><text x="9.7607%" y="1247.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 2.00%)</title><rect x="9.5107%" y="1221" width="1.9986%" height="15" fill="rgb(228,208,7)" fg:x="138" fg:w="29"/><text x="9.7607%" y="1231.50">r..</text></g><g><title>rayon_core::join::join_context (24 samples, 1.65%)</title><rect x="9.8553%" y="1205" width="1.6540%" height="15" fill="rgb(244,45,10)" fg:x="143" fg:w="24"/><text x="10.1053%" y="1215.50"></text></g><g><title>rayon_core::registry::in_worker (24 samples, 1.65%)</title><rect x="9.8553%" y="1189" width="1.6540%" height="15" fill="rgb(207,125,25)" fg:x="143" fg:w="24"/><text x="10.1053%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (24 samples, 1.65%)</title><rect x="9.8553%" y="1173" width="1.6540%" height="15" fill="rgb(210,195,18)" fg:x="143" fg:w="24"/><text x="10.1053%" y="1183.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.41%)</title><rect x="11.0958%" y="1157" width="0.4135%" height="15" fill="rgb(249,80,12)" fg:x="161" fg:w="6"/><text x="11.3458%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.41%)</title><rect x="11.0958%" y="1141" width="0.4135%" height="15" fill="rgb(221,65,9)" fg:x="161" fg:w="6"/><text x="11.3458%" y="1151.50"></text></g><g><title>std::panicking::try (6 samples, 0.41%)</title><rect x="11.0958%" y="1125" width="0.4135%" height="15" fill="rgb(235,49,36)" fg:x="161" fg:w="6"/><text x="11.3458%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.41%)</title><rect x="11.0958%" y="1109" width="0.4135%" height="15" fill="rgb(225,32,20)" fg:x="161" fg:w="6"/><text x="11.3458%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.41%)</title><rect x="11.0958%" y="1093" width="0.4135%" height="15" fill="rgb(215,141,46)" fg:x="161" fg:w="6"/><text x="11.3458%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.41%)</title><rect x="11.0958%" y="1077" width="0.4135%" height="15" fill="rgb(250,160,47)" fg:x="161" fg:w="6"/><text x="11.3458%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.41%)</title><rect x="11.0958%" y="1061" width="0.4135%" height="15" fill="rgb(216,222,40)" fg:x="161" fg:w="6"/><text x="11.3458%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.41%)</title><rect x="11.0958%" y="1045" width="0.4135%" height="15" fill="rgb(234,217,39)" fg:x="161" fg:w="6"/><text x="11.3458%" y="1055.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.41%)</title><rect x="11.0958%" y="1029" width="0.4135%" height="15" fill="rgb(207,178,40)" fg:x="161" fg:w="6"/><text x="11.3458%" y="1039.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.41%)</title><rect x="11.0958%" y="1013" width="0.4135%" height="15" fill="rgb(221,136,13)" fg:x="161" fg:w="6"/><text x="11.3458%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.41%)</title><rect x="11.0958%" y="997" width="0.4135%" height="15" fill="rgb(249,199,10)" fg:x="161" fg:w="6"/><text x="11.3458%" y="1007.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.34%)</title><rect x="11.1647%" y="981" width="0.3446%" height="15" fill="rgb(249,222,13)" fg:x="162" fg:w="5"/><text x="11.4147%" y="991.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.34%)</title><rect x="11.1647%" y="965" width="0.3446%" height="15" fill="rgb(244,185,38)" fg:x="162" fg:w="5"/><text x="11.4147%" y="975.50"></text></g><g><title>std::panicking::try (5 samples, 0.34%)</title><rect x="11.1647%" y="949" width="0.3446%" height="15" fill="rgb(236,202,9)" fg:x="162" fg:w="5"/><text x="11.4147%" y="959.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.34%)</title><rect x="11.1647%" y="933" width="0.3446%" height="15" fill="rgb(250,229,37)" fg:x="162" fg:w="5"/><text x="11.4147%" y="943.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.34%)</title><rect x="11.1647%" y="917" width="0.3446%" height="15" fill="rgb(206,174,23)" fg:x="162" fg:w="5"/><text x="11.4147%" y="927.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.34%)</title><rect x="11.1647%" y="901" width="0.3446%" height="15" fill="rgb(211,33,43)" fg:x="162" fg:w="5"/><text x="11.4147%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.34%)</title><rect x="11.1647%" y="885" width="0.3446%" height="15" fill="rgb(245,58,50)" fg:x="162" fg:w="5"/><text x="11.4147%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.34%)</title><rect x="11.1647%" y="869" width="0.3446%" height="15" fill="rgb(244,68,36)" fg:x="162" fg:w="5"/><text x="11.4147%" y="879.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.34%)</title><rect x="11.1647%" y="853" width="0.3446%" height="15" fill="rgb(232,229,15)" fg:x="162" fg:w="5"/><text x="11.4147%" y="863.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.34%)</title><rect x="11.1647%" y="837" width="0.3446%" height="15" fill="rgb(254,30,23)" fg:x="162" fg:w="5"/><text x="11.4147%" y="847.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.34%)</title><rect x="11.1647%" y="821" width="0.3446%" height="15" fill="rgb(235,160,14)" fg:x="162" fg:w="5"/><text x="11.4147%" y="831.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.34%)</title><rect x="11.1647%" y="805" width="0.3446%" height="15" fill="rgb(212,155,44)" fg:x="162" fg:w="5"/><text x="11.4147%" y="815.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.34%)</title><rect x="11.1647%" y="789" width="0.3446%" height="15" fill="rgb(226,2,50)" fg:x="162" fg:w="5"/><text x="11.4147%" y="799.50"></text></g><g><title>std::panicking::try (5 samples, 0.34%)</title><rect x="11.1647%" y="773" width="0.3446%" height="15" fill="rgb(234,177,6)" fg:x="162" fg:w="5"/><text x="11.4147%" y="783.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.34%)</title><rect x="11.1647%" y="757" width="0.3446%" height="15" fill="rgb(217,24,9)" fg:x="162" fg:w="5"/><text x="11.4147%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.34%)</title><rect x="11.1647%" y="741" width="0.3446%" height="15" fill="rgb(220,13,46)" fg:x="162" fg:w="5"/><text x="11.4147%" y="751.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.34%)</title><rect x="11.1647%" y="725" width="0.3446%" height="15" fill="rgb(239,221,27)" fg:x="162" fg:w="5"/><text x="11.4147%" y="735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.34%)</title><rect x="11.1647%" y="709" width="0.3446%" height="15" fill="rgb(222,198,25)" fg:x="162" fg:w="5"/><text x="11.4147%" y="719.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.34%)</title><rect x="11.1647%" y="693" width="0.3446%" height="15" fill="rgb(211,99,13)" fg:x="162" fg:w="5"/><text x="11.4147%" y="703.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.34%)</title><rect x="11.1647%" y="677" width="0.3446%" height="15" fill="rgb(232,111,31)" fg:x="162" fg:w="5"/><text x="11.4147%" y="687.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.34%)</title><rect x="11.1647%" y="661" width="0.3446%" height="15" fill="rgb(245,82,37)" fg:x="162" fg:w="5"/><text x="11.4147%" y="671.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.34%)</title><rect x="11.1647%" y="645" width="0.3446%" height="15" fill="rgb(227,149,46)" fg:x="162" fg:w="5"/><text x="11.4147%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.34%)</title><rect x="11.1647%" y="629" width="0.3446%" height="15" fill="rgb(218,36,50)" fg:x="162" fg:w="5"/><text x="11.4147%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.34%)</title><rect x="11.1647%" y="613" width="0.3446%" height="15" fill="rgb(226,80,48)" fg:x="162" fg:w="5"/><text x="11.4147%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.34%)</title><rect x="11.1647%" y="597" width="0.3446%" height="15" fill="rgb(238,224,15)" fg:x="162" fg:w="5"/><text x="11.4147%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.34%)</title><rect x="11.1647%" y="581" width="0.3446%" height="15" fill="rgb(241,136,10)" fg:x="162" fg:w="5"/><text x="11.4147%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.34%)</title><rect x="11.1647%" y="565" width="0.3446%" height="15" fill="rgb(208,32,45)" fg:x="162" fg:w="5"/><text x="11.4147%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (5 samples, 0.34%)</title><rect x="11.1647%" y="549" width="0.3446%" height="15" fill="rgb(207,135,9)" fg:x="162" fg:w="5"/><text x="11.4147%" y="559.50"></text></g><g><title>sysinfo::linux::cpu::CpusWrapper::refresh::{{closure}} (5 samples, 0.34%)</title><rect x="11.1647%" y="533" width="0.3446%" height="15" fill="rgb(206,86,44)" fg:x="162" fg:w="5"/><text x="11.4147%" y="543.50"></text></g><g><title>sysinfo::linux::cpu::get_cpu_frequency (5 samples, 0.34%)</title><rect x="11.1647%" y="517" width="0.3446%" height="15" fill="rgb(245,177,15)" fg:x="162" fg:w="5"/><text x="11.4147%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (5 samples, 0.34%)</title><rect x="11.1647%" y="501" width="0.3446%" height="15" fill="rgb(206,64,50)" fg:x="162" fg:w="5"/><text x="11.4147%" y="511.50"></text></g><g><title>sysinfo::linux::cpu::get_cpu_frequency::{{closure}} (5 samples, 0.34%)</title><rect x="11.1647%" y="485" width="0.3446%" height="15" fill="rgb(234,36,40)" fg:x="162" fg:w="5"/><text x="11.4147%" y="495.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (5 samples, 0.34%)</title><rect x="11.1647%" y="469" width="0.3446%" height="15" fill="rgb(213,64,8)" fg:x="162" fg:w="5"/><text x="11.4147%" y="479.50"></text></g><g><title>alloc::string::String::reserve (5 samples, 0.34%)</title><rect x="11.1647%" y="453" width="0.3446%" height="15" fill="rgb(210,75,36)" fg:x="162" fg:w="5"/><text x="11.4147%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.34%)</title><rect x="11.1647%" y="437" width="0.3446%" height="15" fill="rgb(229,88,21)" fg:x="162" fg:w="5"/><text x="11.4147%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.34%)</title><rect x="11.1647%" y="421" width="0.3446%" height="15" fill="rgb(252,204,47)" fg:x="162" fg:w="5"/><text x="11.4147%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.34%)</title><rect x="11.1647%" y="405" width="0.3446%" height="15" fill="rgb(208,77,27)" fg:x="162" fg:w="5"/><text x="11.4147%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.34%)</title><rect x="11.1647%" y="389" width="0.3446%" height="15" fill="rgb(221,76,26)" fg:x="162" fg:w="5"/><text x="11.4147%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.34%)</title><rect x="11.1647%" y="373" width="0.3446%" height="15" fill="rgb(225,139,18)" fg:x="162" fg:w="5"/><text x="11.4147%" y="383.50"></text></g><g><title>malloc (5 samples, 0.34%)</title><rect x="11.1647%" y="357" width="0.3446%" height="15" fill="rgb(230,137,11)" fg:x="162" fg:w="5"/><text x="11.4147%" y="367.50"></text></g><g><title>[libc.so.6] (5 samples, 0.34%)</title><rect x="11.1647%" y="341" width="0.3446%" height="15" fill="rgb(212,28,1)" fg:x="162" fg:w="5"/><text x="11.4147%" y="351.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (30 samples, 2.07%)</title><rect x="9.5107%" y="1413" width="2.0675%" height="15" fill="rgb(248,164,17)" fg:x="138" fg:w="30"/><text x="9.7607%" y="1423.50">r..</text></g><g><title>rayon_core::job::JobRef::execute (30 samples, 2.07%)</title><rect x="9.5107%" y="1397" width="2.0675%" height="15" fill="rgb(222,171,42)" fg:x="138" fg:w="30"/><text x="9.7607%" y="1407.50">r..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (30 samples, 2.07%)</title><rect x="9.5107%" y="1381" width="2.0675%" height="15" fill="rgb(243,84,45)" fg:x="138" fg:w="30"/><text x="9.7607%" y="1391.50">&lt;..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (30 samples, 2.07%)</title><rect x="9.5107%" y="1365" width="2.0675%" height="15" fill="rgb(252,49,23)" fg:x="138" fg:w="30"/><text x="9.7607%" y="1375.50">r..</text></g><g><title>rayon_core::unwind::halt_unwinding (30 samples, 2.07%)</title><rect x="9.5107%" y="1349" width="2.0675%" height="15" fill="rgb(215,19,7)" fg:x="138" fg:w="30"/><text x="9.7607%" y="1359.50">r..</text></g><g><title>std::panic::catch_unwind (30 samples, 2.07%)</title><rect x="9.5107%" y="1333" width="2.0675%" height="15" fill="rgb(238,81,41)" fg:x="138" fg:w="30"/><text x="9.7607%" y="1343.50">s..</text></g><g><title>std::panicking::try (30 samples, 2.07%)</title><rect x="9.5107%" y="1317" width="2.0675%" height="15" fill="rgb(210,199,37)" fg:x="138" fg:w="30"/><text x="9.7607%" y="1327.50">s..</text></g><g><title>std::panicking::try::do_call (30 samples, 2.07%)</title><rect x="9.5107%" y="1301" width="2.0675%" height="15" fill="rgb(244,192,49)" fg:x="138" fg:w="30"/><text x="9.7607%" y="1311.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (30 samples, 2.07%)</title><rect x="9.5107%" y="1285" width="2.0675%" height="15" fill="rgb(226,211,11)" fg:x="138" fg:w="30"/><text x="9.7607%" y="1295.50">&lt;..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (30 samples, 2.07%)</title><rect x="9.5107%" y="1269" width="2.0675%" height="15" fill="rgb(236,162,54)" fg:x="138" fg:w="30"/><text x="9.7607%" y="1279.50">r..</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="1253" width="0.0689%" height="15" fill="rgb(220,229,9)" fg:x="167" fg:w="1"/><text x="11.7593%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="1237" width="0.0689%" height="15" fill="rgb(250,87,22)" fg:x="167" fg:w="1"/><text x="11.7593%" y="1247.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="11.5093%" y="1221" width="0.0689%" height="15" fill="rgb(239,43,17)" fg:x="167" fg:w="1"/><text x="11.7593%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="11.5093%" y="1205" width="0.0689%" height="15" fill="rgb(231,177,25)" fg:x="167" fg:w="1"/><text x="11.7593%" y="1215.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="11.5093%" y="1189" width="0.0689%" height="15" fill="rgb(219,179,1)" fg:x="167" fg:w="1"/><text x="11.7593%" y="1199.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="11.5093%" y="1173" width="0.0689%" height="15" fill="rgb(238,219,53)" fg:x="167" fg:w="1"/><text x="11.7593%" y="1183.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="11.5093%" y="1157" width="0.0689%" height="15" fill="rgb(232,167,36)" fg:x="167" fg:w="1"/><text x="11.7593%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="1141" width="0.0689%" height="15" fill="rgb(244,19,51)" fg:x="167" fg:w="1"/><text x="11.7593%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="1125" width="0.0689%" height="15" fill="rgb(224,6,22)" fg:x="167" fg:w="1"/><text x="11.7593%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.07%)</title><rect x="11.5093%" y="1109" width="0.0689%" height="15" fill="rgb(224,145,5)" fg:x="167" fg:w="1"/><text x="11.7593%" y="1119.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="11.5093%" y="1093" width="0.0689%" height="15" fill="rgb(234,130,49)" fg:x="167" fg:w="1"/><text x="11.7593%" y="1103.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.07%)</title><rect x="11.5093%" y="1077" width="0.0689%" height="15" fill="rgb(254,6,2)" fg:x="167" fg:w="1"/><text x="11.7593%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="1061" width="0.0689%" height="15" fill="rgb(208,96,46)" fg:x="167" fg:w="1"/><text x="11.7593%" y="1071.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="11.5093%" y="1045" width="0.0689%" height="15" fill="rgb(239,3,39)" fg:x="167" fg:w="1"/><text x="11.7593%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="11.5093%" y="1029" width="0.0689%" height="15" fill="rgb(233,210,1)" fg:x="167" fg:w="1"/><text x="11.7593%" y="1039.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="11.5093%" y="1013" width="0.0689%" height="15" fill="rgb(244,137,37)" fg:x="167" fg:w="1"/><text x="11.7593%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="11.5093%" y="997" width="0.0689%" height="15" fill="rgb(240,136,2)" fg:x="167" fg:w="1"/><text x="11.7593%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="11.5093%" y="981" width="0.0689%" height="15" fill="rgb(239,18,37)" fg:x="167" fg:w="1"/><text x="11.7593%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="965" width="0.0689%" height="15" fill="rgb(218,185,22)" fg:x="167" fg:w="1"/><text x="11.7593%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="949" width="0.0689%" height="15" fill="rgb(225,218,4)" fg:x="167" fg:w="1"/><text x="11.7593%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.07%)</title><rect x="11.5093%" y="933" width="0.0689%" height="15" fill="rgb(230,182,32)" fg:x="167" fg:w="1"/><text x="11.7593%" y="943.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="11.5093%" y="917" width="0.0689%" height="15" fill="rgb(242,56,43)" fg:x="167" fg:w="1"/><text x="11.7593%" y="927.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.07%)</title><rect x="11.5093%" y="901" width="0.0689%" height="15" fill="rgb(233,99,24)" fg:x="167" fg:w="1"/><text x="11.7593%" y="911.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="885" width="0.0689%" height="15" fill="rgb(234,209,42)" fg:x="167" fg:w="1"/><text x="11.7593%" y="895.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="11.5093%" y="869" width="0.0689%" height="15" fill="rgb(227,7,12)" fg:x="167" fg:w="1"/><text x="11.7593%" y="879.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.07%)</title><rect x="11.5093%" y="853" width="0.0689%" height="15" fill="rgb(245,203,43)" fg:x="167" fg:w="1"/><text x="11.7593%" y="863.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.07%)</title><rect x="11.5093%" y="837" width="0.0689%" height="15" fill="rgb(238,205,33)" fg:x="167" fg:w="1"/><text x="11.7593%" y="847.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.07%)</title><rect x="11.5093%" y="821" width="0.0689%" height="15" fill="rgb(231,56,7)" fg:x="167" fg:w="1"/><text x="11.7593%" y="831.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.07%)</title><rect x="11.5093%" y="805" width="0.0689%" height="15" fill="rgb(244,186,29)" fg:x="167" fg:w="1"/><text x="11.7593%" y="815.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (1 samples, 0.07%)</title><rect x="11.5093%" y="789" width="0.0689%" height="15" fill="rgb(234,111,31)" fg:x="167" fg:w="1"/><text x="11.7593%" y="799.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="11.5093%" y="773" width="0.0689%" height="15" fill="rgb(241,149,10)" fg:x="167" fg:w="1"/><text x="11.7593%" y="783.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="11.5093%" y="757" width="0.0689%" height="15" fill="rgb(249,206,44)" fg:x="167" fg:w="1"/><text x="11.7593%" y="767.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="11.5093%" y="741" width="0.0689%" height="15" fill="rgb(251,153,30)" fg:x="167" fg:w="1"/><text x="11.7593%" y="751.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="11.5093%" y="725" width="0.0689%" height="15" fill="rgb(239,152,38)" fg:x="167" fg:w="1"/><text x="11.7593%" y="735.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="11.5093%" y="709" width="0.0689%" height="15" fill="rgb(249,139,47)" fg:x="167" fg:w="1"/><text x="11.7593%" y="719.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="693" width="0.0689%" height="15" fill="rgb(244,64,35)" fg:x="167" fg:w="1"/><text x="11.7593%" y="703.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="677" width="0.0689%" height="15" fill="rgb(216,46,15)" fg:x="167" fg:w="1"/><text x="11.7593%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="661" width="0.0689%" height="15" fill="rgb(250,74,19)" fg:x="167" fg:w="1"/><text x="11.7593%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.07%)</title><rect x="11.5093%" y="645" width="0.0689%" height="15" fill="rgb(249,42,33)" fg:x="167" fg:w="1"/><text x="11.7593%" y="655.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="11.5093%" y="629" width="0.0689%" height="15" fill="rgb(242,149,17)" fg:x="167" fg:w="1"/><text x="11.7593%" y="639.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.07%)</title><rect x="11.5093%" y="613" width="0.0689%" height="15" fill="rgb(244,29,21)" fg:x="167" fg:w="1"/><text x="11.7593%" y="623.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="597" width="0.0689%" height="15" fill="rgb(220,130,37)" fg:x="167" fg:w="1"/><text x="11.7593%" y="607.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.07%)</title><rect x="11.5093%" y="581" width="0.0689%" height="15" fill="rgb(211,67,2)" fg:x="167" fg:w="1"/><text x="11.7593%" y="591.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="11.5093%" y="565" width="0.0689%" height="15" fill="rgb(235,68,52)" fg:x="167" fg:w="1"/><text x="11.7593%" y="575.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="11.5093%" y="549" width="0.0689%" height="15" fill="rgb(246,142,3)" fg:x="167" fg:w="1"/><text x="11.7593%" y="559.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="11.5093%" y="533" width="0.0689%" height="15" fill="rgb(241,25,7)" fg:x="167" fg:w="1"/><text x="11.7593%" y="543.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="11.5093%" y="517" width="0.0689%" height="15" fill="rgb(242,119,39)" fg:x="167" fg:w="1"/><text x="11.7593%" y="527.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="501" width="0.0689%" height="15" fill="rgb(241,98,45)" fg:x="167" fg:w="1"/><text x="11.7593%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="485" width="0.0689%" height="15" fill="rgb(254,28,30)" fg:x="167" fg:w="1"/><text x="11.7593%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.07%)</title><rect x="11.5093%" y="469" width="0.0689%" height="15" fill="rgb(241,142,54)" fg:x="167" fg:w="1"/><text x="11.7593%" y="479.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.07%)</title><rect x="11.5093%" y="453" width="0.0689%" height="15" fill="rgb(222,85,15)" fg:x="167" fg:w="1"/><text x="11.7593%" y="463.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.07%)</title><rect x="11.5093%" y="437" width="0.0689%" height="15" fill="rgb(210,85,47)" fg:x="167" fg:w="1"/><text x="11.7593%" y="447.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="421" width="0.0689%" height="15" fill="rgb(224,206,25)" fg:x="167" fg:w="1"/><text x="11.7593%" y="431.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.07%)</title><rect x="11.5093%" y="405" width="0.0689%" height="15" fill="rgb(243,201,19)" fg:x="167" fg:w="1"/><text x="11.7593%" y="415.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.07%)</title><rect x="11.5093%" y="389" width="0.0689%" height="15" fill="rgb(236,59,4)" fg:x="167" fg:w="1"/><text x="11.7593%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.07%)</title><rect x="11.5093%" y="373" width="0.0689%" height="15" fill="rgb(254,179,45)" fg:x="167" fg:w="1"/><text x="11.7593%" y="383.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="357" width="0.0689%" height="15" fill="rgb(226,14,10)" fg:x="167" fg:w="1"/><text x="11.7593%" y="367.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (1 samples, 0.07%)</title><rect x="11.5093%" y="341" width="0.0689%" height="15" fill="rgb(244,27,41)" fg:x="167" fg:w="1"/><text x="11.7593%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.07%)</title><rect x="11.5093%" y="325" width="0.0689%" height="15" fill="rgb(235,35,32)" fg:x="167" fg:w="1"/><text x="11.7593%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="11.5093%" y="309" width="0.0689%" height="15" fill="rgb(218,68,31)" fg:x="167" fg:w="1"/><text x="11.7593%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="11.5093%" y="293" width="0.0689%" height="15" fill="rgb(207,120,37)" fg:x="167" fg:w="1"/><text x="11.7593%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="11.5093%" y="277" width="0.0689%" height="15" fill="rgb(227,98,0)" fg:x="167" fg:w="1"/><text x="11.7593%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="11.5093%" y="261" width="0.0689%" height="15" fill="rgb(207,7,3)" fg:x="167" fg:w="1"/><text x="11.7593%" y="271.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="245" width="0.0689%" height="15" fill="rgb(206,98,19)" fg:x="167" fg:w="1"/><text x="11.7593%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="229" width="0.0689%" height="15" fill="rgb(217,5,26)" fg:x="167" fg:w="1"/><text x="11.7593%" y="239.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="213" width="0.0689%" height="15" fill="rgb(235,190,38)" fg:x="167" fg:w="1"/><text x="11.7593%" y="223.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (1 samples, 0.07%)</title><rect x="11.5093%" y="197" width="0.0689%" height="15" fill="rgb(247,86,24)" fg:x="167" fg:w="1"/><text x="11.7593%" y="207.50"></text></g><g><title>crossbeam_epoch::default::pin (1 samples, 0.07%)</title><rect x="11.5093%" y="181" width="0.0689%" height="15" fill="rgb(205,101,16)" fg:x="167" fg:w="1"/><text x="11.7593%" y="191.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.07%)</title><rect x="11.5093%" y="165" width="0.0689%" height="15" fill="rgb(246,168,33)" fg:x="167" fg:w="1"/><text x="11.7593%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.07%)</title><rect x="11.5093%" y="149" width="0.0689%" height="15" fill="rgb(231,114,1)" fg:x="167" fg:w="1"/><text x="11.7593%" y="159.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="133" width="0.0689%" height="15" fill="rgb(207,184,53)" fg:x="167" fg:w="1"/><text x="11.7593%" y="143.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (1 samples, 0.07%)</title><rect x="11.5093%" y="117" width="0.0689%" height="15" fill="rgb(224,95,51)" fg:x="167" fg:w="1"/><text x="11.7593%" y="127.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.07%)</title><rect x="11.5093%" y="101" width="0.0689%" height="15" fill="rgb(212,188,45)" fg:x="167" fg:w="1"/><text x="11.7593%" y="111.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (1 samples, 0.07%)</title><rect x="11.5093%" y="85" width="0.0689%" height="15" fill="rgb(223,154,38)" fg:x="167" fg:w="1"/><text x="11.7593%" y="95.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (1 samples, 0.07%)</title><rect x="11.5093%" y="69" width="0.0689%" height="15" fill="rgb(251,22,52)" fg:x="167" fg:w="1"/><text x="11.7593%" y="79.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (1 samples, 0.07%)</title><rect x="11.5093%" y="53" width="0.0689%" height="15" fill="rgb(229,209,22)" fg:x="167" fg:w="1"/><text x="11.7593%" y="63.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="11.5093%" y="37" width="0.0689%" height="15" fill="rgb(234,138,34)" fg:x="167" fg:w="1"/><text x="11.7593%" y="47.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (5 samples, 0.34%)</title><rect x="11.5782%" y="1381" width="0.3446%" height="15" fill="rgb(212,95,11)" fg:x="168" fg:w="5"/><text x="11.8282%" y="1391.50"></text></g><g><title>crossbeam_epoch::default::with_handle (5 samples, 0.34%)</title><rect x="11.5782%" y="1365" width="0.3446%" height="15" fill="rgb(240,179,47)" fg:x="168" fg:w="5"/><text x="11.8282%" y="1375.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.34%)</title><rect x="11.5782%" y="1349" width="0.3446%" height="15" fill="rgb(240,163,11)" fg:x="168" fg:w="5"/><text x="11.8282%" y="1359.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (5 samples, 0.34%)</title><rect x="11.5782%" y="1333" width="0.3446%" height="15" fill="rgb(236,37,12)" fg:x="168" fg:w="5"/><text x="11.8282%" y="1343.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (5 samples, 0.34%)</title><rect x="11.5782%" y="1317" width="0.3446%" height="15" fill="rgb(232,164,16)" fg:x="168" fg:w="5"/><text x="11.8282%" y="1327.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (5 samples, 0.34%)</title><rect x="11.5782%" y="1301" width="0.3446%" height="15" fill="rgb(244,205,15)" fg:x="168" fg:w="5"/><text x="11.8282%" y="1311.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit::{{closure}} (5 samples, 0.34%)</title><rect x="11.5782%" y="1285" width="0.3446%" height="15" fill="rgb(223,117,47)" fg:x="168" fg:w="5"/><text x="11.8282%" y="1295.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__init (5 samples, 0.34%)</title><rect x="11.5782%" y="1269" width="0.3446%" height="15" fill="rgb(244,107,35)" fg:x="168" fg:w="5"/><text x="11.8282%" y="1279.50"></text></g><g><title>crossbeam_epoch::internal::Local::register (5 samples, 0.34%)</title><rect x="11.5782%" y="1253" width="0.3446%" height="15" fill="rgb(205,140,8)" fg:x="168" fg:w="5"/><text x="11.8282%" y="1263.50"></text></g><g><title>&lt;crossbeam_epoch::collector::Collector as core::clone::Clone&gt;::clone (5 samples, 0.34%)</title><rect x="11.5782%" y="1237" width="0.3446%" height="15" fill="rgb(228,84,46)" fg:x="168" fg:w="5"/><text x="11.8282%" y="1247.50"></text></g><g><title>__rust_probestack (5 samples, 0.34%)</title><rect x="11.5782%" y="1221" width="0.3446%" height="15" fill="rgb(254,188,9)" fg:x="168" fg:w="5"/><text x="11.8282%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (6 samples, 0.41%)</title><rect x="11.5782%" y="1413" width="0.4135%" height="15" fill="rgb(206,112,54)" fg:x="168" fg:w="6"/><text x="11.8282%" y="1423.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (6 samples, 0.41%)</title><rect x="11.5782%" y="1397" width="0.4135%" height="15" fill="rgb(216,84,49)" fg:x="168" fg:w="6"/><text x="11.8282%" y="1407.50"></text></g><g><title>crossbeam_epoch::default::pin (1 samples, 0.07%)</title><rect x="11.9228%" y="1381" width="0.0689%" height="15" fill="rgb(214,194,35)" fg:x="173" fg:w="1"/><text x="12.1728%" y="1391.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.07%)</title><rect x="11.9228%" y="1365" width="0.0689%" height="15" fill="rgb(249,28,3)" fg:x="173" fg:w="1"/><text x="12.1728%" y="1375.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.07%)</title><rect x="11.9228%" y="1349" width="0.0689%" height="15" fill="rgb(222,56,52)" fg:x="173" fg:w="1"/><text x="12.1728%" y="1359.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (1 samples, 0.07%)</title><rect x="11.9228%" y="1333" width="0.0689%" height="15" fill="rgb(245,217,50)" fg:x="173" fg:w="1"/><text x="12.1728%" y="1343.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (1 samples, 0.07%)</title><rect x="11.9228%" y="1317" width="0.0689%" height="15" fill="rgb(213,201,24)" fg:x="173" fg:w="1"/><text x="12.1728%" y="1327.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.07%)</title><rect x="11.9228%" y="1301" width="0.0689%" height="15" fill="rgb(248,116,28)" fg:x="173" fg:w="1"/><text x="12.1728%" y="1311.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (1 samples, 0.07%)</title><rect x="11.9228%" y="1285" width="0.0689%" height="15" fill="rgb(219,72,43)" fg:x="173" fg:w="1"/><text x="12.1728%" y="1295.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;usize&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.07%)</title><rect x="11.9228%" y="1269" width="0.0689%" height="15" fill="rgb(209,138,14)" fg:x="173" fg:w="1"/><text x="12.1728%" y="1279.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="11.9228%" y="1253" width="0.0689%" height="15" fill="rgb(222,18,33)" fg:x="173" fg:w="1"/><text x="12.1728%" y="1263.50"></text></g><g><title>rayon_core::latch::CoreLatch::wake_up (1 samples, 0.07%)</title><rect x="12.0606%" y="1381" width="0.0689%" height="15" fill="rgb(213,199,7)" fg:x="175" fg:w="1"/><text x="12.3106%" y="1391.50"></text></g><g><title>rayon_core::latch::CoreLatch::probe (1 samples, 0.07%)</title><rect x="12.0606%" y="1365" width="0.0689%" height="15" fill="rgb(250,110,10)" fg:x="175" fg:w="1"/><text x="12.3106%" y="1375.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.07%)</title><rect x="12.0606%" y="1349" width="0.0689%" height="15" fill="rgb(248,123,6)" fg:x="175" fg:w="1"/><text x="12.3106%" y="1359.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="12.0606%" y="1333" width="0.0689%" height="15" fill="rgb(206,91,31)" fg:x="175" fg:w="1"/><text x="12.3106%" y="1343.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (4 samples, 0.28%)</title><rect x="12.1985%" y="1301" width="0.2757%" height="15" fill="rgb(211,154,13)" fg:x="177" fg:w="4"/><text x="12.4485%" y="1311.50"></text></g><g><title>std::sys::unix::futex::futex_wait (78 samples, 5.38%)</title><rect x="12.1985%" y="1317" width="5.3756%" height="15" fill="rgb(225,148,7)" fg:x="177" fg:w="78"/><text x="12.4485%" y="1327.50">std::sy..</text></g><g><title>syscall (74 samples, 5.10%)</title><rect x="12.4742%" y="1301" width="5.0999%" height="15" fill="rgb(220,160,43)" fg:x="181" fg:w="74"/><text x="12.7242%" y="1311.50">syscall</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (134 samples, 9.24%)</title><rect x="8.5458%" y="1653" width="9.2350%" height="15" fill="rgb(213,52,39)" fg:x="124" fg:w="134"/><text x="8.7958%" y="1663.50">&lt;alloc::boxed..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (134 samples, 9.24%)</title><rect x="8.5458%" y="1637" width="9.2350%" height="15" fill="rgb(243,137,7)" fg:x="124" fg:w="134"/><text x="8.7958%" y="1647.50">&lt;alloc::boxed..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (134 samples, 9.24%)</title><rect x="8.5458%" y="1621" width="9.2350%" height="15" fill="rgb(230,79,13)" fg:x="124" fg:w="134"/><text x="8.7958%" y="1631.50">core::ops::fu..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (134 samples, 9.24%)</title><rect x="8.5458%" y="1605" width="9.2350%" height="15" fill="rgb(247,105,23)" fg:x="124" fg:w="134"/><text x="8.7958%" y="1615.50">std::thread::..</text></g><g><title>std::panic::catch_unwind (134 samples, 9.24%)</title><rect x="8.5458%" y="1589" width="9.2350%" height="15" fill="rgb(223,179,41)" fg:x="124" fg:w="134"/><text x="8.7958%" y="1599.50">std::panic::c..</text></g><g><title>std::panicking::try (134 samples, 9.24%)</title><rect x="8.5458%" y="1573" width="9.2350%" height="15" fill="rgb(218,9,34)" fg:x="124" fg:w="134"/><text x="8.7958%" y="1583.50">std::panickin..</text></g><g><title>std::panicking::try::do_call (134 samples, 9.24%)</title><rect x="8.5458%" y="1557" width="9.2350%" height="15" fill="rgb(222,106,8)" fg:x="124" fg:w="134"/><text x="8.7958%" y="1567.50">std::panickin..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (134 samples, 9.24%)</title><rect x="8.5458%" y="1541" width="9.2350%" height="15" fill="rgb(211,220,0)" fg:x="124" fg:w="134"/><text x="8.7958%" y="1551.50">&lt;core::panic:..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (134 samples, 9.24%)</title><rect x="8.5458%" y="1525" width="9.2350%" height="15" fill="rgb(229,52,16)" fg:x="124" fg:w="134"/><text x="8.7958%" y="1535.50">std::thread::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (134 samples, 9.24%)</title><rect x="8.5458%" y="1509" width="9.2350%" height="15" fill="rgb(212,155,18)" fg:x="124" fg:w="134"/><text x="8.7958%" y="1519.50">std::sys_comm..</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (134 samples, 9.24%)</title><rect x="8.5458%" y="1493" width="9.2350%" height="15" fill="rgb(242,21,14)" fg:x="124" fg:w="134"/><text x="8.7958%" y="1503.50">&lt;rayon_core::..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (134 samples, 9.24%)</title><rect x="8.5458%" y="1477" width="9.2350%" height="15" fill="rgb(222,19,48)" fg:x="124" fg:w="134"/><text x="8.7958%" y="1487.50">rayon_core::r..</text></g><g><title>rayon_core::registry::main_loop (134 samples, 9.24%)</title><rect x="8.5458%" y="1461" width="9.2350%" height="15" fill="rgb(232,45,27)" fg:x="124" fg:w="134"/><text x="8.7958%" y="1471.50">rayon_core::r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (134 samples, 9.24%)</title><rect x="8.5458%" y="1445" width="9.2350%" height="15" fill="rgb(249,103,42)" fg:x="124" fg:w="134"/><text x="8.7958%" y="1455.50">rayon_core::r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (134 samples, 9.24%)</title><rect x="8.5458%" y="1429" width="9.2350%" height="15" fill="rgb(246,81,33)" fg:x="124" fg:w="134"/><text x="8.7958%" y="1439.50">rayon_core::r..</text></g><g><title>rayon_core::sleep::Sleep::no_work_found (84 samples, 5.79%)</title><rect x="11.9917%" y="1413" width="5.7891%" height="15" fill="rgb(252,33,42)" fg:x="174" fg:w="84"/><text x="12.2417%" y="1423.50">rayon_c..</text></g><g><title>rayon_core::sleep::Sleep::sleep (83 samples, 5.72%)</title><rect x="12.0606%" y="1397" width="5.7202%" height="15" fill="rgb(209,212,41)" fg:x="175" fg:w="83"/><text x="12.3106%" y="1407.50">rayon_c..</text></g><g><title>std::sync::condvar::Condvar::wait (82 samples, 5.65%)</title><rect x="12.1296%" y="1381" width="5.6513%" height="15" fill="rgb(207,154,6)" fg:x="176" fg:w="82"/><text x="12.3796%" y="1391.50">std::sy..</text></g><g><title>std::sys_common::condvar::Condvar::wait (82 samples, 5.65%)</title><rect x="12.1296%" y="1365" width="5.6513%" height="15" fill="rgb(223,64,47)" fg:x="176" fg:w="82"/><text x="12.3796%" y="1375.50">std::sy..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (82 samples, 5.65%)</title><rect x="12.1296%" y="1349" width="5.6513%" height="15" fill="rgb(211,161,38)" fg:x="176" fg:w="82"/><text x="12.3796%" y="1359.50">std::sy..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (82 samples, 5.65%)</title><rect x="12.1296%" y="1333" width="5.6513%" height="15" fill="rgb(219,138,40)" fg:x="176" fg:w="82"/><text x="12.3796%" y="1343.50">std::sy..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (3 samples, 0.21%)</title><rect x="17.5741%" y="1317" width="0.2068%" height="15" fill="rgb(241,228,46)" fg:x="255" fg:w="3"/><text x="17.8241%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (3 samples, 0.21%)</title><rect x="17.5741%" y="1301" width="0.2068%" height="15" fill="rgb(223,209,38)" fg:x="255" fg:w="3"/><text x="17.8241%" y="1311.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.21%)</title><rect x="17.5741%" y="1285" width="0.2068%" height="15" fill="rgb(236,164,45)" fg:x="255" fg:w="3"/><text x="17.8241%" y="1295.50"></text></g><g><title>[libc.so.6] (154 samples, 10.61%)</title><rect x="7.3053%" y="1701" width="10.6134%" height="15" fill="rgb(231,15,5)" fg:x="106" fg:w="154"/><text x="7.5553%" y="1711.50">[libc.so.6]</text></g><g><title>[libc.so.6] (150 samples, 10.34%)</title><rect x="7.5810%" y="1685" width="10.3377%" height="15" fill="rgb(252,35,15)" fg:x="110" fg:w="150"/><text x="7.8310%" y="1695.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (136 samples, 9.37%)</title><rect x="8.5458%" y="1669" width="9.3728%" height="15" fill="rgb(248,181,18)" fg:x="124" fg:w="136"/><text x="8.7958%" y="1679.50">std::sys::uni..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (2 samples, 0.14%)</title><rect x="17.7808%" y="1653" width="0.1378%" height="15" fill="rgb(233,39,42)" fg:x="258" fg:w="2"/><text x="18.0308%" y="1663.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (2 samples, 0.14%)</title><rect x="17.7808%" y="1637" width="0.1378%" height="15" fill="rgb(238,110,33)" fg:x="258" fg:w="2"/><text x="18.0308%" y="1647.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (2 samples, 0.14%)</title><rect x="17.7808%" y="1621" width="0.1378%" height="15" fill="rgb(233,195,10)" fg:x="258" fg:w="2"/><text x="18.0308%" y="1631.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (2 samples, 0.14%)</title><rect x="17.7808%" y="1605" width="0.1378%" height="15" fill="rgb(254,105,3)" fg:x="258" fg:w="2"/><text x="18.0308%" y="1615.50"></text></g><g><title>std::sys::unix::os::page_size (2 samples, 0.14%)</title><rect x="17.7808%" y="1589" width="0.1378%" height="15" fill="rgb(221,225,9)" fg:x="258" fg:w="2"/><text x="18.0308%" y="1599.50"></text></g><g><title>__sysconf (2 samples, 0.14%)</title><rect x="17.7808%" y="1573" width="0.1378%" height="15" fill="rgb(224,227,45)" fg:x="258" fg:w="2"/><text x="18.0308%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="18.0565%" y="1653" width="0.0689%" height="15" fill="rgb(229,198,43)" fg:x="262" fg:w="1"/><text x="18.3065%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="18.0565%" y="1637" width="0.0689%" height="15" fill="rgb(206,209,35)" fg:x="262" fg:w="1"/><text x="18.3065%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="18.0565%" y="1621" width="0.0689%" height="15" fill="rgb(245,195,53)" fg:x="262" fg:w="1"/><text x="18.3065%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="18.0565%" y="1605" width="0.0689%" height="15" fill="rgb(240,92,26)" fg:x="262" fg:w="1"/><text x="18.3065%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="18.0565%" y="1589" width="0.0689%" height="15" fill="rgb(207,40,23)" fg:x="262" fg:w="1"/><text x="18.3065%" y="1599.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="18.0565%" y="1573" width="0.0689%" height="15" fill="rgb(223,111,35)" fg:x="262" fg:w="1"/><text x="18.3065%" y="1583.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="18.0565%" y="1557" width="0.0689%" height="15" fill="rgb(229,147,28)" fg:x="262" fg:w="1"/><text x="18.3065%" y="1567.50"></text></g><g><title>&lt;&amp;[u8] as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (6 samples, 0.41%)</title><rect x="17.9187%" y="1685" width="0.4135%" height="15" fill="rgb(211,29,28)" fg:x="260" fg:w="6"/><text x="18.1687%" y="1695.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (6 samples, 0.41%)</title><rect x="17.9187%" y="1669" width="0.4135%" height="15" fill="rgb(228,72,33)" fg:x="260" fg:w="6"/><text x="18.1687%" y="1679.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.21%)</title><rect x="18.1254%" y="1653" width="0.2068%" height="15" fill="rgb(205,214,31)" fg:x="263" fg:w="3"/><text x="18.3754%" y="1663.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.21%)</title><rect x="18.1254%" y="1637" width="0.2068%" height="15" fill="rgb(224,111,15)" fg:x="263" fg:w="3"/><text x="18.3754%" y="1647.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.07%)</title><rect x="18.3322%" y="1685" width="0.0689%" height="15" fill="rgb(253,21,26)" fg:x="266" fg:w="1"/><text x="18.5822%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="18.4011%" y="1685" width="0.2068%" height="15" fill="rgb(245,139,43)" fg:x="267" fg:w="3"/><text x="18.6511%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="18.6079%" y="1685" width="0.0689%" height="15" fill="rgb(252,170,7)" fg:x="270" fg:w="1"/><text x="18.8579%" y="1695.50"></text></g><g><title>&lt;generator::SensorDataHandler&lt;T&gt; as generator::Updatable&gt;::update (1 samples, 0.07%)</title><rect x="18.6768%" y="1685" width="0.0689%" height="15" fill="rgb(231,118,14)" fg:x="271" fg:w="1"/><text x="18.9268%" y="1695.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (1 samples, 0.07%)</title><rect x="18.6768%" y="1669" width="0.0689%" height="15" fill="rgb(238,83,0)" fg:x="271" fg:w="1"/><text x="18.9268%" y="1679.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (2 samples, 0.14%)</title><rect x="18.7457%" y="1685" width="0.1378%" height="15" fill="rgb(221,39,39)" fg:x="272" fg:w="2"/><text x="18.9957%" y="1695.50"></text></g><g><title>std::io::default_read_to_string (2 samples, 0.14%)</title><rect x="18.7457%" y="1669" width="0.1378%" height="15" fill="rgb(222,119,46)" fg:x="272" fg:w="2"/><text x="18.9957%" y="1679.50"></text></g><g><title>std::io::append_to_string (2 samples, 0.14%)</title><rect x="18.7457%" y="1653" width="0.1378%" height="15" fill="rgb(222,165,49)" fg:x="272" fg:w="2"/><text x="18.9957%" y="1663.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="18.8835%" y="1685" width="0.0689%" height="15" fill="rgb(219,113,52)" fg:x="274" fg:w="1"/><text x="19.1335%" y="1695.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (3 samples, 0.21%)</title><rect x="18.9524%" y="1685" width="0.2068%" height="15" fill="rgb(214,7,15)" fg:x="275" fg:w="3"/><text x="19.2024%" y="1695.50"></text></g><g><title>readdir64 (1 samples, 0.07%)</title><rect x="19.1592%" y="1669" width="0.0689%" height="15" fill="rgb(235,32,4)" fg:x="278" fg:w="1"/><text x="19.4092%" y="1679.50"></text></g><g><title>[generator] (2 samples, 0.14%)</title><rect x="19.1592%" y="1685" width="0.1378%" height="15" fill="rgb(238,90,54)" fg:x="278" fg:w="2"/><text x="19.4092%" y="1695.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.07%)</title><rect x="19.2281%" y="1669" width="0.0689%" height="15" fill="rgb(213,208,19)" fg:x="279" fg:w="1"/><text x="19.4781%" y="1679.50"></text></g><g><title>[libc.so.6] (13 samples, 0.90%)</title><rect x="19.2970%" y="1685" width="0.8959%" height="15" fill="rgb(233,156,4)" fg:x="280" fg:w="13"/><text x="19.5470%" y="1695.50"></text></g><g><title>__close (1 samples, 0.07%)</title><rect x="20.1930%" y="1685" width="0.0689%" height="15" fill="rgb(207,194,5)" fg:x="293" fg:w="1"/><text x="20.4430%" y="1695.50"></text></g><g><title>__rdl_alloc (2 samples, 0.14%)</title><rect x="20.2619%" y="1685" width="0.1378%" height="15" fill="rgb(206,111,30)" fg:x="294" fg:w="2"/><text x="20.5119%" y="1695.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="20.3308%" y="1669" width="0.0689%" height="15" fill="rgb(243,70,54)" fg:x="295" fg:w="1"/><text x="20.5808%" y="1679.50"></text></g><g><title>__rdl_realloc (2 samples, 0.14%)</title><rect x="20.3997%" y="1685" width="0.1378%" height="15" fill="rgb(242,28,8)" fg:x="296" fg:w="2"/><text x="20.6497%" y="1695.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.07%)</title><rect x="20.4686%" y="1669" width="0.0689%" height="15" fill="rgb(219,106,18)" fg:x="297" fg:w="1"/><text x="20.7186%" y="1679.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (3 samples, 0.21%)</title><rect x="20.5376%" y="1685" width="0.2068%" height="15" fill="rgb(244,222,10)" fg:x="298" fg:w="3"/><text x="20.7876%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.48%)</title><rect x="20.7443%" y="1685" width="0.4824%" height="15" fill="rgb(236,179,52)" fg:x="301" fg:w="7"/><text x="20.9943%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.48%)</title><rect x="20.7443%" y="1669" width="0.4824%" height="15" fill="rgb(213,23,39)" fg:x="301" fg:w="7"/><text x="20.9943%" y="1679.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (5 samples, 0.34%)</title><rect x="20.8822%" y="1653" width="0.3446%" height="15" fill="rgb(238,48,10)" fg:x="303" fg:w="5"/><text x="21.1322%" y="1663.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (5 samples, 0.34%)</title><rect x="20.8822%" y="1637" width="0.3446%" height="15" fill="rgb(251,196,23)" fg:x="303" fg:w="5"/><text x="21.1322%" y="1647.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (4 samples, 0.28%)</title><rect x="21.2267%" y="1685" width="0.2757%" height="15" fill="rgb(250,152,24)" fg:x="308" fg:w="4"/><text x="21.4767%" y="1695.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.07%)</title><rect x="21.5024%" y="1685" width="0.0689%" height="15" fill="rgb(209,150,17)" fg:x="312" fg:w="1"/><text x="21.7524%" y="1695.50"></text></g><g><title>alloc::str::convert_while_ascii (1 samples, 0.07%)</title><rect x="21.5024%" y="1669" width="0.0689%" height="15" fill="rgb(234,202,34)" fg:x="312" fg:w="1"/><text x="21.7524%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="21.5024%" y="1653" width="0.0689%" height="15" fill="rgb(253,148,53)" fg:x="312" fg:w="1"/><text x="21.7524%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="21.5024%" y="1637" width="0.0689%" height="15" fill="rgb(218,129,16)" fg:x="312" fg:w="1"/><text x="21.7524%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="21.5024%" y="1621" width="0.0689%" height="15" fill="rgb(216,85,19)" fg:x="312" fg:w="1"/><text x="21.7524%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="21.5024%" y="1605" width="0.0689%" height="15" fill="rgb(235,228,7)" fg:x="312" fg:w="1"/><text x="21.7524%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="21.5024%" y="1589" width="0.0689%" height="15" fill="rgb(245,175,0)" fg:x="312" fg:w="1"/><text x="21.7524%" y="1599.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="21.5024%" y="1573" width="0.0689%" height="15" fill="rgb(208,168,36)" fg:x="312" fg:w="1"/><text x="21.7524%" y="1583.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="21.5024%" y="1557" width="0.0689%" height="15" fill="rgb(246,171,24)" fg:x="312" fg:w="1"/><text x="21.7524%" y="1567.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.07%)</title><rect x="21.5713%" y="1685" width="0.0689%" height="15" fill="rgb(215,142,24)" fg:x="313" fg:w="1"/><text x="21.8213%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.07%)</title><rect x="21.6402%" y="1685" width="0.0689%" height="15" fill="rgb(250,187,7)" fg:x="314" fg:w="1"/><text x="21.8902%" y="1695.50"></text></g><g><title>cfree (2 samples, 0.14%)</title><rect x="21.7092%" y="1685" width="0.1378%" height="15" fill="rgb(228,66,33)" fg:x="315" fg:w="2"/><text x="21.9592%" y="1695.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="21.8470%" y="1685" width="0.0689%" height="15" fill="rgb(234,215,21)" fg:x="317" fg:w="1"/><text x="22.0970%" y="1695.50"></text></g><g><title>core::num::from_str_radix (2 samples, 0.14%)</title><rect x="21.9159%" y="1685" width="0.1378%" height="15" fill="rgb(222,191,20)" fg:x="318" fg:w="2"/><text x="22.1659%" y="1695.50"></text></g><g><title>core::slice::memchr::memchr_aligned (3 samples, 0.21%)</title><rect x="22.0538%" y="1685" width="0.2068%" height="15" fill="rgb(245,79,54)" fg:x="320" fg:w="3"/><text x="22.3038%" y="1695.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_start_matches (1 samples, 0.07%)</title><rect x="22.2605%" y="1685" width="0.0689%" height="15" fill="rgb(240,10,37)" fg:x="323" fg:w="1"/><text x="22.5105%" y="1695.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.07%)</title><rect x="22.3294%" y="1685" width="0.0689%" height="15" fill="rgb(214,192,32)" fg:x="324" fg:w="1"/><text x="22.5794%" y="1695.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.07%)</title><rect x="22.3983%" y="1685" width="0.0689%" height="15" fill="rgb(209,36,54)" fg:x="325" fg:w="1"/><text x="22.6483%" y="1695.50"></text></g><g><title>llseek (1 samples, 0.07%)</title><rect x="22.4673%" y="1685" width="0.0689%" height="15" fill="rgb(220,10,11)" fg:x="326" fg:w="1"/><text x="22.7173%" y="1695.50"></text></g><g><title>malloc (2 samples, 0.14%)</title><rect x="22.5362%" y="1685" width="0.1378%" height="15" fill="rgb(221,106,17)" fg:x="327" fg:w="2"/><text x="22.7862%" y="1695.50"></text></g><g><title>open64 (3 samples, 0.21%)</title><rect x="22.6740%" y="1685" width="0.2068%" height="15" fill="rgb(251,142,44)" fg:x="329" fg:w="3"/><text x="22.9240%" y="1695.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (1 samples, 0.07%)</title><rect x="22.8808%" y="1685" width="0.0689%" height="15" fill="rgb(238,13,15)" fg:x="332" fg:w="1"/><text x="23.1308%" y="1695.50"></text></g><g><title>std::sync::condvar::Condvar::wait (1 samples, 0.07%)</title><rect x="22.8808%" y="1669" width="0.0689%" height="15" fill="rgb(208,107,27)" fg:x="332" fg:w="1"/><text x="23.1308%" y="1679.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (1 samples, 0.07%)</title><rect x="22.8808%" y="1653" width="0.0689%" height="15" fill="rgb(205,136,37)" fg:x="332" fg:w="1"/><text x="23.1308%" y="1663.50"></text></g><g><title>realloc (9 samples, 0.62%)</title><rect x="22.9497%" y="1685" width="0.6203%" height="15" fill="rgb(250,205,27)" fg:x="333" fg:w="9"/><text x="23.1997%" y="1695.50"></text></g><g><title>std::fs::OpenOptions::_open (3 samples, 0.21%)</title><rect x="23.5700%" y="1685" width="0.2068%" height="15" fill="rgb(210,80,43)" fg:x="342" fg:w="3"/><text x="23.8200%" y="1695.50"></text></g><g><title>std::sys::unix::fs::File::open (1 samples, 0.07%)</title><rect x="23.7078%" y="1669" width="0.0689%" height="15" fill="rgb(247,160,36)" fg:x="344" fg:w="1"/><text x="23.9578%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::ffi::c_str::CString&gt; (1 samples, 0.07%)</title><rect x="23.7078%" y="1653" width="0.0689%" height="15" fill="rgb(234,13,49)" fg:x="344" fg:w="1"/><text x="23.9578%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (1 samples, 0.07%)</title><rect x="23.7078%" y="1637" width="0.0689%" height="15" fill="rgb(234,122,0)" fg:x="344" fg:w="1"/><text x="23.9578%" y="1647.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.07%)</title><rect x="23.7078%" y="1621" width="0.0689%" height="15" fill="rgb(207,146,38)" fg:x="344" fg:w="1"/><text x="23.9578%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="23.7078%" y="1605" width="0.0689%" height="15" fill="rgb(207,177,25)" fg:x="344" fg:w="1"/><text x="23.9578%" y="1615.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="23.7078%" y="1589" width="0.0689%" height="15" fill="rgb(211,178,42)" fg:x="344" fg:w="1"/><text x="23.9578%" y="1599.50"></text></g><g><title>std::fs::OpenOptions::read (1 samples, 0.07%)</title><rect x="23.7767%" y="1685" width="0.0689%" height="15" fill="rgb(230,69,54)" fg:x="345" fg:w="1"/><text x="24.0267%" y="1695.50"></text></g><g><title>std::fs::buffer_capacity_required (2 samples, 0.14%)</title><rect x="23.8456%" y="1685" width="0.1378%" height="15" fill="rgb(214,135,41)" fg:x="346" fg:w="2"/><text x="24.0956%" y="1695.50"></text></g><g><title>std::io::Seek::stream_position (2 samples, 0.14%)</title><rect x="23.8456%" y="1669" width="0.1378%" height="15" fill="rgb(237,67,25)" fg:x="346" fg:w="2"/><text x="24.0956%" y="1679.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Seek&gt;::seek (2 samples, 0.14%)</title><rect x="23.8456%" y="1653" width="0.1378%" height="15" fill="rgb(222,189,50)" fg:x="346" fg:w="2"/><text x="24.0956%" y="1663.50"></text></g><g><title>std::sys::unix::fs::File::seek (2 samples, 0.14%)</title><rect x="23.8456%" y="1637" width="0.1378%" height="15" fill="rgb(245,148,34)" fg:x="346" fg:w="2"/><text x="24.0956%" y="1647.50"></text></g><g><title>std::io::default_read_to_end (4 samples, 0.28%)</title><rect x="23.9835%" y="1685" width="0.2757%" height="15" fill="rgb(222,29,6)" fg:x="348" fg:w="4"/><text x="24.2335%" y="1695.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (2 samples, 0.14%)</title><rect x="24.1213%" y="1669" width="0.1378%" height="15" fill="rgb(221,189,43)" fg:x="350" fg:w="2"/><text x="24.3713%" y="1679.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (2 samples, 0.14%)</title><rect x="24.1213%" y="1653" width="0.1378%" height="15" fill="rgb(207,36,27)" fg:x="350" fg:w="2"/><text x="24.3713%" y="1663.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (2 samples, 0.14%)</title><rect x="24.1213%" y="1637" width="0.1378%" height="15" fill="rgb(217,90,24)" fg:x="350" fg:w="2"/><text x="24.3713%" y="1647.50"></text></g><g><title>std::path::Path::_join (3 samples, 0.21%)</title><rect x="24.2591%" y="1685" width="0.2068%" height="15" fill="rgb(224,66,35)" fg:x="352" fg:w="3"/><text x="24.5091%" y="1695.50"></text></g><g><title>std::path::Path::to_path_buf (1 samples, 0.07%)</title><rect x="24.3970%" y="1669" width="0.0689%" height="15" fill="rgb(221,13,50)" fg:x="354" fg:w="1"/><text x="24.6470%" y="1679.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (1 samples, 0.07%)</title><rect x="24.3970%" y="1653" width="0.0689%" height="15" fill="rgb(236,68,49)" fg:x="354" fg:w="1"/><text x="24.6470%" y="1663.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (1 samples, 0.07%)</title><rect x="24.3970%" y="1637" width="0.0689%" height="15" fill="rgb(229,146,28)" fg:x="354" fg:w="1"/><text x="24.6470%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.07%)</title><rect x="24.3970%" y="1621" width="0.0689%" height="15" fill="rgb(225,31,38)" fg:x="354" fg:w="1"/><text x="24.6470%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="24.3970%" y="1605" width="0.0689%" height="15" fill="rgb(250,208,3)" fg:x="354" fg:w="1"/><text x="24.6470%" y="1615.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="24.3970%" y="1589" width="0.0689%" height="15" fill="rgb(246,54,23)" fg:x="354" fg:w="1"/><text x="24.6470%" y="1599.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="24.3970%" y="1573" width="0.0689%" height="15" fill="rgb(243,76,11)" fg:x="354" fg:w="1"/><text x="24.6470%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="24.3970%" y="1557" width="0.0689%" height="15" fill="rgb(245,21,50)" fg:x="354" fg:w="1"/><text x="24.6470%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="24.3970%" y="1541" width="0.0689%" height="15" fill="rgb(228,9,43)" fg:x="354" fg:w="1"/><text x="24.6470%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="24.3970%" y="1525" width="0.0689%" height="15" fill="rgb(208,100,47)" fg:x="354" fg:w="1"/><text x="24.6470%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="24.3970%" y="1509" width="0.0689%" height="15" fill="rgb(232,26,8)" fg:x="354" fg:w="1"/><text x="24.6470%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="24.3970%" y="1493" width="0.0689%" height="15" fill="rgb(216,166,38)" fg:x="354" fg:w="1"/><text x="24.6470%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="24.3970%" y="1477" width="0.0689%" height="15" fill="rgb(251,202,51)" fg:x="354" fg:w="1"/><text x="24.6470%" y="1487.50"></text></g><g><title>std::path::Path::file_name (2 samples, 0.14%)</title><rect x="24.4659%" y="1685" width="0.1378%" height="15" fill="rgb(254,216,34)" fg:x="355" fg:w="2"/><text x="24.7159%" y="1695.50"></text></g><g><title>std::path::Path::is_dir (1 samples, 0.07%)</title><rect x="24.6037%" y="1685" width="0.0689%" height="15" fill="rgb(251,32,27)" fg:x="357" fg:w="1"/><text x="24.8537%" y="1695.50"></text></g><g><title>std::sys::unix::fs::File::open_c (3 samples, 0.21%)</title><rect x="24.6726%" y="1685" width="0.2068%" height="15" fill="rgb(208,127,28)" fg:x="358" fg:w="3"/><text x="24.9226%" y="1695.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.07%)</title><rect x="24.8794%" y="1685" width="0.0689%" height="15" fill="rgb(224,137,22)" fg:x="361" fg:w="1"/><text x="25.1294%" y="1695.50"></text></g><g><title>std::sys::unix::fs::try_statx (5 samples, 0.34%)</title><rect x="24.9483%" y="1685" width="0.3446%" height="15" fill="rgb(254,70,32)" fg:x="362" fg:w="5"/><text x="25.1983%" y="1695.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.07%)</title><rect x="25.2240%" y="1669" width="0.0689%" height="15" fill="rgb(229,75,37)" fg:x="366" fg:w="1"/><text x="25.4740%" y="1679.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_str (1 samples, 0.07%)</title><rect x="25.2929%" y="1685" width="0.0689%" height="15" fill="rgb(252,64,23)" fg:x="367" fg:w="1"/><text x="25.5429%" y="1695.50"></text></g><g><title>sysinfo::linux::component::get_file_line (4 samples, 0.28%)</title><rect x="25.3618%" y="1685" width="0.2757%" height="15" fill="rgb(232,162,48)" fg:x="368" fg:w="4"/><text x="25.6118%" y="1695.50"></text></g><g><title>std::fs::File::open (1 samples, 0.07%)</title><rect x="25.5686%" y="1669" width="0.0689%" height="15" fill="rgb(246,160,12)" fg:x="371" fg:w="1"/><text x="25.8186%" y="1679.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.07%)</title><rect x="25.5686%" y="1653" width="0.0689%" height="15" fill="rgb(247,166,0)" fg:x="371" fg:w="1"/><text x="25.8186%" y="1663.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (3 samples, 0.21%)</title><rect x="25.7753%" y="1669" width="0.2068%" height="15" fill="rgb(249,219,21)" fg:x="374" fg:w="3"/><text x="26.0253%" y="1679.50"></text></g><g><title>[unknown] (118 samples, 8.13%)</title><rect x="17.9187%" y="1701" width="8.1323%" height="15" fill="rgb(205,209,3)" fg:x="260" fg:w="118"/><text x="18.1687%" y="1711.50">[unknown]</text></g><g><title>sysinfo::linux::component::read_number_from_file (6 samples, 0.41%)</title><rect x="25.6375%" y="1685" width="0.4135%" height="15" fill="rgb(243,44,1)" fg:x="372" fg:w="6"/><text x="25.8875%" y="1695.50"></text></g><g><title>std::fs::File::open (1 samples, 0.07%)</title><rect x="25.9821%" y="1669" width="0.0689%" height="15" fill="rgb(206,159,16)" fg:x="377" fg:w="1"/><text x="26.2321%" y="1679.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="26.0510%" y="1701" width="0.0689%" height="15" fill="rgb(244,77,30)" fg:x="378" fg:w="1"/><text x="26.3010%" y="1711.50"></text></g><g><title>hdf5::hl::container::Container::space (1 samples, 0.07%)</title><rect x="26.1199%" y="1381" width="0.0689%" height="15" fill="rgb(218,69,12)" fg:x="379" fg:w="1"/><text x="26.3699%" y="1391.50"></text></g><g><title>hdf5::sync::sync (1 samples, 0.07%)</title><rect x="26.1199%" y="1365" width="0.0689%" height="15" fill="rgb(212,87,7)" fg:x="379" fg:w="1"/><text x="26.3699%" y="1375.50"></text></g><g><title>hdf5::hl::container::Container::space::{{closure}} (1 samples, 0.07%)</title><rect x="26.1199%" y="1349" width="0.0689%" height="15" fill="rgb(245,114,25)" fg:x="379" fg:w="1"/><text x="26.3699%" y="1359.50"></text></g><g><title>H5Dget_space (1 samples, 0.07%)</title><rect x="26.1199%" y="1333" width="0.0689%" height="15" fill="rgb(210,61,42)" fg:x="379" fg:w="1"/><text x="26.3699%" y="1343.50"></text></g><g><title>H5VL_dataset_get (1 samples, 0.07%)</title><rect x="26.1199%" y="1317" width="0.0689%" height="15" fill="rgb(211,52,33)" fg:x="379" fg:w="1"/><text x="26.3699%" y="1327.50"></text></g><g><title>H5VL_set_vol_wrapper (1 samples, 0.07%)</title><rect x="26.1199%" y="1301" width="0.0689%" height="15" fill="rgb(234,58,33)" fg:x="379" fg:w="1"/><text x="26.3699%" y="1311.50"></text></g><g><title>&lt;generator::SensorDataHandler&lt;T&gt; as generator::Updatable&gt;::finalize (2 samples, 0.14%)</title><rect x="26.1199%" y="1429" width="0.1378%" height="15" fill="rgb(220,115,36)" fg:x="379" fg:w="2"/><text x="26.3699%" y="1439.50"></text></g><g><title>hdf5::hl::container::Container::write_slice (2 samples, 0.14%)</title><rect x="26.1199%" y="1413" width="0.1378%" height="15" fill="rgb(243,153,54)" fg:x="379" fg:w="2"/><text x="26.3699%" y="1423.50"></text></g><g><title>hdf5::hl::container::Writer::write_slice (2 samples, 0.14%)</title><rect x="26.1199%" y="1397" width="0.1378%" height="15" fill="rgb(251,47,18)" fg:x="379" fg:w="2"/><text x="26.3699%" y="1407.50"></text></g><g><title>hdf5::hl::container::Writer::write_from_buf (1 samples, 0.07%)</title><rect x="26.1888%" y="1381" width="0.0689%" height="15" fill="rgb(242,102,42)" fg:x="380" fg:w="1"/><text x="26.4388%" y="1391.50"></text></g><g><title>hdf5::hl::container::Container::dtype (1 samples, 0.07%)</title><rect x="26.1888%" y="1365" width="0.0689%" height="15" fill="rgb(234,31,38)" fg:x="380" fg:w="1"/><text x="26.4388%" y="1375.50"></text></g><g><title>hdf5::sync::sync (1 samples, 0.07%)</title><rect x="26.1888%" y="1349" width="0.0689%" height="15" fill="rgb(221,117,51)" fg:x="380" fg:w="1"/><text x="26.4388%" y="1359.50"></text></g><g><title>hdf5::hl::container::Container::dtype::{{closure}} (1 samples, 0.07%)</title><rect x="26.1888%" y="1333" width="0.0689%" height="15" fill="rgb(212,20,18)" fg:x="380" fg:w="1"/><text x="26.4388%" y="1343.50"></text></g><g><title>H5Dget_type (1 samples, 0.07%)</title><rect x="26.1888%" y="1317" width="0.0689%" height="15" fill="rgb(245,133,36)" fg:x="380" fg:w="1"/><text x="26.4388%" y="1327.50"></text></g><g><title>H5VL_dataset_get (1 samples, 0.07%)</title><rect x="26.1888%" y="1301" width="0.0689%" height="15" fill="rgb(212,6,19)" fg:x="380" fg:w="1"/><text x="26.4388%" y="1311.50"></text></g><g><title>[libhdf5.so.200.2.0] (1 samples, 0.07%)</title><rect x="26.1888%" y="1285" width="0.0689%" height="15" fill="rgb(218,1,36)" fg:x="380" fg:w="1"/><text x="26.4388%" y="1295.50"></text></g><g><title>H5VL__native_dataset_get (1 samples, 0.07%)</title><rect x="26.1888%" y="1269" width="0.0689%" height="15" fill="rgb(246,84,54)" fg:x="380" fg:w="1"/><text x="26.4388%" y="1279.50"></text></g><g><title>H5D__get_type (1 samples, 0.07%)</title><rect x="26.1888%" y="1253" width="0.0689%" height="15" fill="rgb(242,110,6)" fg:x="380" fg:w="1"/><text x="26.4388%" y="1263.50"></text></g><g><title>H5T_patch_file (1 samples, 0.07%)</title><rect x="26.1888%" y="1237" width="0.0689%" height="15" fill="rgb(214,47,5)" fg:x="380" fg:w="1"/><text x="26.4388%" y="1247.50"></text></g><g><title>&lt;sysinfo::linux::cpu::Cpu as sysinfo::traits::CpuExt&gt;::cpu_usage (1 samples, 0.07%)</title><rect x="26.3956%" y="1381" width="0.0689%" height="15" fill="rgb(218,159,25)" fg:x="383" fg:w="1"/><text x="26.6456%" y="1391.50"></text></g><g><title>generator::initialize_cpu_data::{{closure}} (3 samples, 0.21%)</title><rect x="26.3267%" y="1397" width="0.2068%" height="15" fill="rgb(215,211,28)" fg:x="382" fg:w="3"/><text x="26.5767%" y="1407.50"></text></g><g><title>std::time::SystemTime::now (1 samples, 0.07%)</title><rect x="26.4645%" y="1381" width="0.0689%" height="15" fill="rgb(238,59,32)" fg:x="384" fg:w="1"/><text x="26.7145%" y="1391.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (1 samples, 0.07%)</title><rect x="26.4645%" y="1365" width="0.0689%" height="15" fill="rgb(226,82,3)" fg:x="384" fg:w="1"/><text x="26.7145%" y="1375.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.07%)</title><rect x="26.4645%" y="1349" width="0.0689%" height="15" fill="rgb(240,164,32)" fg:x="384" fg:w="1"/><text x="26.7145%" y="1359.50"></text></g><g><title>clock_gettime (1 samples, 0.07%)</title><rect x="26.4645%" y="1333" width="0.0689%" height="15" fill="rgb(232,46,7)" fg:x="384" fg:w="1"/><text x="26.7145%" y="1343.50"></text></g><g><title>generator::initialize_data_file::{{closure}} (1 samples, 0.07%)</title><rect x="26.5334%" y="1397" width="0.0689%" height="15" fill="rgb(229,129,53)" fg:x="385" fg:w="1"/><text x="26.7834%" y="1407.50"></text></g><g><title>std::time::SystemTime::now (1 samples, 0.07%)</title><rect x="26.5334%" y="1381" width="0.0689%" height="15" fill="rgb(234,188,29)" fg:x="385" fg:w="1"/><text x="26.7834%" y="1391.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (1 samples, 0.07%)</title><rect x="26.5334%" y="1365" width="0.0689%" height="15" fill="rgb(246,141,4)" fg:x="385" fg:w="1"/><text x="26.7834%" y="1375.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.07%)</title><rect x="26.5334%" y="1349" width="0.0689%" height="15" fill="rgb(229,23,39)" fg:x="385" fg:w="1"/><text x="26.7834%" y="1359.50"></text></g><g><title>clock_gettime (1 samples, 0.07%)</title><rect x="26.5334%" y="1333" width="0.0689%" height="15" fill="rgb(206,12,3)" fg:x="385" fg:w="1"/><text x="26.7834%" y="1343.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (5 samples, 0.34%)</title><rect x="26.3267%" y="1413" width="0.3446%" height="15" fill="rgb(252,226,20)" fg:x="382" fg:w="5"/><text x="26.5767%" y="1423.50"></text></g><g><title>generator::initialize_disk_data::{{closure}} (1 samples, 0.07%)</title><rect x="26.6023%" y="1397" width="0.0689%" height="15" fill="rgb(216,123,35)" fg:x="386" fg:w="1"/><text x="26.8523%" y="1407.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="26.8091%" y="1397" width="0.0689%" height="15" fill="rgb(212,68,40)" fg:x="389" fg:w="1"/><text x="27.0591%" y="1407.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (13 samples, 0.90%)</title><rect x="26.6713%" y="1413" width="0.8959%" height="15" fill="rgb(254,125,32)" fg:x="387" fg:w="13"/><text x="26.9213%" y="1423.50"></text></g><g><title>&lt;generator::SensorDataHandler&lt;T&gt; as generator::Updatable&gt;::update::{{closure}} (10 samples, 0.69%)</title><rect x="26.8780%" y="1397" width="0.6892%" height="15" fill="rgb(253,97,22)" fg:x="390" fg:w="10"/><text x="27.1280%" y="1407.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (10 samples, 0.69%)</title><rect x="26.8780%" y="1381" width="0.6892%" height="15" fill="rgb(241,101,14)" fg:x="390" fg:w="10"/><text x="27.1280%" y="1391.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (10 samples, 0.69%)</title><rect x="26.8780%" y="1365" width="0.6892%" height="15" fill="rgb(238,103,29)" fg:x="390" fg:w="10"/><text x="27.1280%" y="1375.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (1 samples, 0.07%)</title><rect x="27.5672%" y="1413" width="0.0689%" height="15" fill="rgb(233,195,47)" fg:x="400" fg:w="1"/><text x="27.8172%" y="1423.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (1 samples, 0.07%)</title><rect x="27.5672%" y="1397" width="0.0689%" height="15" fill="rgb(246,218,30)" fg:x="400" fg:w="1"/><text x="27.8172%" y="1407.50"></text></g><g><title>core::cell::BorrowRef::new (1 samples, 0.07%)</title><rect x="27.5672%" y="1381" width="0.0689%" height="15" fill="rgb(219,145,47)" fg:x="400" fg:w="1"/><text x="27.8172%" y="1391.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="27.5672%" y="1365" width="0.0689%" height="15" fill="rgb(243,12,26)" fg:x="400" fg:w="1"/><text x="27.8172%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;hdf5::hl::dataspace::Dataspace&gt; (1 samples, 0.07%)</title><rect x="27.6361%" y="1381" width="0.0689%" height="15" fill="rgb(214,87,16)" fg:x="401" fg:w="1"/><text x="27.8861%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;hdf5::handle::Handle&gt; (1 samples, 0.07%)</title><rect x="27.6361%" y="1365" width="0.0689%" height="15" fill="rgb(208,99,42)" fg:x="401" fg:w="1"/><text x="27.8861%" y="1375.50"></text></g><g><title>&lt;hdf5::handle::Handle as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="27.6361%" y="1349" width="0.0689%" height="15" fill="rgb(253,99,2)" fg:x="401" fg:w="1"/><text x="27.8861%" y="1359.50"></text></g><g><title>hdf5::sync::sync (1 samples, 0.07%)</title><rect x="27.6361%" y="1333" width="0.0689%" height="15" fill="rgb(220,168,23)" fg:x="401" fg:w="1"/><text x="27.8861%" y="1343.50"></text></g><g><title>&lt;hdf5::handle::Handle as core::ops::drop::Drop&gt;::drop::{{closure}} (1 samples, 0.07%)</title><rect x="27.6361%" y="1317" width="0.0689%" height="15" fill="rgb(242,38,24)" fg:x="401" fg:w="1"/><text x="27.8861%" y="1327.50"></text></g><g><title>hdf5::handle::Handle::decref (1 samples, 0.07%)</title><rect x="27.6361%" y="1301" width="0.0689%" height="15" fill="rgb(225,182,9)" fg:x="401" fg:w="1"/><text x="27.8861%" y="1311.50"></text></g><g><title>hdf5::sync::sync (1 samples, 0.07%)</title><rect x="27.6361%" y="1285" width="0.0689%" height="15" fill="rgb(243,178,37)" fg:x="401" fg:w="1"/><text x="27.8861%" y="1295.50"></text></g><g><title>hdf5::handle::Handle::decref::{{closure}} (1 samples, 0.07%)</title><rect x="27.6361%" y="1269" width="0.0689%" height="15" fill="rgb(232,139,19)" fg:x="401" fg:w="1"/><text x="27.8861%" y="1279.50"></text></g><g><title>hdf5::handle::Handle::is_valid_id (1 samples, 0.07%)</title><rect x="27.6361%" y="1253" width="0.0689%" height="15" fill="rgb(225,201,24)" fg:x="401" fg:w="1"/><text x="27.8861%" y="1263.50"></text></g><g><title>hdf5::handle::Handle::id_type (1 samples, 0.07%)</title><rect x="27.6361%" y="1237" width="0.0689%" height="15" fill="rgb(221,47,46)" fg:x="401" fg:w="1"/><text x="27.8861%" y="1247.50"></text></g><g><title>hdf5::sync::sync (1 samples, 0.07%)</title><rect x="27.6361%" y="1221" width="0.0689%" height="15" fill="rgb(249,23,13)" fg:x="401" fg:w="1"/><text x="27.8861%" y="1231.50"></text></g><g><title>hdf5::handle::Handle::id_type::{{closure}} (1 samples, 0.07%)</title><rect x="27.6361%" y="1205" width="0.0689%" height="15" fill="rgb(219,9,5)" fg:x="401" fg:w="1"/><text x="27.8861%" y="1215.50"></text></g><g><title>H5Iget_type (1 samples, 0.07%)</title><rect x="27.6361%" y="1189" width="0.0689%" height="15" fill="rgb(254,171,16)" fg:x="401" fg:w="1"/><text x="27.8861%" y="1199.50"></text></g><g><title>H5I_object (1 samples, 0.07%)</title><rect x="27.6361%" y="1173" width="0.0689%" height="15" fill="rgb(230,171,20)" fg:x="401" fg:w="1"/><text x="27.8861%" y="1183.50"></text></g><g><title>H5I__find_id (1 samples, 0.07%)</title><rect x="27.6361%" y="1157" width="0.0689%" height="15" fill="rgb(210,71,41)" fg:x="401" fg:w="1"/><text x="27.8861%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hdf5::hl::datatype::Datatype&gt; (1 samples, 0.07%)</title><rect x="27.7050%" y="1365" width="0.0689%" height="15" fill="rgb(206,173,20)" fg:x="402" fg:w="1"/><text x="27.9550%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;hdf5::handle::Handle&gt; (1 samples, 0.07%)</title><rect x="27.7050%" y="1349" width="0.0689%" height="15" fill="rgb(233,88,34)" fg:x="402" fg:w="1"/><text x="27.9550%" y="1359.50"></text></g><g><title>&lt;hdf5::handle::Handle as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="27.7050%" y="1333" width="0.0689%" height="15" fill="rgb(223,209,46)" fg:x="402" fg:w="1"/><text x="27.9550%" y="1343.50"></text></g><g><title>hdf5::sync::sync (1 samples, 0.07%)</title><rect x="27.7050%" y="1317" width="0.0689%" height="15" fill="rgb(250,43,18)" fg:x="402" fg:w="1"/><text x="27.9550%" y="1327.50"></text></g><g><title>&lt;hdf5::handle::Handle as core::ops::drop::Drop&gt;::drop::{{closure}} (1 samples, 0.07%)</title><rect x="27.7050%" y="1301" width="0.0689%" height="15" fill="rgb(208,13,10)" fg:x="402" fg:w="1"/><text x="27.9550%" y="1311.50"></text></g><g><title>hdf5::handle::Handle::decref (1 samples, 0.07%)</title><rect x="27.7050%" y="1285" width="0.0689%" height="15" fill="rgb(212,200,36)" fg:x="402" fg:w="1"/><text x="27.9550%" y="1295.50"></text></g><g><title>hdf5::sync::sync (1 samples, 0.07%)</title><rect x="27.7050%" y="1269" width="0.0689%" height="15" fill="rgb(225,90,30)" fg:x="402" fg:w="1"/><text x="27.9550%" y="1279.50"></text></g><g><title>hdf5::handle::Handle::decref::{{closure}} (1 samples, 0.07%)</title><rect x="27.7050%" y="1253" width="0.0689%" height="15" fill="rgb(236,182,39)" fg:x="402" fg:w="1"/><text x="27.9550%" y="1263.50"></text></g><g><title>H5Idec_ref (1 samples, 0.07%)</title><rect x="27.7050%" y="1237" width="0.0689%" height="15" fill="rgb(212,144,35)" fg:x="402" fg:w="1"/><text x="27.9550%" y="1247.50"></text></g><g><title>H5I_dec_app_ref (1 samples, 0.07%)</title><rect x="27.7050%" y="1221" width="0.0689%" height="15" fill="rgb(228,63,44)" fg:x="402" fg:w="1"/><text x="27.9550%" y="1231.50"></text></g><g><title>H5I_dec_ref (1 samples, 0.07%)</title><rect x="27.7050%" y="1205" width="0.0689%" height="15" fill="rgb(228,109,6)" fg:x="402" fg:w="1"/><text x="27.9550%" y="1215.50"></text></g><g><title>[libhdf5.so.200.2.0] (1 samples, 0.07%)</title><rect x="27.7050%" y="1189" width="0.0689%" height="15" fill="rgb(238,117,24)" fg:x="402" fg:w="1"/><text x="27.9550%" y="1199.50"></text></g><g><title>H5T_close (1 samples, 0.07%)</title><rect x="27.7050%" y="1173" width="0.0689%" height="15" fill="rgb(242,26,26)" fg:x="402" fg:w="1"/><text x="27.9550%" y="1183.50"></text></g><g><title>H5FL_seq_free (1 samples, 0.07%)</title><rect x="27.7739%" y="1205" width="0.0689%" height="15" fill="rgb(221,92,48)" fg:x="403" fg:w="1"/><text x="28.0239%" y="1215.50"></text></g><g><title>H5FL_blk_free (1 samples, 0.07%)</title><rect x="27.7739%" y="1189" width="0.0689%" height="15" fill="rgb(209,209,32)" fg:x="403" fg:w="1"/><text x="28.0239%" y="1199.50"></text></g><g><title>H5S_select_iter_get_seq_list (1 samples, 0.07%)</title><rect x="27.8429%" y="1205" width="0.0689%" height="15" fill="rgb(221,70,22)" fg:x="404" fg:w="1"/><text x="28.0929%" y="1215.50"></text></g><g><title>[libhdf5.so.200.2.0] (1 samples, 0.07%)</title><rect x="27.8429%" y="1189" width="0.0689%" height="15" fill="rgb(248,145,5)" fg:x="404" fg:w="1"/><text x="28.0929%" y="1199.50"></text></g><g><title>hdf5::hl::container::Writer::write_from_buf (6 samples, 0.41%)</title><rect x="27.7050%" y="1381" width="0.4135%" height="15" fill="rgb(226,116,26)" fg:x="402" fg:w="6"/><text x="27.9550%" y="1391.50"></text></g><g><title>hdf5::sync::sync (5 samples, 0.34%)</title><rect x="27.7739%" y="1365" width="0.3446%" height="15" fill="rgb(244,5,17)" fg:x="403" fg:w="5"/><text x="28.0239%" y="1375.50"></text></g><g><title>hdf5::hl::container::Writer::write_from_buf::{{closure}} (5 samples, 0.34%)</title><rect x="27.7739%" y="1349" width="0.3446%" height="15" fill="rgb(252,159,33)" fg:x="403" fg:w="5"/><text x="28.0239%" y="1359.50"></text></g><g><title>H5Dwrite (5 samples, 0.34%)</title><rect x="27.7739%" y="1333" width="0.3446%" height="15" fill="rgb(206,71,0)" fg:x="403" fg:w="5"/><text x="28.0239%" y="1343.50"></text></g><g><title>H5VL_dataset_write (5 samples, 0.34%)</title><rect x="27.7739%" y="1317" width="0.3446%" height="15" fill="rgb(233,118,54)" fg:x="403" fg:w="5"/><text x="28.0239%" y="1327.50"></text></g><g><title>[libhdf5.so.200.2.0] (5 samples, 0.34%)</title><rect x="27.7739%" y="1301" width="0.3446%" height="15" fill="rgb(234,83,48)" fg:x="403" fg:w="5"/><text x="28.0239%" y="1311.50"></text></g><g><title>H5VL__native_dataset_write (5 samples, 0.34%)</title><rect x="27.7739%" y="1285" width="0.3446%" height="15" fill="rgb(228,3,54)" fg:x="403" fg:w="5"/><text x="28.0239%" y="1295.50"></text></g><g><title>H5D__write (5 samples, 0.34%)</title><rect x="27.7739%" y="1269" width="0.3446%" height="15" fill="rgb(226,155,13)" fg:x="403" fg:w="5"/><text x="28.0239%" y="1279.50"></text></g><g><title>H5D__contig_write (5 samples, 0.34%)</title><rect x="27.7739%" y="1253" width="0.3446%" height="15" fill="rgb(241,28,37)" fg:x="403" fg:w="5"/><text x="28.0239%" y="1263.50"></text></g><g><title>H5D__select_write (5 samples, 0.34%)</title><rect x="27.7739%" y="1237" width="0.3446%" height="15" fill="rgb(233,93,10)" fg:x="403" fg:w="5"/><text x="28.0239%" y="1247.50"></text></g><g><title>[libhdf5.so.200.2.0] (5 samples, 0.34%)</title><rect x="27.7739%" y="1221" width="0.3446%" height="15" fill="rgb(225,113,19)" fg:x="403" fg:w="5"/><text x="28.0239%" y="1231.50"></text></g><g><title>[libhdf5.so.200.2.0] (3 samples, 0.21%)</title><rect x="27.9118%" y="1205" width="0.2068%" height="15" fill="rgb(241,2,18)" fg:x="405" fg:w="3"/><text x="28.1618%" y="1215.50"></text></g><g><title>H5VM_opvv (3 samples, 0.21%)</title><rect x="27.9118%" y="1189" width="0.2068%" height="15" fill="rgb(228,207,21)" fg:x="405" fg:w="3"/><text x="28.1618%" y="1199.50"></text></g><g><title>[libhdf5.so.200.2.0] (3 samples, 0.21%)</title><rect x="27.9118%" y="1173" width="0.2068%" height="15" fill="rgb(213,211,35)" fg:x="405" fg:w="3"/><text x="28.1618%" y="1183.50"></text></g><g><title>H5FL_blk_calloc (3 samples, 0.21%)</title><rect x="27.9118%" y="1157" width="0.2068%" height="15" fill="rgb(209,83,10)" fg:x="405" fg:w="3"/><text x="28.1618%" y="1167.50"></text></g><g><title>[libc.so.6] (3 samples, 0.21%)</title><rect x="27.9118%" y="1141" width="0.2068%" height="15" fill="rgb(209,164,1)" fg:x="405" fg:w="3"/><text x="28.1618%" y="1151.50"></text></g><g><title>hdf5::hl::dataspace::Dataspace::select (1 samples, 0.07%)</title><rect x="28.1185%" y="1381" width="0.0689%" height="15" fill="rgb(213,184,43)" fg:x="408" fg:w="1"/><text x="28.3685%" y="1391.50"></text></g><g><title>hdf5::hl::dataspace::Dataspace::select_raw (1 samples, 0.07%)</title><rect x="28.1185%" y="1365" width="0.0689%" height="15" fill="rgb(231,61,34)" fg:x="408" fg:w="1"/><text x="28.3685%" y="1375.50"></text></g><g><title>hdf5::sync::sync (1 samples, 0.07%)</title><rect x="28.1185%" y="1349" width="0.0689%" height="15" fill="rgb(235,75,3)" fg:x="408" fg:w="1"/><text x="28.3685%" y="1359.50"></text></g><g><title>hdf5::hl::dataspace::Dataspace::select_raw::{{closure}} (1 samples, 0.07%)</title><rect x="28.1185%" y="1333" width="0.0689%" height="15" fill="rgb(220,106,47)" fg:x="408" fg:w="1"/><text x="28.3685%" y="1343.50"></text></g><g><title>hdf5::hl::selection::RawSelection::apply_to_dataspace (1 samples, 0.07%)</title><rect x="28.1185%" y="1317" width="0.0689%" height="15" fill="rgb(210,196,33)" fg:x="408" fg:w="1"/><text x="28.3685%" y="1327.50"></text></g><g><title>hdf5::hl::selection::set_regular_hyperslab (1 samples, 0.07%)</title><rect x="28.1185%" y="1301" width="0.0689%" height="15" fill="rgb(229,154,42)" fg:x="408" fg:w="1"/><text x="28.3685%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.07%)</title><rect x="28.1185%" y="1285" width="0.0689%" height="15" fill="rgb(228,114,26)" fg:x="408" fg:w="1"/><text x="28.3685%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="28.1185%" y="1269" width="0.0689%" height="15" fill="rgb(208,144,1)" fg:x="408" fg:w="1"/><text x="28.3685%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="28.1185%" y="1253" width="0.0689%" height="15" fill="rgb(239,112,37)" fg:x="408" fg:w="1"/><text x="28.3685%" y="1263.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="28.1185%" y="1237" width="0.0689%" height="15" fill="rgb(210,96,50)" fg:x="408" fg:w="1"/><text x="28.3685%" y="1247.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="28.1185%" y="1221" width="0.0689%" height="15" fill="rgb(222,178,2)" fg:x="408" fg:w="1"/><text x="28.3685%" y="1231.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="28.1185%" y="1205" width="0.0689%" height="15" fill="rgb(226,74,18)" fg:x="408" fg:w="1"/><text x="28.3685%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="28.1185%" y="1189" width="0.0689%" height="15" fill="rgb(225,67,54)" fg:x="408" fg:w="1"/><text x="28.3685%" y="1199.50"></text></g><g><title>&lt;generator::SensorDataHandler&lt;T&gt; as generator::Updatable&gt;::update (29 samples, 2.00%)</title><rect x="26.2578%" y="1429" width="1.9986%" height="15" fill="rgb(251,92,32)" fg:x="381" fg:w="29"/><text x="26.5078%" y="1439.50">&lt;..</text></g><g><title>hdf5::hl::container::Container::write_slice (9 samples, 0.62%)</title><rect x="27.6361%" y="1413" width="0.6203%" height="15" fill="rgb(228,149,22)" fg:x="401" fg:w="9"/><text x="27.8861%" y="1423.50"></text></g><g><title>hdf5::hl::container::Writer::write_slice (9 samples, 0.62%)</title><rect x="27.6361%" y="1397" width="0.6203%" height="15" fill="rgb(243,54,13)" fg:x="401" fg:w="9"/><text x="27.8861%" y="1407.50"></text></g><g><title>hdf5::hl::selection::Selection::out_shape (1 samples, 0.07%)</title><rect x="28.1875%" y="1381" width="0.0689%" height="15" fill="rgb(243,180,28)" fg:x="409" fg:w="1"/><text x="28.4375%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="28.1875%" y="1365" width="0.0689%" height="15" fill="rgb(208,167,24)" fg:x="409" fg:w="1"/><text x="28.4375%" y="1375.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="28.1875%" y="1349" width="0.0689%" height="15" fill="rgb(245,73,45)" fg:x="409" fg:w="1"/><text x="28.4375%" y="1359.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.07%)</title><rect x="28.1875%" y="1333" width="0.0689%" height="15" fill="rgb(237,203,48)" fg:x="409" fg:w="1"/><text x="28.4375%" y="1343.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.07%)</title><rect x="28.1875%" y="1317" width="0.0689%" height="15" fill="rgb(211,197,16)" fg:x="409" fg:w="1"/><text x="28.4375%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="28.1875%" y="1301" width="0.0689%" height="15" fill="rgb(243,99,51)" fg:x="409" fg:w="1"/><text x="28.4375%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="28.1875%" y="1285" width="0.0689%" height="15" fill="rgb(215,123,29)" fg:x="409" fg:w="1"/><text x="28.4375%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="28.1875%" y="1269" width="0.0689%" height="15" fill="rgb(239,186,37)" fg:x="409" fg:w="1"/><text x="28.4375%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="28.1875%" y="1253" width="0.0689%" height="15" fill="rgb(252,136,39)" fg:x="409" fg:w="1"/><text x="28.4375%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="28.1875%" y="1237" width="0.0689%" height="15" fill="rgb(223,213,32)" fg:x="409" fg:w="1"/><text x="28.4375%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.07%)</title><rect x="28.1875%" y="1221" width="0.0689%" height="15" fill="rgb(233,115,5)" fg:x="409" fg:w="1"/><text x="28.4375%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="28.1875%" y="1205" width="0.0689%" height="15" fill="rgb(207,226,44)" fg:x="409" fg:w="1"/><text x="28.4375%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="28.1875%" y="1189" width="0.0689%" height="15" fill="rgb(208,126,0)" fg:x="409" fg:w="1"/><text x="28.4375%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="28.1875%" y="1173" width="0.0689%" height="15" fill="rgb(244,66,21)" fg:x="409" fg:w="1"/><text x="28.4375%" y="1183.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (1 samples, 0.07%)</title><rect x="28.1875%" y="1157" width="0.0689%" height="15" fill="rgb(222,97,12)" fg:x="409" fg:w="1"/><text x="28.4375%" y="1167.50"></text></g><g><title>hdf5::hl::selection::Selection::out_shape::{{closure}} (1 samples, 0.07%)</title><rect x="28.1875%" y="1141" width="0.0689%" height="15" fill="rgb(219,213,19)" fg:x="409" fg:w="1"/><text x="28.4375%" y="1151.50"></text></g><g><title>hdf5::hl::selection::SliceOrIndex::is_index (1 samples, 0.07%)</title><rect x="28.1875%" y="1125" width="0.0689%" height="15" fill="rgb(252,169,30)" fg:x="409" fg:w="1"/><text x="28.4375%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.07%)</title><rect x="28.2564%" y="1381" width="0.0689%" height="15" fill="rgb(206,32,51)" fg:x="410" fg:w="1"/><text x="28.5064%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.07%)</title><rect x="28.2564%" y="1365" width="0.0689%" height="15" fill="rgb(250,172,42)" fg:x="410" fg:w="1"/><text x="28.5064%" y="1375.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.07%)</title><rect x="28.3253%" y="1253" width="0.0689%" height="15" fill="rgb(209,34,43)" fg:x="411" fg:w="1"/><text x="28.5753%" y="1263.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.07%)</title><rect x="28.3253%" y="1237" width="0.0689%" height="15" fill="rgb(223,11,35)" fg:x="411" fg:w="1"/><text x="28.5753%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (10 samples, 0.69%)</title><rect x="28.3253%" y="1349" width="0.6892%" height="15" fill="rgb(251,219,26)" fg:x="411" fg:w="10"/><text x="28.5753%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (10 samples, 0.69%)</title><rect x="28.3253%" y="1333" width="0.6892%" height="15" fill="rgb(231,119,3)" fg:x="411" fg:w="10"/><text x="28.5753%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (10 samples, 0.69%)</title><rect x="28.3253%" y="1317" width="0.6892%" height="15" fill="rgb(216,97,11)" fg:x="411" fg:w="10"/><text x="28.5753%" y="1327.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.69%)</title><rect x="28.3253%" y="1301" width="0.6892%" height="15" fill="rgb(223,59,9)" fg:x="411" fg:w="10"/><text x="28.5753%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.69%)</title><rect x="28.3253%" y="1285" width="0.6892%" height="15" fill="rgb(233,93,31)" fg:x="411" fg:w="10"/><text x="28.5753%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.69%)</title><rect x="28.3253%" y="1269" width="0.6892%" height="15" fill="rgb(239,81,33)" fg:x="411" fg:w="10"/><text x="28.5753%" y="1279.50"></text></g><g><title>cfree (9 samples, 0.62%)</title><rect x="28.3942%" y="1253" width="0.6203%" height="15" fill="rgb(213,120,34)" fg:x="412" fg:w="9"/><text x="28.6442%" y="1263.50"></text></g><g><title>[libc.so.6] (7 samples, 0.48%)</title><rect x="28.5320%" y="1237" width="0.4824%" height="15" fill="rgb(243,49,53)" fg:x="414" fg:w="7"/><text x="28.7820%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.90%)</title><rect x="28.2564%" y="1397" width="0.8959%" height="15" fill="rgb(247,216,33)" fg:x="410" fg:w="13"/><text x="28.5064%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sysinfo::linux::component::Component]&gt; (12 samples, 0.83%)</title><rect x="28.3253%" y="1381" width="0.8270%" height="15" fill="rgb(226,26,14)" fg:x="411" fg:w="12"/><text x="28.5753%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;sysinfo::linux::component::Component&gt; (12 samples, 0.83%)</title><rect x="28.3253%" y="1365" width="0.8270%" height="15" fill="rgb(215,49,53)" fg:x="411" fg:w="12"/><text x="28.5753%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;std::path::PathBuf&gt;&gt; (2 samples, 0.14%)</title><rect x="29.0145%" y="1349" width="0.1378%" height="15" fill="rgb(245,162,40)" fg:x="421" fg:w="2"/><text x="29.2645%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (2 samples, 0.14%)</title><rect x="29.0145%" y="1333" width="0.1378%" height="15" fill="rgb(229,68,17)" fg:x="421" fg:w="2"/><text x="29.2645%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (2 samples, 0.14%)</title><rect x="29.0145%" y="1317" width="0.1378%" height="15" fill="rgb(213,182,10)" fg:x="421" fg:w="2"/><text x="29.2645%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::os_str::Buf&gt; (2 samples, 0.14%)</title><rect x="29.0145%" y="1301" width="0.1378%" height="15" fill="rgb(245,125,30)" fg:x="421" fg:w="2"/><text x="29.2645%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="29.0145%" y="1285" width="0.1378%" height="15" fill="rgb(232,202,2)" fg:x="421" fg:w="2"/><text x="29.2645%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="29.0145%" y="1269" width="0.1378%" height="15" fill="rgb(237,140,51)" fg:x="421" fg:w="2"/><text x="29.2645%" y="1279.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="29.0145%" y="1253" width="0.1378%" height="15" fill="rgb(236,157,25)" fg:x="421" fg:w="2"/><text x="29.2645%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.14%)</title><rect x="29.0145%" y="1237" width="0.1378%" height="15" fill="rgb(219,209,0)" fg:x="421" fg:w="2"/><text x="29.2645%" y="1247.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.14%)</title><rect x="29.0145%" y="1221" width="0.1378%" height="15" fill="rgb(240,116,54)" fg:x="421" fg:w="2"/><text x="29.2645%" y="1231.50"></text></g><g><title>cfree (2 samples, 0.14%)</title><rect x="29.0145%" y="1205" width="0.1378%" height="15" fill="rgb(216,10,36)" fg:x="421" fg:w="2"/><text x="29.2645%" y="1215.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="29.0145%" y="1189" width="0.1378%" height="15" fill="rgb(222,72,44)" fg:x="421" fg:w="2"/><text x="29.2645%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sysinfo::linux::component::Component&gt;&gt; (14 samples, 0.96%)</title><rect x="28.2564%" y="1413" width="0.9649%" height="15" fill="rgb(232,159,9)" fg:x="410" fg:w="14"/><text x="28.5064%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sysinfo::linux::component::Component&gt;&gt; (1 samples, 0.07%)</title><rect x="29.1523%" y="1397" width="0.0689%" height="15" fill="rgb(210,39,32)" fg:x="423" fg:w="1"/><text x="29.4023%" y="1407.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="29.1523%" y="1381" width="0.0689%" height="15" fill="rgb(216,194,45)" fg:x="423" fg:w="1"/><text x="29.4023%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="29.1523%" y="1365" width="0.0689%" height="15" fill="rgb(218,18,35)" fg:x="423" fg:w="1"/><text x="29.4023%" y="1375.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="29.1523%" y="1349" width="0.0689%" height="15" fill="rgb(207,83,51)" fg:x="423" fg:w="1"/><text x="29.4023%" y="1359.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="29.1523%" y="1333" width="0.0689%" height="15" fill="rgb(225,63,43)" fg:x="423" fg:w="1"/><text x="29.4023%" y="1343.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="29.1523%" y="1317" width="0.0689%" height="15" fill="rgb(207,57,36)" fg:x="423" fg:w="1"/><text x="29.4023%" y="1327.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.07%)</title><rect x="29.2901%" y="1269" width="0.0689%" height="15" fill="rgb(216,99,33)" fg:x="425" fg:w="1"/><text x="29.5401%" y="1279.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.07%)</title><rect x="29.2901%" y="1253" width="0.0689%" height="15" fill="rgb(225,42,16)" fg:x="425" fg:w="1"/><text x="29.5401%" y="1263.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.07%)</title><rect x="29.2901%" y="1237" width="0.0689%" height="15" fill="rgb(220,201,45)" fg:x="425" fg:w="1"/><text x="29.5401%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.07%)</title><rect x="29.2901%" y="1221" width="0.0689%" height="15" fill="rgb(225,33,4)" fg:x="425" fg:w="1"/><text x="29.5401%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="29.2901%" y="1205" width="0.0689%" height="15" fill="rgb(224,33,50)" fg:x="425" fg:w="1"/><text x="29.5401%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="29.2901%" y="1189" width="0.0689%" height="15" fill="rgb(246,198,51)" fg:x="425" fg:w="1"/><text x="29.5401%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="29.2901%" y="1173" width="0.0689%" height="15" fill="rgb(205,22,4)" fg:x="425" fg:w="1"/><text x="29.5401%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="29.2901%" y="1157" width="0.0689%" height="15" fill="rgb(206,3,8)" fg:x="425" fg:w="1"/><text x="29.5401%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="29.2901%" y="1141" width="0.0689%" height="15" fill="rgb(251,23,15)" fg:x="425" fg:w="1"/><text x="29.5401%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="29.2901%" y="1125" width="0.0689%" height="15" fill="rgb(252,88,28)" fg:x="425" fg:w="1"/><text x="29.5401%" y="1135.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="29.2901%" y="1109" width="0.0689%" height="15" fill="rgb(212,127,14)" fg:x="425" fg:w="1"/><text x="29.5401%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="29.3591%" y="1269" width="0.0689%" height="15" fill="rgb(247,145,37)" fg:x="426" fg:w="1"/><text x="29.6091%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.07%)</title><rect x="29.3591%" y="1253" width="0.0689%" height="15" fill="rgb(209,117,53)" fg:x="426" fg:w="1"/><text x="29.6091%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.07%)</title><rect x="29.3591%" y="1237" width="0.0689%" height="15" fill="rgb(212,90,42)" fg:x="426" fg:w="1"/><text x="29.6091%" y="1247.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.28%)</title><rect x="29.2901%" y="1317" width="0.2757%" height="15" fill="rgb(218,164,37)" fg:x="425" fg:w="4"/><text x="29.5401%" y="1327.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.28%)</title><rect x="29.2901%" y="1301" width="0.2757%" height="15" fill="rgb(246,65,34)" fg:x="425" fg:w="4"/><text x="29.5401%" y="1311.50"></text></g><g><title>&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.28%)</title><rect x="29.2901%" y="1285" width="0.2757%" height="15" fill="rgb(231,100,33)" fg:x="425" fg:w="4"/><text x="29.5401%" y="1295.50"></text></g><g><title>readdir64 (2 samples, 0.14%)</title><rect x="29.4280%" y="1269" width="0.1378%" height="15" fill="rgb(228,126,14)" fg:x="427" fg:w="2"/><text x="29.6780%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.34%)</title><rect x="29.2901%" y="1365" width="0.3446%" height="15" fill="rgb(215,173,21)" fg:x="425" fg:w="5"/><text x="29.5401%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (5 samples, 0.34%)</title><rect x="29.2901%" y="1349" width="0.3446%" height="15" fill="rgb(210,6,40)" fg:x="425" fg:w="5"/><text x="29.5401%" y="1359.50"></text></g><g><title>core::iter::adapters::fuse::and_then_or_clear (5 samples, 0.34%)</title><rect x="29.2901%" y="1333" width="0.3446%" height="15" fill="rgb(212,48,18)" fg:x="425" fg:w="5"/><text x="29.5401%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;std::fs::ReadDir&gt;&gt; (1 samples, 0.07%)</title><rect x="29.5658%" y="1317" width="0.0689%" height="15" fill="rgb(230,214,11)" fg:x="429" fg:w="1"/><text x="29.8158%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::ReadDir&gt; (1 samples, 0.07%)</title><rect x="29.5658%" y="1301" width="0.0689%" height="15" fill="rgb(254,105,39)" fg:x="429" fg:w="1"/><text x="29.8158%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::ReadDir&gt; (1 samples, 0.07%)</title><rect x="29.5658%" y="1285" width="0.0689%" height="15" fill="rgb(245,158,5)" fg:x="429" fg:w="1"/><text x="29.8158%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sys::unix::fs::InnerReadDir&gt;&gt; (1 samples, 0.07%)</title><rect x="29.5658%" y="1269" width="0.0689%" height="15" fill="rgb(249,208,11)" fg:x="429" fg:w="1"/><text x="29.8158%" y="1279.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="29.5658%" y="1253" width="0.0689%" height="15" fill="rgb(210,39,28)" fg:x="429" fg:w="1"/><text x="29.8158%" y="1263.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.07%)</title><rect x="29.5658%" y="1237" width="0.0689%" height="15" fill="rgb(211,56,53)" fg:x="429" fg:w="1"/><text x="29.8158%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::InnerReadDir&gt; (1 samples, 0.07%)</title><rect x="29.5658%" y="1221" width="0.0689%" height="15" fill="rgb(226,201,30)" fg:x="429" fg:w="1"/><text x="29.8158%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::Dir&gt; (1 samples, 0.07%)</title><rect x="29.5658%" y="1205" width="0.0689%" height="15" fill="rgb(239,101,34)" fg:x="429" fg:w="1"/><text x="29.8158%" y="1215.50"></text></g><g><title>&lt;std::sys::unix::fs::Dir as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="29.5658%" y="1189" width="0.0689%" height="15" fill="rgb(226,209,5)" fg:x="429" fg:w="1"/><text x="29.8158%" y="1199.50"></text></g><g><title>closedir (1 samples, 0.07%)</title><rect x="29.5658%" y="1173" width="0.0689%" height="15" fill="rgb(250,105,47)" fg:x="429" fg:w="1"/><text x="29.8158%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.48%)</title><rect x="29.2212%" y="1397" width="0.4824%" height="15" fill="rgb(230,72,3)" fg:x="424" fg:w="7"/><text x="29.4712%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.48%)</title><rect x="29.2212%" y="1381" width="0.4824%" height="15" fill="rgb(232,218,39)" fg:x="424" fg:w="7"/><text x="29.4712%" y="1391.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.07%)</title><rect x="29.6347%" y="1365" width="0.0689%" height="15" fill="rgb(248,166,6)" fg:x="430" fg:w="1"/><text x="29.8847%" y="1375.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (1 samples, 0.07%)</title><rect x="29.6347%" y="1349" width="0.0689%" height="15" fill="rgb(247,89,20)" fg:x="430" fg:w="1"/><text x="29.8847%" y="1359.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (1 samples, 0.07%)</title><rect x="29.7037%" y="1333" width="0.0689%" height="15" fill="rgb(248,130,54)" fg:x="431" fg:w="1"/><text x="29.9537%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.07%)</title><rect x="29.7037%" y="1317" width="0.0689%" height="15" fill="rgb(234,196,4)" fg:x="431" fg:w="1"/><text x="29.9537%" y="1327.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1 samples, 0.07%)</title><rect x="29.7037%" y="1301" width="0.0689%" height="15" fill="rgb(250,143,31)" fg:x="431" fg:w="1"/><text x="29.9537%" y="1311.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (1 samples, 0.07%)</title><rect x="29.7037%" y="1285" width="0.0689%" height="15" fill="rgb(211,110,34)" fg:x="431" fg:w="1"/><text x="29.9537%" y="1295.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="29.7037%" y="1269" width="0.0689%" height="15" fill="rgb(215,124,48)" fg:x="431" fg:w="1"/><text x="29.9537%" y="1279.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="29.7726%" y="1317" width="0.0689%" height="15" fill="rgb(216,46,13)" fg:x="432" fg:w="1"/><text x="30.0226%" y="1327.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="29.7726%" y="1301" width="0.0689%" height="15" fill="rgb(205,184,25)" fg:x="432" fg:w="1"/><text x="30.0226%" y="1311.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.07%)</title><rect x="29.7726%" y="1285" width="0.0689%" height="15" fill="rgb(228,1,10)" fg:x="432" fg:w="1"/><text x="30.0226%" y="1295.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (4 samples, 0.28%)</title><rect x="29.7726%" y="1333" width="0.2757%" height="15" fill="rgb(213,116,27)" fg:x="432" fg:w="4"/><text x="30.0226%" y="1343.50"></text></g><g><title>alloc::str::convert_while_ascii (3 samples, 0.21%)</title><rect x="29.8415%" y="1317" width="0.2068%" height="15" fill="rgb(241,95,50)" fg:x="433" fg:w="3"/><text x="30.0915%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="29.9793%" y="1301" width="0.0689%" height="15" fill="rgb(238,48,32)" fg:x="435" fg:w="1"/><text x="30.2293%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="29.9793%" y="1285" width="0.0689%" height="15" fill="rgb(235,113,49)" fg:x="435" fg:w="1"/><text x="30.2293%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="29.9793%" y="1269" width="0.0689%" height="15" fill="rgb(205,127,43)" fg:x="435" fg:w="1"/><text x="30.2293%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="29.9793%" y="1253" width="0.0689%" height="15" fill="rgb(250,162,2)" fg:x="435" fg:w="1"/><text x="30.2293%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="29.9793%" y="1237" width="0.0689%" height="15" fill="rgb(220,13,41)" fg:x="435" fg:w="1"/><text x="30.2293%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="29.9793%" y="1221" width="0.0689%" height="15" fill="rgb(249,221,25)" fg:x="435" fg:w="1"/><text x="30.2293%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="29.9793%" y="1205" width="0.0689%" height="15" fill="rgb(215,208,19)" fg:x="435" fg:w="1"/><text x="30.2293%" y="1215.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="29.9793%" y="1189" width="0.0689%" height="15" fill="rgb(236,175,2)" fg:x="435" fg:w="1"/><text x="30.2293%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (6 samples, 0.41%)</title><rect x="29.7037%" y="1365" width="0.4135%" height="15" fill="rgb(241,52,2)" fg:x="431" fg:w="6"/><text x="29.9537%" y="1375.50"></text></g><g><title>sysinfo::linux::component::get_components::{{closure}} (6 samples, 0.41%)</title><rect x="29.7037%" y="1349" width="0.4135%" height="15" fill="rgb(248,140,14)" fg:x="431" fg:w="6"/><text x="29.9537%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.07%)</title><rect x="30.0482%" y="1333" width="0.0689%" height="15" fill="rgb(253,22,42)" fg:x="436" fg:w="1"/><text x="30.2982%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="30.0482%" y="1317" width="0.0689%" height="15" fill="rgb(234,61,47)" fg:x="436" fg:w="1"/><text x="30.2982%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="30.0482%" y="1301" width="0.0689%" height="15" fill="rgb(208,226,15)" fg:x="436" fg:w="1"/><text x="30.2982%" y="1311.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="30.0482%" y="1285" width="0.0689%" height="15" fill="rgb(217,221,4)" fg:x="436" fg:w="1"/><text x="30.2982%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="30.0482%" y="1269" width="0.0689%" height="15" fill="rgb(212,174,34)" fg:x="436" fg:w="1"/><text x="30.2982%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="30.0482%" y="1253" width="0.0689%" height="15" fill="rgb(253,83,4)" fg:x="436" fg:w="1"/><text x="30.2982%" y="1263.50"></text></g><g><title>__rust_dealloc (1 samples, 0.07%)</title><rect x="30.0482%" y="1237" width="0.0689%" height="15" fill="rgb(250,195,49)" fg:x="436" fg:w="1"/><text x="30.2982%" y="1247.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="30.3928%" y="1301" width="0.2068%" height="15" fill="rgb(241,192,25)" fg:x="441" fg:w="3"/><text x="30.6428%" y="1311.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="30.4618%" y="1285" width="0.1378%" height="15" fill="rgb(208,124,10)" fg:x="442" fg:w="2"/><text x="30.7118%" y="1295.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.14%)</title><rect x="30.4618%" y="1269" width="0.1378%" height="15" fill="rgb(222,33,0)" fg:x="442" fg:w="2"/><text x="30.7118%" y="1279.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="30.5307%" y="1253" width="0.0689%" height="15" fill="rgb(234,209,28)" fg:x="443" fg:w="1"/><text x="30.7807%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="30.5996%" y="1285" width="0.0689%" height="15" fill="rgb(224,11,23)" fg:x="444" fg:w="1"/><text x="30.8496%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="30.5996%" y="1269" width="0.0689%" height="15" fill="rgb(232,99,1)" fg:x="444" fg:w="1"/><text x="30.8496%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="30.5996%" y="1253" width="0.0689%" height="15" fill="rgb(237,95,45)" fg:x="444" fg:w="1"/><text x="30.8496%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="30.5996%" y="1237" width="0.0689%" height="15" fill="rgb(208,109,11)" fg:x="444" fg:w="1"/><text x="30.8496%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="30.5996%" y="1221" width="0.0689%" height="15" fill="rgb(216,190,48)" fg:x="444" fg:w="1"/><text x="30.8496%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="30.5996%" y="1205" width="0.0689%" height="15" fill="rgb(251,171,36)" fg:x="444" fg:w="1"/><text x="30.8496%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="30.5996%" y="1189" width="0.0689%" height="15" fill="rgb(230,62,22)" fg:x="444" fg:w="1"/><text x="30.8496%" y="1199.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="30.5996%" y="1173" width="0.0689%" height="15" fill="rgb(225,114,35)" fg:x="444" fg:w="1"/><text x="30.8496%" y="1183.50"></text></g><g><title>alloc::str::convert_while_ascii (2 samples, 0.14%)</title><rect x="30.5996%" y="1301" width="0.1378%" height="15" fill="rgb(215,118,42)" fg:x="444" fg:w="2"/><text x="30.8496%" y="1311.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (1 samples, 0.07%)</title><rect x="30.6685%" y="1285" width="0.0689%" height="15" fill="rgb(243,119,21)" fg:x="445" fg:w="1"/><text x="30.9185%" y="1295.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (1 samples, 0.07%)</title><rect x="30.6685%" y="1269" width="0.0689%" height="15" fill="rgb(252,177,53)" fg:x="445" fg:w="1"/><text x="30.9185%" y="1279.50"></text></g><g><title>alloc::string::String::from_utf8_unchecked (1 samples, 0.07%)</title><rect x="30.7374%" y="1301" width="0.0689%" height="15" fill="rgb(237,209,29)" fg:x="446" fg:w="1"/><text x="30.9874%" y="1311.50"></text></g><g><title>alloc::string::String::push (4 samples, 0.28%)</title><rect x="30.8063%" y="1301" width="0.2757%" height="15" fill="rgb(212,65,23)" fg:x="447" fg:w="4"/><text x="31.0563%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.28%)</title><rect x="30.8063%" y="1285" width="0.2757%" height="15" fill="rgb(230,222,46)" fg:x="447" fg:w="4"/><text x="31.0563%" y="1295.50"></text></g><g><title>core::ptr::write (2 samples, 0.14%)</title><rect x="30.9442%" y="1269" width="0.1378%" height="15" fill="rgb(215,135,32)" fg:x="449" fg:w="2"/><text x="31.1942%" y="1279.50"></text></g><g><title>alloc::slice::insert_head (19 samples, 1.31%)</title><rect x="30.1172%" y="1365" width="1.3094%" height="15" fill="rgb(246,101,22)" fg:x="437" fg:w="19"/><text x="30.3672%" y="1375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (19 samples, 1.31%)</title><rect x="30.1172%" y="1349" width="1.3094%" height="15" fill="rgb(206,107,13)" fg:x="437" fg:w="19"/><text x="30.3672%" y="1359.50"></text></g><g><title>sysinfo::linux::component::get_components::{{closure}} (19 samples, 1.31%)</title><rect x="30.1172%" y="1333" width="1.3094%" height="15" fill="rgb(250,100,44)" fg:x="437" fg:w="19"/><text x="30.3672%" y="1343.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (19 samples, 1.31%)</title><rect x="30.1172%" y="1317" width="1.3094%" height="15" fill="rgb(231,147,38)" fg:x="437" fg:w="19"/><text x="30.3672%" y="1327.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (5 samples, 0.34%)</title><rect x="31.0820%" y="1301" width="0.3446%" height="15" fill="rgb(229,8,40)" fg:x="451" fg:w="5"/><text x="31.3320%" y="1311.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (4 samples, 0.28%)</title><rect x="31.1509%" y="1285" width="0.2757%" height="15" fill="rgb(221,135,30)" fg:x="452" fg:w="4"/><text x="31.4009%" y="1295.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (4 samples, 0.28%)</title><rect x="31.1509%" y="1269" width="0.2757%" height="15" fill="rgb(249,193,18)" fg:x="452" fg:w="4"/><text x="31.4009%" y="1279.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (1 samples, 0.07%)</title><rect x="31.4266%" y="1317" width="0.0689%" height="15" fill="rgb(209,133,39)" fg:x="456" fg:w="1"/><text x="31.6766%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.07%)</title><rect x="31.4266%" y="1301" width="0.0689%" height="15" fill="rgb(232,100,14)" fg:x="456" fg:w="1"/><text x="31.6766%" y="1311.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1 samples, 0.07%)</title><rect x="31.4266%" y="1285" width="0.0689%" height="15" fill="rgb(224,185,1)" fg:x="456" fg:w="1"/><text x="31.6766%" y="1295.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (1 samples, 0.07%)</title><rect x="31.4266%" y="1269" width="0.0689%" height="15" fill="rgb(223,139,8)" fg:x="456" fg:w="1"/><text x="31.6766%" y="1279.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="31.4266%" y="1253" width="0.0689%" height="15" fill="rgb(232,213,38)" fg:x="456" fg:w="1"/><text x="31.6766%" y="1263.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.28%)</title><rect x="31.6334%" y="1301" width="0.2757%" height="15" fill="rgb(207,94,22)" fg:x="459" fg:w="4"/><text x="31.8834%" y="1311.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="31.7023%" y="1285" width="0.2068%" height="15" fill="rgb(219,183,54)" fg:x="460" fg:w="3"/><text x="31.9523%" y="1295.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.21%)</title><rect x="31.7023%" y="1269" width="0.2068%" height="15" fill="rgb(216,185,54)" fg:x="460" fg:w="3"/><text x="31.9523%" y="1279.50"></text></g><g><title>alloc::str::convert_while_ascii (3 samples, 0.21%)</title><rect x="31.9090%" y="1301" width="0.2068%" height="15" fill="rgb(254,217,39)" fg:x="463" fg:w="3"/><text x="32.1590%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="32.0469%" y="1285" width="0.0689%" height="15" fill="rgb(240,178,23)" fg:x="465" fg:w="1"/><text x="32.2969%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="32.0469%" y="1269" width="0.0689%" height="15" fill="rgb(218,11,47)" fg:x="465" fg:w="1"/><text x="32.2969%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="32.0469%" y="1253" width="0.0689%" height="15" fill="rgb(218,51,51)" fg:x="465" fg:w="1"/><text x="32.2969%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="32.0469%" y="1237" width="0.0689%" height="15" fill="rgb(238,126,27)" fg:x="465" fg:w="1"/><text x="32.2969%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="32.0469%" y="1221" width="0.0689%" height="15" fill="rgb(249,202,22)" fg:x="465" fg:w="1"/><text x="32.2969%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="32.0469%" y="1205" width="0.0689%" height="15" fill="rgb(254,195,49)" fg:x="465" fg:w="1"/><text x="32.2969%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="32.0469%" y="1189" width="0.0689%" height="15" fill="rgb(208,123,14)" fg:x="465" fg:w="1"/><text x="32.2969%" y="1199.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="32.0469%" y="1173" width="0.0689%" height="15" fill="rgb(224,200,8)" fg:x="465" fg:w="1"/><text x="32.2969%" y="1183.50"></text></g><g><title>alloc::string::String::push (3 samples, 0.21%)</title><rect x="32.1158%" y="1301" width="0.2068%" height="15" fill="rgb(217,61,36)" fg:x="466" fg:w="3"/><text x="32.3658%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.21%)</title><rect x="32.1158%" y="1285" width="0.2068%" height="15" fill="rgb(206,35,45)" fg:x="466" fg:w="3"/><text x="32.3658%" y="1295.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="32.2536%" y="1269" width="0.0689%" height="15" fill="rgb(217,65,33)" fg:x="468" fg:w="1"/><text x="32.5036%" y="1279.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (14 samples, 0.96%)</title><rect x="31.4955%" y="1317" width="0.9649%" height="15" fill="rgb(222,158,48)" fg:x="457" fg:w="14"/><text x="31.7455%" y="1327.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (2 samples, 0.14%)</title><rect x="32.3225%" y="1301" width="0.1378%" height="15" fill="rgb(254,2,54)" fg:x="469" fg:w="2"/><text x="32.5725%" y="1311.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (1 samples, 0.07%)</title><rect x="32.3915%" y="1285" width="0.0689%" height="15" fill="rgb(250,143,38)" fg:x="470" fg:w="1"/><text x="32.6415%" y="1295.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (1 samples, 0.07%)</title><rect x="32.3915%" y="1269" width="0.0689%" height="15" fill="rgb(248,25,0)" fg:x="470" fg:w="1"/><text x="32.6415%" y="1279.50"></text></g><g><title>__rust_dealloc (1 samples, 0.07%)</title><rect x="32.4604%" y="1221" width="0.0689%" height="15" fill="rgb(206,152,27)" fg:x="471" fg:w="1"/><text x="32.7104%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (17 samples, 1.17%)</title><rect x="31.4266%" y="1349" width="1.1716%" height="15" fill="rgb(240,77,30)" fg:x="456" fg:w="17"/><text x="31.6766%" y="1359.50"></text></g><g><title>sysinfo::linux::component::get_components::{{closure}} (17 samples, 1.17%)</title><rect x="31.4266%" y="1333" width="1.1716%" height="15" fill="rgb(231,5,3)" fg:x="456" fg:w="17"/><text x="31.6766%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.14%)</title><rect x="32.4604%" y="1317" width="0.1378%" height="15" fill="rgb(207,226,32)" fg:x="471" fg:w="2"/><text x="32.7104%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="32.4604%" y="1301" width="0.1378%" height="15" fill="rgb(222,207,47)" fg:x="471" fg:w="2"/><text x="32.7104%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="32.4604%" y="1285" width="0.1378%" height="15" fill="rgb(229,115,45)" fg:x="471" fg:w="2"/><text x="32.7104%" y="1295.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="32.4604%" y="1269" width="0.1378%" height="15" fill="rgb(224,191,6)" fg:x="471" fg:w="2"/><text x="32.7104%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.14%)</title><rect x="32.4604%" y="1253" width="0.1378%" height="15" fill="rgb(230,227,24)" fg:x="471" fg:w="2"/><text x="32.7104%" y="1263.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.14%)</title><rect x="32.4604%" y="1237" width="0.1378%" height="15" fill="rgb(228,80,19)" fg:x="471" fg:w="2"/><text x="32.7104%" y="1247.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="32.5293%" y="1221" width="0.0689%" height="15" fill="rgb(247,229,0)" fg:x="472" fg:w="1"/><text x="32.7793%" y="1231.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="32.5293%" y="1205" width="0.0689%" height="15" fill="rgb(237,194,15)" fg:x="472" fg:w="1"/><text x="32.7793%" y="1215.50"></text></g><g><title>alloc::slice::merge (18 samples, 1.24%)</title><rect x="31.4266%" y="1365" width="1.2405%" height="15" fill="rgb(219,203,20)" fg:x="456" fg:w="18"/><text x="31.6766%" y="1375.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="32.5982%" y="1349" width="0.0689%" height="15" fill="rgb(234,128,8)" fg:x="473" fg:w="1"/><text x="32.8482%" y="1359.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="32.5982%" y="1333" width="0.0689%" height="15" fill="rgb(248,202,8)" fg:x="473" fg:w="1"/><text x="32.8482%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.07%)</title><rect x="32.6671%" y="1365" width="0.0689%" height="15" fill="rgb(206,104,37)" fg:x="474" fg:w="1"/><text x="32.9171%" y="1375.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="32.6671%" y="1349" width="0.0689%" height="15" fill="rgb(223,8,27)" fg:x="474" fg:w="1"/><text x="32.9171%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sysinfo::linux::component::Component&gt;&gt; (2 samples, 0.14%)</title><rect x="32.7360%" y="1365" width="0.1378%" height="15" fill="rgb(216,217,28)" fg:x="475" fg:w="2"/><text x="32.9860%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sysinfo::linux::component::Component&gt;&gt; (2 samples, 0.14%)</title><rect x="32.7360%" y="1349" width="0.1378%" height="15" fill="rgb(249,199,1)" fg:x="475" fg:w="2"/><text x="32.9860%" y="1359.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="32.7360%" y="1333" width="0.1378%" height="15" fill="rgb(240,85,17)" fg:x="475" fg:w="2"/><text x="32.9860%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.14%)</title><rect x="32.7360%" y="1317" width="0.1378%" height="15" fill="rgb(206,108,45)" fg:x="475" fg:w="2"/><text x="32.9860%" y="1327.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.14%)</title><rect x="32.7360%" y="1301" width="0.1378%" height="15" fill="rgb(245,210,41)" fg:x="475" fg:w="2"/><text x="32.9860%" y="1311.50"></text></g><g><title>cfree (2 samples, 0.14%)</title><rect x="32.7360%" y="1285" width="0.1378%" height="15" fill="rgb(206,13,37)" fg:x="475" fg:w="2"/><text x="32.9860%" y="1295.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="32.8050%" y="1269" width="0.0689%" height="15" fill="rgb(250,61,18)" fg:x="476" fg:w="1"/><text x="33.0550%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (47 samples, 3.24%)</title><rect x="29.7037%" y="1397" width="3.2391%" height="15" fill="rgb(235,172,48)" fg:x="431" fg:w="47"/><text x="29.9537%" y="1407.50">all..</text></g><g><title>alloc::slice::merge_sort (47 samples, 3.24%)</title><rect x="29.7037%" y="1381" width="3.2391%" height="15" fill="rgb(249,201,17)" fg:x="431" fg:w="47"/><text x="29.9537%" y="1391.50">all..</text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (1 samples, 0.07%)</title><rect x="32.8739%" y="1365" width="0.0689%" height="15" fill="rgb(219,208,6)" fg:x="477" fg:w="1"/><text x="33.1239%" y="1375.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse::revswap (1 samples, 0.07%)</title><rect x="32.8739%" y="1349" width="0.0689%" height="15" fill="rgb(248,31,23)" fg:x="477" fg:w="1"/><text x="33.1239%" y="1359.50"></text></g><g><title>core::mem::swap (1 samples, 0.07%)</title><rect x="32.8739%" y="1333" width="0.0689%" height="15" fill="rgb(245,15,42)" fg:x="477" fg:w="1"/><text x="33.1239%" y="1343.50"></text></g><g><title>core::ptr::swap_nonoverlapping (1 samples, 0.07%)</title><rect x="32.8739%" y="1317" width="0.0689%" height="15" fill="rgb(222,217,39)" fg:x="477" fg:w="1"/><text x="33.1239%" y="1327.50"></text></g><g><title>core::ptr::swap_nonoverlapping_simple_untyped (1 samples, 0.07%)</title><rect x="32.8739%" y="1301" width="0.0689%" height="15" fill="rgb(210,219,27)" fg:x="477" fg:w="1"/><text x="33.1239%" y="1311.50"></text></g><g><title>core::mem::swap_simple (1 samples, 0.07%)</title><rect x="32.8739%" y="1285" width="0.0689%" height="15" fill="rgb(252,166,36)" fg:x="477" fg:w="1"/><text x="33.1239%" y="1295.50"></text></g><g><title>core::ptr::read (1 samples, 0.07%)</title><rect x="32.8739%" y="1269" width="0.0689%" height="15" fill="rgb(245,132,34)" fg:x="477" fg:w="1"/><text x="33.1239%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="32.9428%" y="1397" width="0.1378%" height="15" fill="rgb(236,54,3)" fg:x="478" fg:w="2"/><text x="33.1928%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="32.9428%" y="1381" width="0.1378%" height="15" fill="rgb(241,173,43)" fg:x="478" fg:w="2"/><text x="33.1928%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="33.0117%" y="1365" width="0.0689%" height="15" fill="rgb(215,190,9)" fg:x="479" fg:w="1"/><text x="33.2617%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="33.0117%" y="1349" width="0.0689%" height="15" fill="rgb(242,101,16)" fg:x="479" fg:w="1"/><text x="33.2617%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="33.0117%" y="1333" width="0.0689%" height="15" fill="rgb(223,190,21)" fg:x="479" fg:w="1"/><text x="33.2617%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="33.0117%" y="1317" width="0.0689%" height="15" fill="rgb(215,228,25)" fg:x="479" fg:w="1"/><text x="33.2617%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="33.0117%" y="1301" width="0.0689%" height="15" fill="rgb(225,36,22)" fg:x="479" fg:w="1"/><text x="33.2617%" y="1311.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="33.0117%" y="1285" width="0.0689%" height="15" fill="rgb(251,106,46)" fg:x="479" fg:w="1"/><text x="33.2617%" y="1295.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="33.0117%" y="1269" width="0.0689%" height="15" fill="rgb(208,90,1)" fg:x="479" fg:w="1"/><text x="33.2617%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.07%)</title><rect x="33.0806%" y="1189" width="0.0689%" height="15" fill="rgb(243,10,4)" fg:x="480" fg:w="1"/><text x="33.3306%" y="1199.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.07%)</title><rect x="33.0806%" y="1173" width="0.0689%" height="15" fill="rgb(212,137,27)" fg:x="480" fg:w="1"/><text x="33.3306%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.07%)</title><rect x="33.1496%" y="1157" width="0.0689%" height="15" fill="rgb(231,220,49)" fg:x="481" fg:w="1"/><text x="33.3996%" y="1167.50"></text></g><g><title>std::fs::DirEntry::path (3 samples, 0.21%)</title><rect x="33.0806%" y="1397" width="0.2068%" height="15" fill="rgb(237,96,20)" fg:x="480" fg:w="3"/><text x="33.3306%" y="1407.50"></text></g><g><title>std::sys::unix::fs::DirEntry::path (3 samples, 0.21%)</title><rect x="33.0806%" y="1381" width="0.2068%" height="15" fill="rgb(239,229,30)" fg:x="480" fg:w="3"/><text x="33.3306%" y="1391.50"></text></g><g><title>std::path::Path::join (3 samples, 0.21%)</title><rect x="33.0806%" y="1365" width="0.2068%" height="15" fill="rgb(219,65,33)" fg:x="480" fg:w="3"/><text x="33.3306%" y="1375.50"></text></g><g><title>std::path::Path::_join (3 samples, 0.21%)</title><rect x="33.0806%" y="1349" width="0.2068%" height="15" fill="rgb(243,134,7)" fg:x="480" fg:w="3"/><text x="33.3306%" y="1359.50"></text></g><g><title>std::path::PathBuf::push (3 samples, 0.21%)</title><rect x="33.0806%" y="1333" width="0.2068%" height="15" fill="rgb(216,177,54)" fg:x="480" fg:w="3"/><text x="33.3306%" y="1343.50"></text></g><g><title>std::path::PathBuf::_push (3 samples, 0.21%)</title><rect x="33.0806%" y="1317" width="0.2068%" height="15" fill="rgb(211,160,20)" fg:x="480" fg:w="3"/><text x="33.3306%" y="1327.50"></text></g><g><title>std::ffi::os_str::OsString::push (3 samples, 0.21%)</title><rect x="33.0806%" y="1301" width="0.2068%" height="15" fill="rgb(239,85,39)" fg:x="480" fg:w="3"/><text x="33.3306%" y="1311.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (3 samples, 0.21%)</title><rect x="33.0806%" y="1285" width="0.2068%" height="15" fill="rgb(232,125,22)" fg:x="480" fg:w="3"/><text x="33.3306%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.21%)</title><rect x="33.0806%" y="1269" width="0.2068%" height="15" fill="rgb(244,57,34)" fg:x="480" fg:w="3"/><text x="33.3306%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.21%)</title><rect x="33.0806%" y="1253" width="0.2068%" height="15" fill="rgb(214,203,32)" fg:x="480" fg:w="3"/><text x="33.3306%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.21%)</title><rect x="33.0806%" y="1237" width="0.2068%" height="15" fill="rgb(207,58,43)" fg:x="480" fg:w="3"/><text x="33.3306%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.21%)</title><rect x="33.0806%" y="1221" width="0.2068%" height="15" fill="rgb(215,193,15)" fg:x="480" fg:w="3"/><text x="33.3306%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.21%)</title><rect x="33.0806%" y="1205" width="0.2068%" height="15" fill="rgb(232,15,44)" fg:x="480" fg:w="3"/><text x="33.3306%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.14%)</title><rect x="33.1496%" y="1189" width="0.1378%" height="15" fill="rgb(212,3,48)" fg:x="481" fg:w="2"/><text x="33.3996%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.14%)</title><rect x="33.1496%" y="1173" width="0.1378%" height="15" fill="rgb(218,128,7)" fg:x="481" fg:w="2"/><text x="33.3996%" y="1183.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="33.2185%" y="1157" width="0.0689%" height="15" fill="rgb(226,216,39)" fg:x="482" fg:w="1"/><text x="33.4685%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="33.2185%" y="1141" width="0.0689%" height="15" fill="rgb(243,47,51)" fg:x="482" fg:w="1"/><text x="33.4685%" y="1151.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="33.2185%" y="1125" width="0.0689%" height="15" fill="rgb(241,183,40)" fg:x="482" fg:w="1"/><text x="33.4685%" y="1135.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="33.2185%" y="1109" width="0.0689%" height="15" fill="rgb(231,217,32)" fg:x="482" fg:w="1"/><text x="33.4685%" y="1119.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="33.2185%" y="1093" width="0.0689%" height="15" fill="rgb(229,61,38)" fg:x="482" fg:w="1"/><text x="33.4685%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="33.2185%" y="1077" width="0.0689%" height="15" fill="rgb(225,210,5)" fg:x="482" fg:w="1"/><text x="33.4685%" y="1087.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="33.2185%" y="1061" width="0.0689%" height="15" fill="rgb(231,79,45)" fg:x="482" fg:w="1"/><text x="33.4685%" y="1071.50"></text></g><g><title>std::path::Path::file_name (1 samples, 0.07%)</title><rect x="33.2874%" y="1397" width="0.0689%" height="15" fill="rgb(224,100,7)" fg:x="483" fg:w="1"/><text x="33.5374%" y="1407.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.07%)</title><rect x="33.2874%" y="1381" width="0.0689%" height="15" fill="rgb(241,198,18)" fg:x="483" fg:w="1"/><text x="33.5374%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.07%)</title><rect x="33.4252%" y="1285" width="0.0689%" height="15" fill="rgb(252,97,53)" fg:x="485" fg:w="1"/><text x="33.6752%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="33.4252%" y="1269" width="0.0689%" height="15" fill="rgb(220,88,7)" fg:x="485" fg:w="1"/><text x="33.6752%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="33.4252%" y="1253" width="0.0689%" height="15" fill="rgb(213,176,14)" fg:x="485" fg:w="1"/><text x="33.6752%" y="1263.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="33.4252%" y="1237" width="0.0689%" height="15" fill="rgb(246,73,7)" fg:x="485" fg:w="1"/><text x="33.6752%" y="1247.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="33.4252%" y="1221" width="0.0689%" height="15" fill="rgb(245,64,36)" fg:x="485" fg:w="1"/><text x="33.6752%" y="1231.50"></text></g><g><title>std::path::Path::is_dir (3 samples, 0.21%)</title><rect x="33.3563%" y="1397" width="0.2068%" height="15" fill="rgb(245,80,10)" fg:x="484" fg:w="3"/><text x="33.6063%" y="1407.50"></text></g><g><title>std::fs::metadata (3 samples, 0.21%)</title><rect x="33.3563%" y="1381" width="0.2068%" height="15" fill="rgb(232,107,50)" fg:x="484" fg:w="3"/><text x="33.6063%" y="1391.50"></text></g><g><title>std::sys::unix::fs::stat (3 samples, 0.21%)</title><rect x="33.3563%" y="1365" width="0.2068%" height="15" fill="rgb(253,3,0)" fg:x="484" fg:w="3"/><text x="33.6063%" y="1375.50"></text></g><g><title>std::sys::unix::fs::cstr (2 samples, 0.14%)</title><rect x="33.4252%" y="1349" width="0.1378%" height="15" fill="rgb(212,99,53)" fg:x="485" fg:w="2"/><text x="33.6752%" y="1359.50"></text></g><g><title>alloc::ffi::c_str::CString::new (2 samples, 0.14%)</title><rect x="33.4252%" y="1333" width="0.1378%" height="15" fill="rgb(249,111,54)" fg:x="485" fg:w="2"/><text x="33.6752%" y="1343.50"></text></g><g><title>&lt;&amp;[u8] as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (2 samples, 0.14%)</title><rect x="33.4252%" y="1317" width="0.1378%" height="15" fill="rgb(249,55,30)" fg:x="485" fg:w="2"/><text x="33.6752%" y="1327.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (2 samples, 0.14%)</title><rect x="33.4252%" y="1301" width="0.1378%" height="15" fill="rgb(237,47,42)" fg:x="485" fg:w="2"/><text x="33.6752%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="33.4941%" y="1285" width="0.0689%" height="15" fill="rgb(211,20,18)" fg:x="486" fg:w="1"/><text x="33.7441%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="33.4941%" y="1269" width="0.0689%" height="15" fill="rgb(231,203,46)" fg:x="486" fg:w="1"/><text x="33.7441%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="33.4941%" y="1253" width="0.0689%" height="15" fill="rgb(237,142,3)" fg:x="486" fg:w="1"/><text x="33.7441%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="33.4941%" y="1237" width="0.0689%" height="15" fill="rgb(241,107,1)" fg:x="486" fg:w="1"/><text x="33.7441%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="33.4941%" y="1221" width="0.0689%" height="15" fill="rgb(229,83,13)" fg:x="486" fg:w="1"/><text x="33.7441%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="33.4941%" y="1205" width="0.0689%" height="15" fill="rgb(241,91,40)" fg:x="486" fg:w="1"/><text x="33.7441%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="33.4941%" y="1189" width="0.0689%" height="15" fill="rgb(225,3,45)" fg:x="486" fg:w="1"/><text x="33.7441%" y="1199.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="33.4941%" y="1173" width="0.0689%" height="15" fill="rgb(244,223,14)" fg:x="486" fg:w="1"/><text x="33.7441%" y="1183.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="34.5279%" y="1269" width="0.0689%" height="15" fill="rgb(224,124,37)" fg:x="501" fg:w="1"/><text x="34.7779%" y="1279.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="34.5279%" y="1253" width="0.0689%" height="15" fill="rgb(251,171,30)" fg:x="501" fg:w="1"/><text x="34.7779%" y="1263.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="34.5279%" y="1237" width="0.0689%" height="15" fill="rgb(236,46,54)" fg:x="501" fg:w="1"/><text x="34.7779%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.21%)</title><rect x="34.7347%" y="1237" width="0.2068%" height="15" fill="rgb(245,213,5)" fg:x="504" fg:w="3"/><text x="34.9847%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.21%)</title><rect x="34.7347%" y="1221" width="0.2068%" height="15" fill="rgb(230,144,27)" fg:x="504" fg:w="3"/><text x="34.9847%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.21%)</title><rect x="34.7347%" y="1205" width="0.2068%" height="15" fill="rgb(220,86,6)" fg:x="504" fg:w="3"/><text x="34.9847%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.21%)</title><rect x="34.7347%" y="1189" width="0.2068%" height="15" fill="rgb(240,20,13)" fg:x="504" fg:w="3"/><text x="34.9847%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.21%)</title><rect x="34.7347%" y="1173" width="0.2068%" height="15" fill="rgb(217,89,34)" fg:x="504" fg:w="3"/><text x="34.9847%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.21%)</title><rect x="34.7347%" y="1157" width="0.2068%" height="15" fill="rgb(229,13,5)" fg:x="504" fg:w="3"/><text x="34.9847%" y="1167.50"></text></g><g><title>cfree (3 samples, 0.21%)</title><rect x="34.7347%" y="1141" width="0.2068%" height="15" fill="rgb(244,67,35)" fg:x="504" fg:w="3"/><text x="34.9847%" y="1151.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="34.8036%" y="1125" width="0.1378%" height="15" fill="rgb(221,40,2)" fg:x="505" fg:w="2"/><text x="35.0536%" y="1135.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.21%)</title><rect x="35.2171%" y="1173" width="0.2068%" height="15" fill="rgb(237,157,21)" fg:x="511" fg:w="3"/><text x="35.4671%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.48%)</title><rect x="35.5617%" y="997" width="0.4824%" height="15" fill="rgb(222,94,11)" fg:x="516" fg:w="7"/><text x="35.8117%" y="1007.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.48%)</title><rect x="35.5617%" y="981" width="0.4824%" height="15" fill="rgb(249,113,6)" fg:x="516" fg:w="7"/><text x="35.8117%" y="991.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.48%)</title><rect x="35.5617%" y="965" width="0.4824%" height="15" fill="rgb(238,137,36)" fg:x="516" fg:w="7"/><text x="35.8117%" y="975.50"></text></g><g><title>realloc (7 samples, 0.48%)</title><rect x="35.5617%" y="949" width="0.4824%" height="15" fill="rgb(210,102,26)" fg:x="516" fg:w="7"/><text x="35.8117%" y="959.50"></text></g><g><title>[libc.so.6] (6 samples, 0.41%)</title><rect x="35.6306%" y="933" width="0.4135%" height="15" fill="rgb(218,30,30)" fg:x="517" fg:w="6"/><text x="35.8806%" y="943.50"></text></g><g><title>[libc.so.6] (5 samples, 0.34%)</title><rect x="35.6995%" y="917" width="0.3446%" height="15" fill="rgb(214,67,26)" fg:x="518" fg:w="5"/><text x="35.9495%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="35.9752%" y="901" width="0.0689%" height="15" fill="rgb(251,9,53)" fg:x="522" fg:w="1"/><text x="36.2252%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.76%)</title><rect x="35.4238%" y="1077" width="0.7581%" height="15" fill="rgb(228,204,25)" fg:x="514" fg:w="11"/><text x="35.6738%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.76%)</title><rect x="35.4238%" y="1061" width="0.7581%" height="15" fill="rgb(207,153,8)" fg:x="514" fg:w="11"/><text x="35.6738%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.76%)</title><rect x="35.4238%" y="1045" width="0.7581%" height="15" fill="rgb(242,9,16)" fg:x="514" fg:w="11"/><text x="35.6738%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.76%)</title><rect x="35.4238%" y="1029" width="0.7581%" height="15" fill="rgb(217,211,10)" fg:x="514" fg:w="11"/><text x="35.6738%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.76%)</title><rect x="35.4238%" y="1013" width="0.7581%" height="15" fill="rgb(219,228,52)" fg:x="514" fg:w="11"/><text x="35.6738%" y="1023.50"></text></g><g><title>malloc (2 samples, 0.14%)</title><rect x="36.0441%" y="997" width="0.1378%" height="15" fill="rgb(231,92,29)" fg:x="523" fg:w="2"/><text x="36.2941%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="36.1130%" y="981" width="0.0689%" height="15" fill="rgb(232,8,23)" fg:x="524" fg:w="1"/><text x="36.3630%" y="991.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (13 samples, 0.90%)</title><rect x="35.4238%" y="1173" width="0.8959%" height="15" fill="rgb(216,211,34)" fg:x="514" fg:w="13"/><text x="35.6738%" y="1183.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (13 samples, 0.90%)</title><rect x="35.4238%" y="1157" width="0.8959%" height="15" fill="rgb(236,151,0)" fg:x="514" fg:w="13"/><text x="35.6738%" y="1167.50"></text></g><g><title>alloc::string::String::push_str (13 samples, 0.90%)</title><rect x="35.4238%" y="1141" width="0.8959%" height="15" fill="rgb(209,168,3)" fg:x="514" fg:w="13"/><text x="35.6738%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.90%)</title><rect x="35.4238%" y="1125" width="0.8959%" height="15" fill="rgb(208,129,28)" fg:x="514" fg:w="13"/><text x="35.6738%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.90%)</title><rect x="35.4238%" y="1109" width="0.8959%" height="15" fill="rgb(229,78,22)" fg:x="514" fg:w="13"/><text x="35.6738%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.90%)</title><rect x="35.4238%" y="1093" width="0.8959%" height="15" fill="rgb(228,187,13)" fg:x="514" fg:w="13"/><text x="35.6738%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.14%)</title><rect x="36.1819%" y="1077" width="0.1378%" height="15" fill="rgb(240,119,24)" fg:x="525" fg:w="2"/><text x="36.4319%" y="1087.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="36.1819%" y="1061" width="0.1378%" height="15" fill="rgb(209,194,42)" fg:x="525" fg:w="2"/><text x="36.4319%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 2.00%)</title><rect x="34.5279%" y="1333" width="1.9986%" height="15" fill="rgb(247,200,46)" fg:x="501" fg:w="29"/><text x="34.7779%" y="1343.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (29 samples, 2.00%)</title><rect x="34.5279%" y="1317" width="1.9986%" height="15" fill="rgb(218,76,16)" fg:x="501" fg:w="29"/><text x="34.7779%" y="1327.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (29 samples, 2.00%)</title><rect x="34.5279%" y="1301" width="1.9986%" height="15" fill="rgb(225,21,48)" fg:x="501" fg:w="29"/><text x="34.7779%" y="1311.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (29 samples, 2.00%)</title><rect x="34.5279%" y="1285" width="1.9986%" height="15" fill="rgb(239,223,50)" fg:x="501" fg:w="29"/><text x="34.7779%" y="1295.50">c..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (28 samples, 1.93%)</title><rect x="34.5968%" y="1269" width="1.9297%" height="15" fill="rgb(244,45,21)" fg:x="502" fg:w="28"/><text x="34.8468%" y="1279.50">c..</text></g><g><title>sysinfo::linux::component::Component::from_hwmon::{{closure}} (27 samples, 1.86%)</title><rect x="34.6657%" y="1253" width="1.8608%" height="15" fill="rgb(232,33,43)" fg:x="503" fg:w="27"/><text x="34.9157%" y="1263.50">s..</text></g><g><title>sysinfo::linux::component::Component::format_label (23 samples, 1.59%)</title><rect x="34.9414%" y="1237" width="1.5851%" height="15" fill="rgb(209,8,3)" fg:x="507" fg:w="23"/><text x="35.1914%" y="1247.50"></text></g><g><title>alloc::fmt::format::format_inner (21 samples, 1.45%)</title><rect x="35.0793%" y="1221" width="1.4473%" height="15" fill="rgb(214,25,53)" fg:x="509" fg:w="21"/><text x="35.3293%" y="1231.50"></text></g><g><title>core::fmt::Write::write_fmt (20 samples, 1.38%)</title><rect x="35.1482%" y="1205" width="1.3784%" height="15" fill="rgb(254,186,54)" fg:x="510" fg:w="20"/><text x="35.3982%" y="1215.50"></text></g><g><title>core::fmt::write (19 samples, 1.31%)</title><rect x="35.2171%" y="1189" width="1.3094%" height="15" fill="rgb(208,174,49)" fg:x="511" fg:w="19"/><text x="35.4671%" y="1199.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.21%)</title><rect x="36.3198%" y="1173" width="0.2068%" height="15" fill="rgb(233,191,51)" fg:x="527" fg:w="3"/><text x="36.5698%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.41%)</title><rect x="36.5265%" y="1333" width="0.4135%" height="15" fill="rgb(222,134,10)" fg:x="530" fg:w="6"/><text x="36.7765%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.41%)</title><rect x="36.5265%" y="1317" width="0.4135%" height="15" fill="rgb(230,226,20)" fg:x="530" fg:w="6"/><text x="36.7765%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.41%)</title><rect x="36.5265%" y="1301" width="0.4135%" height="15" fill="rgb(251,111,25)" fg:x="530" fg:w="6"/><text x="36.7765%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.41%)</title><rect x="36.5265%" y="1285" width="0.4135%" height="15" fill="rgb(224,40,46)" fg:x="530" fg:w="6"/><text x="36.7765%" y="1295.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.41%)</title><rect x="36.5265%" y="1269" width="0.4135%" height="15" fill="rgb(236,108,47)" fg:x="530" fg:w="6"/><text x="36.7765%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.41%)</title><rect x="36.5265%" y="1253" width="0.4135%" height="15" fill="rgb(234,93,0)" fg:x="530" fg:w="6"/><text x="36.7765%" y="1263.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.41%)</title><rect x="36.5265%" y="1237" width="0.4135%" height="15" fill="rgb(224,213,32)" fg:x="530" fg:w="6"/><text x="36.7765%" y="1247.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.41%)</title><rect x="36.5265%" y="1221" width="0.4135%" height="15" fill="rgb(251,11,48)" fg:x="530" fg:w="6"/><text x="36.7765%" y="1231.50"></text></g><g><title>realloc (6 samples, 0.41%)</title><rect x="36.5265%" y="1205" width="0.4135%" height="15" fill="rgb(236,173,5)" fg:x="530" fg:w="6"/><text x="36.7765%" y="1215.50"></text></g><g><title>[libc.so.6] (6 samples, 0.41%)</title><rect x="36.5265%" y="1189" width="0.4135%" height="15" fill="rgb(230,95,12)" fg:x="530" fg:w="6"/><text x="36.7765%" y="1199.50"></text></g><g><title>[libc.so.6] (6 samples, 0.41%)</title><rect x="36.5265%" y="1173" width="0.4135%" height="15" fill="rgb(232,209,1)" fg:x="530" fg:w="6"/><text x="36.7765%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;u32,sysinfo::linux::component::Component&gt;,sysinfo::linux::component::Component::from_hwmon::{{closure}}&gt;,sysinfo::linux::component::Component::from_hwmon::{{closure}}&gt;&gt; (2 samples, 0.14%)</title><rect x="36.9400%" y="1333" width="0.1378%" height="15" fill="rgb(232,6,1)" fg:x="536" fg:w="2"/><text x="37.1900%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;u32,sysinfo::linux::component::Component&gt;,sysinfo::linux::component::Component::from_hwmon::{{closure}}&gt;&gt; (2 samples, 0.14%)</title><rect x="36.9400%" y="1317" width="0.1378%" height="15" fill="rgb(210,224,50)" fg:x="536" fg:w="2"/><text x="37.1900%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;u32,sysinfo::linux::component::Component&gt;&gt; (2 samples, 0.14%)</title><rect x="36.9400%" y="1301" width="0.1378%" height="15" fill="rgb(228,127,35)" fg:x="536" fg:w="2"/><text x="37.1900%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;u32,sysinfo::linux::component::Component&gt;&gt; (2 samples, 0.14%)</title><rect x="36.9400%" y="1285" width="0.1378%" height="15" fill="rgb(245,102,45)" fg:x="536" fg:w="2"/><text x="37.1900%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(u32,sysinfo::linux::component::Component)&gt;&gt; (2 samples, 0.14%)</title><rect x="36.9400%" y="1269" width="0.1378%" height="15" fill="rgb(214,1,49)" fg:x="536" fg:w="2"/><text x="37.1900%" y="1279.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="36.9400%" y="1253" width="0.1378%" height="15" fill="rgb(226,163,40)" fg:x="536" fg:w="2"/><text x="37.1900%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="37.0090%" y="1237" width="0.0689%" height="15" fill="rgb(239,212,28)" fg:x="537" fg:w="1"/><text x="37.2590%" y="1247.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="37.0090%" y="1221" width="0.0689%" height="15" fill="rgb(220,20,13)" fg:x="537" fg:w="1"/><text x="37.2590%" y="1231.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="37.0090%" y="1205" width="0.0689%" height="15" fill="rgb(210,164,35)" fg:x="537" fg:w="1"/><text x="37.2590%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="37.0090%" y="1189" width="0.0689%" height="15" fill="rgb(248,109,41)" fg:x="537" fg:w="1"/><text x="37.2590%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (38 samples, 2.62%)</title><rect x="34.5279%" y="1381" width="2.6189%" height="15" fill="rgb(238,23,50)" fg:x="501" fg:w="38"/><text x="34.7779%" y="1391.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (38 samples, 2.62%)</title><rect x="34.5279%" y="1365" width="2.6189%" height="15" fill="rgb(211,48,49)" fg:x="501" fg:w="38"/><text x="34.7779%" y="1375.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (38 samples, 2.62%)</title><rect x="34.5279%" y="1349" width="2.6189%" height="15" fill="rgb(223,36,21)" fg:x="501" fg:w="38"/><text x="34.7779%" y="1359.50">al..</text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="37.0779%" y="1333" width="0.0689%" height="15" fill="rgb(207,123,46)" fg:x="538" fg:w="1"/><text x="37.3279%" y="1343.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="37.0779%" y="1317" width="0.0689%" height="15" fill="rgb(240,218,32)" fg:x="538" fg:w="1"/><text x="37.3279%" y="1327.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="37.8360%" y="1093" width="0.0689%" height="15" fill="rgb(252,5,43)" fg:x="549" fg:w="1"/><text x="38.0860%" y="1103.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="37.8360%" y="1077" width="0.0689%" height="15" fill="rgb(252,84,19)" fg:x="549" fg:w="1"/><text x="38.0860%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.34%)</title><rect x="37.8360%" y="1189" width="0.3446%" height="15" fill="rgb(243,152,39)" fg:x="549" fg:w="5"/><text x="38.0860%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.34%)</title><rect x="37.8360%" y="1173" width="0.3446%" height="15" fill="rgb(234,160,15)" fg:x="549" fg:w="5"/><text x="38.0860%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.34%)</title><rect x="37.8360%" y="1157" width="0.3446%" height="15" fill="rgb(237,34,20)" fg:x="549" fg:w="5"/><text x="38.0860%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.34%)</title><rect x="37.8360%" y="1141" width="0.3446%" height="15" fill="rgb(229,97,13)" fg:x="549" fg:w="5"/><text x="38.0860%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.34%)</title><rect x="37.8360%" y="1125" width="0.3446%" height="15" fill="rgb(234,71,50)" fg:x="549" fg:w="5"/><text x="38.0860%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.34%)</title><rect x="37.8360%" y="1109" width="0.3446%" height="15" fill="rgb(253,155,4)" fg:x="549" fg:w="5"/><text x="38.0860%" y="1119.50"></text></g><g><title>malloc (4 samples, 0.28%)</title><rect x="37.9049%" y="1093" width="0.2757%" height="15" fill="rgb(222,185,37)" fg:x="550" fg:w="4"/><text x="38.1549%" y="1103.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (7 samples, 0.48%)</title><rect x="37.8360%" y="1253" width="0.4824%" height="15" fill="rgb(251,177,13)" fg:x="549" fg:w="7"/><text x="38.0860%" y="1263.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (7 samples, 0.48%)</title><rect x="37.8360%" y="1237" width="0.4824%" height="15" fill="rgb(250,179,40)" fg:x="549" fg:w="7"/><text x="38.0860%" y="1247.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (7 samples, 0.48%)</title><rect x="37.8360%" y="1221" width="0.4824%" height="15" fill="rgb(242,44,2)" fg:x="549" fg:w="7"/><text x="38.0860%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (7 samples, 0.48%)</title><rect x="37.8360%" y="1205" width="0.4824%" height="15" fill="rgb(216,177,13)" fg:x="549" fg:w="7"/><text x="38.0860%" y="1215.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.14%)</title><rect x="38.1806%" y="1189" width="0.1378%" height="15" fill="rgb(216,106,43)" fg:x="554" fg:w="2"/><text x="38.4306%" y="1199.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="38.1806%" y="1173" width="0.1378%" height="15" fill="rgb(216,183,2)" fg:x="554" fg:w="2"/><text x="38.4306%" y="1183.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="38.3184%" y="1253" width="0.1378%" height="15" fill="rgb(249,75,3)" fg:x="556" fg:w="2"/><text x="38.5684%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.14%)</title><rect x="38.3184%" y="1237" width="0.1378%" height="15" fill="rgb(219,67,39)" fg:x="556" fg:w="2"/><text x="38.5684%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.14%)</title><rect x="38.3184%" y="1221" width="0.1378%" height="15" fill="rgb(253,228,2)" fg:x="556" fg:w="2"/><text x="38.5684%" y="1231.50"></text></g><g><title>core::ffi::c_str::CStr::from_ptr (3 samples, 0.21%)</title><rect x="38.4562%" y="1253" width="0.2068%" height="15" fill="rgb(235,138,27)" fg:x="558" fg:w="3"/><text x="38.7062%" y="1263.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="38.5252%" y="1237" width="0.1378%" height="15" fill="rgb(236,97,51)" fg:x="559" fg:w="2"/><text x="38.7752%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::ffi::c_str::CString&gt; (1 samples, 0.07%)</title><rect x="38.6630%" y="1237" width="0.0689%" height="15" fill="rgb(240,80,30)" fg:x="561" fg:w="1"/><text x="38.9130%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::DirEntry&gt; (4 samples, 0.28%)</title><rect x="38.6630%" y="1253" width="0.2757%" height="15" fill="rgb(230,178,19)" fg:x="561" fg:w="4"/><text x="38.9130%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sys::unix::fs::InnerReadDir&gt;&gt; (3 samples, 0.21%)</title><rect x="38.7319%" y="1237" width="0.2068%" height="15" fill="rgb(210,190,27)" fg:x="562" fg:w="3"/><text x="38.9819%" y="1247.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.21%)</title><rect x="38.7319%" y="1221" width="0.2068%" height="15" fill="rgb(222,107,31)" fg:x="562" fg:w="3"/><text x="38.9819%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.21%)</title><rect x="38.7319%" y="1205" width="0.2068%" height="15" fill="rgb(216,127,34)" fg:x="562" fg:w="3"/><text x="38.9819%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.21%)</title><rect x="38.7319%" y="1189" width="0.2068%" height="15" fill="rgb(234,116,52)" fg:x="562" fg:w="3"/><text x="38.9819%" y="1199.50"></text></g><g><title>readdir64 (18 samples, 1.24%)</title><rect x="38.9387%" y="1253" width="1.2405%" height="15" fill="rgb(222,124,15)" fg:x="565" fg:w="18"/><text x="39.1887%" y="1263.50"></text></g><g><title>core::ops::function::FnOnce::call_once (40 samples, 2.76%)</title><rect x="37.5603%" y="1301" width="2.7567%" height="15" fill="rgb(231,179,28)" fg:x="545" fg:w="40"/><text x="37.8103%" y="1311.50">co..</text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 2.69%)</title><rect x="37.6292%" y="1285" width="2.6878%" height="15" fill="rgb(226,93,45)" fg:x="546" fg:w="39"/><text x="37.8792%" y="1295.50">&lt;s..</text></g><g><title>&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 2.69%)</title><rect x="37.6292%" y="1269" width="2.6878%" height="15" fill="rgb(215,8,51)" fg:x="546" fg:w="39"/><text x="37.8792%" y="1279.50">&lt;s..</text></g><g><title>std::sys::unix::os::set_errno (2 samples, 0.14%)</title><rect x="40.1792%" y="1253" width="0.1378%" height="15" fill="rgb(223,106,5)" fg:x="583" fg:w="2"/><text x="40.4292%" y="1263.50"></text></g><g><title>__errno_location (2 samples, 0.14%)</title><rect x="40.1792%" y="1237" width="0.1378%" height="15" fill="rgb(250,191,5)" fg:x="583" fg:w="2"/><text x="40.4292%" y="1247.50"></text></g><g><title>core::mem::drop (1 samples, 0.07%)</title><rect x="40.3170%" y="1205" width="0.0689%" height="15" fill="rgb(242,132,44)" fg:x="585" fg:w="1"/><text x="40.5670%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;std::sys::unix::fs::InnerReadDir&gt;&gt; (1 samples, 0.07%)</title><rect x="40.3170%" y="1189" width="0.0689%" height="15" fill="rgb(251,152,29)" fg:x="585" fg:w="1"/><text x="40.5670%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="40.3170%" y="1173" width="0.0689%" height="15" fill="rgb(218,179,5)" fg:x="585" fg:w="1"/><text x="40.5670%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.07%)</title><rect x="40.3170%" y="1157" width="0.0689%" height="15" fill="rgb(227,67,19)" fg:x="585" fg:w="1"/><text x="40.5670%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.07%)</title><rect x="40.3170%" y="1141" width="0.0689%" height="15" fill="rgb(233,119,31)" fg:x="585" fg:w="1"/><text x="40.5670%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (1 samples, 0.07%)</title><rect x="40.3859%" y="1189" width="0.0689%" height="15" fill="rgb(241,120,22)" fg:x="586" fg:w="1"/><text x="40.6359%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (1 samples, 0.07%)</title><rect x="40.3859%" y="1173" width="0.0689%" height="15" fill="rgb(224,102,30)" fg:x="586" fg:w="1"/><text x="40.6359%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::os_str::Buf&gt; (1 samples, 0.07%)</title><rect x="40.3859%" y="1157" width="0.0689%" height="15" fill="rgb(210,164,37)" fg:x="586" fg:w="1"/><text x="40.6359%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="40.3859%" y="1141" width="0.0689%" height="15" fill="rgb(226,191,16)" fg:x="586" fg:w="1"/><text x="40.6359%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="40.3859%" y="1125" width="0.0689%" height="15" fill="rgb(214,40,45)" fg:x="586" fg:w="1"/><text x="40.6359%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="40.3859%" y="1109" width="0.0689%" height="15" fill="rgb(244,29,26)" fg:x="586" fg:w="1"/><text x="40.6359%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="40.3859%" y="1093" width="0.0689%" height="15" fill="rgb(216,16,5)" fg:x="586" fg:w="1"/><text x="40.6359%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="40.3859%" y="1077" width="0.0689%" height="15" fill="rgb(249,76,35)" fg:x="586" fg:w="1"/><text x="40.6359%" y="1087.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="40.3859%" y="1061" width="0.0689%" height="15" fill="rgb(207,11,44)" fg:x="586" fg:w="1"/><text x="40.6359%" y="1071.50"></text></g><g><title>__close_nocancel (1 samples, 0.07%)</title><rect x="40.4549%" y="1157" width="0.0689%" height="15" fill="rgb(228,190,49)" fg:x="587" fg:w="1"/><text x="40.7049%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 3.79%)</title><rect x="37.3535%" y="1349" width="3.7905%" height="15" fill="rgb(214,173,12)" fg:x="542" fg:w="55"/><text x="37.6035%" y="1359.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (55 samples, 3.79%)</title><rect x="37.3535%" y="1333" width="3.7905%" height="15" fill="rgb(218,26,35)" fg:x="542" fg:w="55"/><text x="37.6035%" y="1343.50">&lt;cor..</text></g><g><title>core::iter::adapters::fuse::and_then_or_clear (55 samples, 3.79%)</title><rect x="37.3535%" y="1317" width="3.7905%" height="15" fill="rgb(220,200,19)" fg:x="542" fg:w="55"/><text x="37.6035%" y="1327.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;std::fs::ReadDir&gt;&gt; (12 samples, 0.83%)</title><rect x="40.3170%" y="1301" width="0.8270%" height="15" fill="rgb(239,95,49)" fg:x="585" fg:w="12"/><text x="40.5670%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::ReadDir&gt; (12 samples, 0.83%)</title><rect x="40.3170%" y="1285" width="0.8270%" height="15" fill="rgb(235,85,53)" fg:x="585" fg:w="12"/><text x="40.5670%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::ReadDir&gt; (12 samples, 0.83%)</title><rect x="40.3170%" y="1269" width="0.8270%" height="15" fill="rgb(233,133,31)" fg:x="585" fg:w="12"/><text x="40.5670%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sys::unix::fs::InnerReadDir&gt;&gt; (12 samples, 0.83%)</title><rect x="40.3170%" y="1253" width="0.8270%" height="15" fill="rgb(218,25,20)" fg:x="585" fg:w="12"/><text x="40.5670%" y="1263.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.83%)</title><rect x="40.3170%" y="1237" width="0.8270%" height="15" fill="rgb(252,210,38)" fg:x="585" fg:w="12"/><text x="40.5670%" y="1247.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (12 samples, 0.83%)</title><rect x="40.3170%" y="1221" width="0.8270%" height="15" fill="rgb(242,134,21)" fg:x="585" fg:w="12"/><text x="40.5670%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::InnerReadDir&gt; (11 samples, 0.76%)</title><rect x="40.3859%" y="1205" width="0.7581%" height="15" fill="rgb(213,28,48)" fg:x="586" fg:w="11"/><text x="40.6359%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::Dir&gt; (10 samples, 0.69%)</title><rect x="40.4549%" y="1189" width="0.6892%" height="15" fill="rgb(250,196,2)" fg:x="587" fg:w="10"/><text x="40.7049%" y="1199.50"></text></g><g><title>&lt;std::sys::unix::fs::Dir as core::ops::drop::Drop&gt;::drop (10 samples, 0.69%)</title><rect x="40.4549%" y="1173" width="0.6892%" height="15" fill="rgb(227,5,17)" fg:x="587" fg:w="10"/><text x="40.7049%" y="1183.50"></text></g><g><title>closedir (9 samples, 0.62%)</title><rect x="40.5238%" y="1157" width="0.6203%" height="15" fill="rgb(221,226,24)" fg:x="588" fg:w="9"/><text x="40.7738%" y="1167.50"></text></g><g><title>cfree (9 samples, 0.62%)</title><rect x="40.5238%" y="1141" width="0.6203%" height="15" fill="rgb(211,5,48)" fg:x="588" fg:w="9"/><text x="40.7738%" y="1151.50"></text></g><g><title>[libc.so.6] (9 samples, 0.62%)</title><rect x="40.5238%" y="1125" width="0.6203%" height="15" fill="rgb(219,150,6)" fg:x="588" fg:w="9"/><text x="40.7738%" y="1135.50"></text></g><g><title>[libc.so.6] (6 samples, 0.41%)</title><rect x="40.7305%" y="1109" width="0.4135%" height="15" fill="rgb(251,46,16)" fg:x="591" fg:w="6"/><text x="40.9805%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 4.07%)</title><rect x="37.1468%" y="1381" width="4.0662%" height="15" fill="rgb(220,204,40)" fg:x="539" fg:w="59"/><text x="37.3968%" y="1391.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 4.07%)</title><rect x="37.1468%" y="1365" width="4.0662%" height="15" fill="rgb(211,85,2)" fg:x="539" fg:w="59"/><text x="37.3968%" y="1375.50">&lt;cor..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.07%)</title><rect x="41.1440%" y="1349" width="0.0689%" height="15" fill="rgb(229,17,7)" fg:x="597" fg:w="1"/><text x="41.3940%" y="1359.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.14%)</title><rect x="41.2130%" y="1381" width="0.1378%" height="15" fill="rgb(239,72,28)" fg:x="598" fg:w="2"/><text x="41.4630%" y="1391.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.14%)</title><rect x="41.2130%" y="1365" width="0.1378%" height="15" fill="rgb(230,47,54)" fg:x="598" fg:w="2"/><text x="41.4630%" y="1375.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.14%)</title><rect x="41.2130%" y="1349" width="0.1378%" height="15" fill="rgb(214,50,8)" fg:x="598" fg:w="2"/><text x="41.4630%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2 samples, 0.14%)</title><rect x="41.2130%" y="1333" width="0.1378%" height="15" fill="rgb(216,198,43)" fg:x="598" fg:w="2"/><text x="41.4630%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (2 samples, 0.14%)</title><rect x="41.2130%" y="1317" width="0.1378%" height="15" fill="rgb(234,20,35)" fg:x="598" fg:w="2"/><text x="41.4630%" y="1327.50"></text></g><g><title>&lt;std::path::PathBuf as core::ops::deref::Deref&gt;::deref (1 samples, 0.07%)</title><rect x="41.3508%" y="1381" width="0.0689%" height="15" fill="rgb(254,45,19)" fg:x="600" fg:w="1"/><text x="41.6008%" y="1391.50"></text></g><g><title>std::path::Path::new (1 samples, 0.07%)</title><rect x="41.3508%" y="1365" width="0.0689%" height="15" fill="rgb(219,14,44)" fg:x="600" fg:w="1"/><text x="41.6008%" y="1375.50"></text></g><g><title>cfree (5 samples, 0.34%)</title><rect x="41.4197%" y="1381" width="0.3446%" height="15" fill="rgb(217,220,26)" fg:x="601" fg:w="5"/><text x="41.6697%" y="1391.50"></text></g><g><title>[libc.so.6] (4 samples, 0.28%)</title><rect x="41.4886%" y="1365" width="0.2757%" height="15" fill="rgb(213,158,28)" fg:x="602" fg:w="4"/><text x="41.7386%" y="1375.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (1 samples, 0.07%)</title><rect x="41.7643%" y="1317" width="0.0689%" height="15" fill="rgb(252,51,52)" fg:x="606" fg:w="1"/><text x="42.0143%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (7 samples, 0.48%)</title><rect x="41.7643%" y="1381" width="0.4824%" height="15" fill="rgb(246,89,16)" fg:x="606" fg:w="7"/><text x="42.0143%" y="1391.50"></text></g><g><title>sysinfo::linux::component::Component::from_hwmon::{{closure}} (7 samples, 0.48%)</title><rect x="41.7643%" y="1365" width="0.4824%" height="15" fill="rgb(216,158,49)" fg:x="606" fg:w="7"/><text x="42.0143%" y="1375.50"></text></g><g><title>std::ffi::os_str::OsStr::to_str (7 samples, 0.48%)</title><rect x="41.7643%" y="1349" width="0.4824%" height="15" fill="rgb(236,107,19)" fg:x="606" fg:w="7"/><text x="42.0143%" y="1359.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_str (7 samples, 0.48%)</title><rect x="41.7643%" y="1333" width="0.4824%" height="15" fill="rgb(228,185,30)" fg:x="606" fg:w="7"/><text x="42.0143%" y="1343.50"></text></g><g><title>core::str::converts::from_utf8 (6 samples, 0.41%)</title><rect x="41.8332%" y="1317" width="0.4135%" height="15" fill="rgb(246,134,8)" fg:x="607" fg:w="6"/><text x="42.0832%" y="1327.50"></text></g><g><title>core::str::validations::run_utf8_validation (6 samples, 0.41%)</title><rect x="41.8332%" y="1301" width="0.4135%" height="15" fill="rgb(214,143,50)" fg:x="607" fg:w="6"/><text x="42.0832%" y="1311.50"></text></g><g><title>__rust_dealloc (1 samples, 0.07%)</title><rect x="42.3156%" y="1285" width="0.0689%" height="15" fill="rgb(228,75,8)" fg:x="614" fg:w="1"/><text x="42.5656%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (13 samples, 0.90%)</title><rect x="42.2467%" y="1381" width="0.8959%" height="15" fill="rgb(207,175,4)" fg:x="613" fg:w="13"/><text x="42.4967%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.90%)</title><rect x="42.2467%" y="1365" width="0.8959%" height="15" fill="rgb(205,108,24)" fg:x="613" fg:w="13"/><text x="42.4967%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.90%)</title><rect x="42.2467%" y="1349" width="0.8959%" height="15" fill="rgb(244,120,49)" fg:x="613" fg:w="13"/><text x="42.4967%" y="1359.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.90%)</title><rect x="42.2467%" y="1333" width="0.8959%" height="15" fill="rgb(223,47,38)" fg:x="613" fg:w="13"/><text x="42.4967%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.83%)</title><rect x="42.3156%" y="1317" width="0.8270%" height="15" fill="rgb(229,179,11)" fg:x="614" fg:w="12"/><text x="42.5656%" y="1327.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.83%)</title><rect x="42.3156%" y="1301" width="0.8270%" height="15" fill="rgb(231,122,1)" fg:x="614" fg:w="12"/><text x="42.5656%" y="1311.50"></text></g><g><title>cfree (11 samples, 0.76%)</title><rect x="42.3846%" y="1285" width="0.7581%" height="15" fill="rgb(245,119,9)" fg:x="615" fg:w="11"/><text x="42.6346%" y="1295.50"></text></g><g><title>[libc.so.6] (7 samples, 0.48%)</title><rect x="42.6602%" y="1269" width="0.4824%" height="15" fill="rgb(241,163,25)" fg:x="619" fg:w="7"/><text x="42.9102%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2 samples, 0.14%)</title><rect x="43.1427%" y="1381" width="0.1378%" height="15" fill="rgb(217,214,3)" fg:x="626" fg:w="2"/><text x="43.3927%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.14%)</title><rect x="43.1427%" y="1365" width="0.1378%" height="15" fill="rgb(240,86,28)" fg:x="626" fg:w="2"/><text x="43.3927%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="43.1427%" y="1349" width="0.1378%" height="15" fill="rgb(215,47,9)" fg:x="626" fg:w="2"/><text x="43.3927%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="43.1427%" y="1333" width="0.1378%" height="15" fill="rgb(252,25,45)" fg:x="626" fg:w="2"/><text x="43.3927%" y="1343.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="43.1427%" y="1317" width="0.1378%" height="15" fill="rgb(251,164,9)" fg:x="626" fg:w="2"/><text x="43.3927%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.14%)</title><rect x="43.1427%" y="1301" width="0.1378%" height="15" fill="rgb(233,194,0)" fg:x="626" fg:w="2"/><text x="43.3927%" y="1311.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.14%)</title><rect x="43.1427%" y="1285" width="0.1378%" height="15" fill="rgb(249,111,24)" fg:x="626" fg:w="2"/><text x="43.3927%" y="1295.50"></text></g><g><title>cfree (2 samples, 0.14%)</title><rect x="43.1427%" y="1269" width="0.1378%" height="15" fill="rgb(250,223,3)" fg:x="626" fg:w="2"/><text x="43.3927%" y="1279.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="43.1427%" y="1253" width="0.1378%" height="15" fill="rgb(236,178,37)" fg:x="626" fg:w="2"/><text x="43.3927%" y="1263.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.07%)</title><rect x="43.2805%" y="1317" width="0.0689%" height="15" fill="rgb(241,158,50)" fg:x="628" fg:w="1"/><text x="43.5305%" y="1327.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.07%)</title><rect x="43.2805%" y="1301" width="0.0689%" height="15" fill="rgb(213,121,41)" fg:x="628" fg:w="1"/><text x="43.5305%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::DirEntry&gt; (6 samples, 0.41%)</title><rect x="43.2805%" y="1381" width="0.4135%" height="15" fill="rgb(240,92,3)" fg:x="628" fg:w="6"/><text x="43.5305%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::DirEntry&gt; (6 samples, 0.41%)</title><rect x="43.2805%" y="1365" width="0.4135%" height="15" fill="rgb(205,123,3)" fg:x="628" fg:w="6"/><text x="43.5305%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sys::unix::fs::InnerReadDir&gt;&gt; (6 samples, 0.41%)</title><rect x="43.2805%" y="1349" width="0.4135%" height="15" fill="rgb(205,97,47)" fg:x="628" fg:w="6"/><text x="43.5305%" y="1359.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.41%)</title><rect x="43.2805%" y="1333" width="0.4135%" height="15" fill="rgb(247,152,14)" fg:x="628" fg:w="6"/><text x="43.5305%" y="1343.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.34%)</title><rect x="43.3494%" y="1317" width="0.3446%" height="15" fill="rgb(248,195,53)" fg:x="629" fg:w="5"/><text x="43.5994%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.34%)</title><rect x="43.3494%" y="1301" width="0.3446%" height="15" fill="rgb(226,201,16)" fg:x="629" fg:w="5"/><text x="43.5994%" y="1311.50"></text></g><g><title>__rust_dealloc (1 samples, 0.07%)</title><rect x="43.8318%" y="1253" width="0.0689%" height="15" fill="rgb(205,98,0)" fg:x="636" fg:w="1"/><text x="44.0818%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37 samples, 2.55%)</title><rect x="43.8318%" y="1285" width="2.5500%" height="15" fill="rgb(214,191,48)" fg:x="636" fg:w="37"/><text x="44.0818%" y="1295.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (37 samples, 2.55%)</title><rect x="43.8318%" y="1269" width="2.5500%" height="15" fill="rgb(237,112,39)" fg:x="636" fg:w="37"/><text x="44.0818%" y="1279.50">al..</text></g><g><title>cfree (36 samples, 2.48%)</title><rect x="43.9008%" y="1253" width="2.4810%" height="15" fill="rgb(247,203,27)" fg:x="637" fg:w="36"/><text x="44.1508%" y="1263.50">cf..</text></g><g><title>[libc.so.6] (25 samples, 1.72%)</title><rect x="44.6589%" y="1237" width="1.7229%" height="15" fill="rgb(235,124,28)" fg:x="648" fg:w="25"/><text x="44.9089%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (42 samples, 2.89%)</title><rect x="43.6940%" y="1381" width="2.8946%" height="15" fill="rgb(208,207,46)" fg:x="634" fg:w="42"/><text x="43.9440%" y="1391.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (42 samples, 2.89%)</title><rect x="43.6940%" y="1365" width="2.8946%" height="15" fill="rgb(234,176,4)" fg:x="634" fg:w="42"/><text x="43.9440%" y="1375.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::os_str::Buf&gt; (42 samples, 2.89%)</title><rect x="43.6940%" y="1349" width="2.8946%" height="15" fill="rgb(230,133,28)" fg:x="634" fg:w="42"/><text x="43.9440%" y="1359.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (42 samples, 2.89%)</title><rect x="43.6940%" y="1333" width="2.8946%" height="15" fill="rgb(211,137,40)" fg:x="634" fg:w="42"/><text x="43.9440%" y="1343.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (42 samples, 2.89%)</title><rect x="43.6940%" y="1317" width="2.8946%" height="15" fill="rgb(254,35,13)" fg:x="634" fg:w="42"/><text x="43.9440%" y="1327.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 2.89%)</title><rect x="43.6940%" y="1301" width="2.8946%" height="15" fill="rgb(225,49,51)" fg:x="634" fg:w="42"/><text x="43.9440%" y="1311.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.21%)</title><rect x="46.3818%" y="1285" width="0.2068%" height="15" fill="rgb(251,10,15)" fg:x="673" fg:w="3"/><text x="46.6318%" y="1295.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (4 samples, 0.28%)</title><rect x="46.5886%" y="1381" width="0.2757%" height="15" fill="rgb(228,207,15)" fg:x="676" fg:w="4"/><text x="46.8386%" y="1391.50"></text></g><g><title>core::num::from_str_radix (4 samples, 0.28%)</title><rect x="46.5886%" y="1365" width="0.2757%" height="15" fill="rgb(241,99,19)" fg:x="676" fg:w="4"/><text x="46.8386%" y="1375.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (4 samples, 0.28%)</title><rect x="46.5886%" y="1349" width="0.2757%" height="15" fill="rgb(207,104,49)" fg:x="676" fg:w="4"/><text x="46.8386%" y="1359.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (2 samples, 0.14%)</title><rect x="46.7264%" y="1333" width="0.1378%" height="15" fill="rgb(234,99,18)" fg:x="678" fg:w="2"/><text x="46.9764%" y="1343.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.07%)</title><rect x="46.8642%" y="1349" width="0.0689%" height="15" fill="rgb(213,191,49)" fg:x="680" fg:w="1"/><text x="47.1142%" y="1359.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.07%)</title><rect x="46.8642%" y="1333" width="0.0689%" height="15" fill="rgb(210,226,19)" fg:x="680" fg:w="1"/><text x="47.1142%" y="1343.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="46.8642%" y="1317" width="0.0689%" height="15" fill="rgb(229,97,18)" fg:x="680" fg:w="1"/><text x="47.1142%" y="1327.50"></text></g><g><title>core::str::&lt;impl str&gt;::split_once (4 samples, 0.28%)</title><rect x="46.8642%" y="1381" width="0.2757%" height="15" fill="rgb(211,167,15)" fg:x="680" fg:w="4"/><text x="47.1142%" y="1391.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (4 samples, 0.28%)</title><rect x="46.8642%" y="1365" width="0.2757%" height="15" fill="rgb(210,169,34)" fg:x="680" fg:w="4"/><text x="47.1142%" y="1375.50"></text></g><g><title>core::slice::memchr::memchr (3 samples, 0.21%)</title><rect x="46.9331%" y="1349" width="0.2068%" height="15" fill="rgb(241,121,31)" fg:x="681" fg:w="3"/><text x="47.1831%" y="1359.50"></text></g><g><title>core::slice::memchr::memchr_naive (2 samples, 0.14%)</title><rect x="47.0021%" y="1333" width="0.1378%" height="15" fill="rgb(232,40,11)" fg:x="682" fg:w="2"/><text x="47.2521%" y="1343.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (1 samples, 0.07%)</title><rect x="47.1399%" y="1381" width="0.0689%" height="15" fill="rgb(205,86,26)" fg:x="684" fg:w="1"/><text x="47.3899%" y="1391.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (1 samples, 0.07%)</title><rect x="47.1399%" y="1365" width="0.0689%" height="15" fill="rgb(231,126,28)" fg:x="684" fg:w="1"/><text x="47.3899%" y="1375.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (1 samples, 0.07%)</title><rect x="47.1399%" y="1349" width="0.0689%" height="15" fill="rgb(219,221,18)" fg:x="684" fg:w="1"/><text x="47.3899%" y="1359.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.07%)</title><rect x="47.1399%" y="1333" width="0.0689%" height="15" fill="rgb(211,40,0)" fg:x="684" fg:w="1"/><text x="47.3899%" y="1343.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.07%)</title><rect x="47.1399%" y="1317" width="0.0689%" height="15" fill="rgb(239,85,43)" fg:x="684" fg:w="1"/><text x="47.3899%" y="1327.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="47.1399%" y="1301" width="0.0689%" height="15" fill="rgb(231,55,21)" fg:x="684" fg:w="1"/><text x="47.3899%" y="1311.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (1 samples, 0.07%)</title><rect x="47.2088%" y="1381" width="0.0689%" height="15" fill="rgb(225,184,43)" fg:x="685" fg:w="1"/><text x="47.4588%" y="1391.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.07%)</title><rect x="47.2088%" y="1365" width="0.0689%" height="15" fill="rgb(251,158,41)" fg:x="685" fg:w="1"/><text x="47.4588%" y="1375.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="47.2088%" y="1349" width="0.0689%" height="15" fill="rgb(234,159,37)" fg:x="685" fg:w="1"/><text x="47.4588%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1 samples, 0.07%)</title><rect x="47.2088%" y="1333" width="0.0689%" height="15" fill="rgb(216,204,22)" fg:x="685" fg:w="1"/><text x="47.4588%" y="1343.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.07%)</title><rect x="47.2088%" y="1317" width="0.0689%" height="15" fill="rgb(214,17,3)" fg:x="685" fg:w="1"/><text x="47.4588%" y="1327.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.07%)</title><rect x="47.2088%" y="1301" width="0.0689%" height="15" fill="rgb(212,111,17)" fg:x="685" fg:w="1"/><text x="47.4588%" y="1311.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="47.2088%" y="1285" width="0.0689%" height="15" fill="rgb(221,157,24)" fg:x="685" fg:w="1"/><text x="47.4588%" y="1295.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (2 samples, 0.14%)</title><rect x="47.2777%" y="1349" width="0.1378%" height="15" fill="rgb(252,16,13)" fg:x="686" fg:w="2"/><text x="47.5277%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="47.2777%" y="1333" width="0.1378%" height="15" fill="rgb(221,62,2)" fg:x="686" fg:w="2"/><text x="47.5277%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.07%)</title><rect x="47.6223%" y="1269" width="0.0689%" height="15" fill="rgb(247,87,22)" fg:x="691" fg:w="1"/><text x="47.8723%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.21%)</title><rect x="47.5534%" y="1317" width="0.2068%" height="15" fill="rgb(215,73,9)" fg:x="690" fg:w="3"/><text x="47.8034%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.21%)</title><rect x="47.5534%" y="1301" width="0.2068%" height="15" fill="rgb(207,175,33)" fg:x="690" fg:w="3"/><text x="47.8034%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.21%)</title><rect x="47.5534%" y="1285" width="0.2068%" height="15" fill="rgb(243,129,54)" fg:x="690" fg:w="3"/><text x="47.8034%" y="1295.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.07%)</title><rect x="47.6912%" y="1269" width="0.0689%" height="15" fill="rgb(227,119,45)" fg:x="692" fg:w="1"/><text x="47.9412%" y="1279.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.07%)</title><rect x="47.6912%" y="1253" width="0.0689%" height="15" fill="rgb(205,109,36)" fg:x="692" fg:w="1"/><text x="47.9412%" y="1263.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.07%)</title><rect x="47.7602%" y="1317" width="0.0689%" height="15" fill="rgb(205,6,39)" fg:x="693" fg:w="1"/><text x="48.0102%" y="1327.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.07%)</title><rect x="47.7602%" y="1301" width="0.0689%" height="15" fill="rgb(221,32,16)" fg:x="693" fg:w="1"/><text x="48.0102%" y="1311.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.07%)</title><rect x="47.7602%" y="1285" width="0.0689%" height="15" fill="rgb(228,144,50)" fg:x="693" fg:w="1"/><text x="48.0102%" y="1295.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.07%)</title><rect x="47.7602%" y="1269" width="0.0689%" height="15" fill="rgb(229,201,53)" fg:x="693" fg:w="1"/><text x="48.0102%" y="1279.50"></text></g><g><title>hashbrown::map::make_insert_hash (7 samples, 0.48%)</title><rect x="47.4156%" y="1349" width="0.4824%" height="15" fill="rgb(249,153,27)" fg:x="688" fg:w="7"/><text x="47.6656%" y="1359.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.48%)</title><rect x="47.4156%" y="1333" width="0.4824%" height="15" fill="rgb(227,106,25)" fg:x="688" fg:w="7"/><text x="47.6656%" y="1343.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.07%)</title><rect x="47.8291%" y="1317" width="0.0689%" height="15" fill="rgb(230,65,29)" fg:x="694" fg:w="1"/><text x="48.0791%" y="1327.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="47.9669%" y="1317" width="0.1378%" height="15" fill="rgb(221,57,46)" fg:x="696" fg:w="2"/><text x="48.2169%" y="1327.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.14%)</title><rect x="47.9669%" y="1301" width="0.1378%" height="15" fill="rgb(229,161,17)" fg:x="696" fg:w="2"/><text x="48.2169%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.28%)</title><rect x="48.1048%" y="1317" width="0.2757%" height="15" fill="rgb(222,213,11)" fg:x="698" fg:w="4"/><text x="48.3548%" y="1327.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (4 samples, 0.28%)</title><rect x="48.1048%" y="1301" width="0.2757%" height="15" fill="rgb(235,35,13)" fg:x="698" fg:w="4"/><text x="48.3548%" y="1311.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (4 samples, 0.28%)</title><rect x="48.1048%" y="1285" width="0.2757%" height="15" fill="rgb(233,158,34)" fg:x="698" fg:w="4"/><text x="48.3548%" y="1295.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.14%)</title><rect x="48.3804%" y="1317" width="0.1378%" height="15" fill="rgb(215,151,48)" fg:x="702" fg:w="2"/><text x="48.6304%" y="1327.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (4 samples, 0.28%)</title><rect x="48.5183%" y="1317" width="0.2757%" height="15" fill="rgb(229,84,14)" fg:x="704" fg:w="4"/><text x="48.7683%" y="1327.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4 samples, 0.28%)</title><rect x="48.5183%" y="1301" width="0.2757%" height="15" fill="rgb(229,68,14)" fg:x="704" fg:w="4"/><text x="48.7683%" y="1311.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.28%)</title><rect x="48.5183%" y="1285" width="0.2757%" height="15" fill="rgb(243,106,26)" fg:x="704" fg:w="4"/><text x="48.7683%" y="1295.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.14%)</title><rect x="48.7939%" y="1317" width="0.1378%" height="15" fill="rgb(206,45,38)" fg:x="708" fg:w="2"/><text x="49.0439%" y="1327.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.14%)</title><rect x="48.7939%" y="1301" width="0.1378%" height="15" fill="rgb(226,6,15)" fg:x="708" fg:w="2"/><text x="49.0439%" y="1311.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (25 samples, 1.72%)</title><rect x="47.2777%" y="1381" width="1.7229%" height="15" fill="rgb(232,22,54)" fg:x="686" fg:w="25"/><text x="47.5277%" y="1391.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (25 samples, 1.72%)</title><rect x="47.2777%" y="1365" width="1.7229%" height="15" fill="rgb(229,222,32)" fg:x="686" fg:w="25"/><text x="47.5277%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 1.10%)</title><rect x="47.8980%" y="1349" width="1.1027%" height="15" fill="rgb(228,62,29)" fg:x="695" fg:w="16"/><text x="48.1480%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (15 samples, 1.03%)</title><rect x="47.9669%" y="1333" width="1.0338%" height="15" fill="rgb(251,103,34)" fg:x="696" fg:w="15"/><text x="48.2169%" y="1343.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.07%)</title><rect x="48.9318%" y="1317" width="0.0689%" height="15" fill="rgb(233,12,30)" fg:x="710" fg:w="1"/><text x="49.1818%" y="1327.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.07%)</title><rect x="48.9318%" y="1301" width="0.0689%" height="15" fill="rgb(238,52,0)" fg:x="710" fg:w="1"/><text x="49.1818%" y="1311.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.07%)</title><rect x="48.9318%" y="1285" width="0.0689%" height="15" fill="rgb(223,98,5)" fg:x="710" fg:w="1"/><text x="49.1818%" y="1295.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::with_capacity (2 samples, 0.14%)</title><rect x="49.0007%" y="1381" width="0.1378%" height="15" fill="rgb(228,75,37)" fg:x="711" fg:w="2"/><text x="49.2507%" y="1391.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (2 samples, 0.14%)</title><rect x="49.0007%" y="1365" width="0.1378%" height="15" fill="rgb(205,115,49)" fg:x="711" fg:w="2"/><text x="49.2507%" y="1375.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (2 samples, 0.14%)</title><rect x="49.0007%" y="1349" width="0.1378%" height="15" fill="rgb(250,154,43)" fg:x="711" fg:w="2"/><text x="49.2507%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="49.0007%" y="1333" width="0.1378%" height="15" fill="rgb(226,43,29)" fg:x="711" fg:w="2"/><text x="49.2507%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="49.0007%" y="1317" width="0.1378%" height="15" fill="rgb(249,228,39)" fg:x="711" fg:w="2"/><text x="49.2507%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::fallible_with_capacity (1 samples, 0.07%)</title><rect x="49.0696%" y="1301" width="0.0689%" height="15" fill="rgb(216,79,43)" fg:x="712" fg:w="1"/><text x="49.3196%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.07%)</title><rect x="49.0696%" y="1285" width="0.0689%" height="15" fill="rgb(228,95,12)" fg:x="712" fg:w="1"/><text x="49.3196%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.07%)</title><rect x="49.0696%" y="1269" width="0.0689%" height="15" fill="rgb(249,221,15)" fg:x="712" fg:w="1"/><text x="49.3196%" y="1279.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.07%)</title><rect x="49.0696%" y="1253" width="0.0689%" height="15" fill="rgb(233,34,13)" fg:x="712" fg:w="1"/><text x="49.3196%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="49.0696%" y="1237" width="0.0689%" height="15" fill="rgb(214,103,39)" fg:x="712" fg:w="1"/><text x="49.3196%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="49.0696%" y="1221" width="0.0689%" height="15" fill="rgb(251,126,39)" fg:x="712" fg:w="1"/><text x="49.3196%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="49.0696%" y="1205" width="0.0689%" height="15" fill="rgb(214,216,36)" fg:x="712" fg:w="1"/><text x="49.3196%" y="1215.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="49.0696%" y="1189" width="0.0689%" height="15" fill="rgb(220,221,8)" fg:x="712" fg:w="1"/><text x="49.3196%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="49.0696%" y="1173" width="0.0689%" height="15" fill="rgb(240,216,3)" fg:x="712" fg:w="1"/><text x="49.3196%" y="1183.50"></text></g><g><title>&lt;std::path::PathBuf as core::ops::deref::Deref&gt;::deref (1 samples, 0.07%)</title><rect x="49.1385%" y="1349" width="0.0689%" height="15" fill="rgb(232,218,17)" fg:x="713" fg:w="1"/><text x="49.3885%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.41%)</title><rect x="49.2074%" y="1157" width="0.4135%" height="15" fill="rgb(229,163,45)" fg:x="714" fg:w="6"/><text x="49.4574%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.41%)</title><rect x="49.2074%" y="1141" width="0.4135%" height="15" fill="rgb(231,110,42)" fg:x="714" fg:w="6"/><text x="49.4574%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.41%)</title><rect x="49.2074%" y="1125" width="0.4135%" height="15" fill="rgb(208,170,48)" fg:x="714" fg:w="6"/><text x="49.4574%" y="1135.50"></text></g><g><title>malloc (6 samples, 0.41%)</title><rect x="49.2074%" y="1109" width="0.4135%" height="15" fill="rgb(239,116,25)" fg:x="714" fg:w="6"/><text x="49.4574%" y="1119.50"></text></g><g><title>[libc.so.6] (3 samples, 0.21%)</title><rect x="49.4142%" y="1093" width="0.2068%" height="15" fill="rgb(219,200,50)" fg:x="717" fg:w="3"/><text x="49.6642%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.48%)</title><rect x="49.2074%" y="1205" width="0.4824%" height="15" fill="rgb(245,200,0)" fg:x="714" fg:w="7"/><text x="49.4574%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.48%)</title><rect x="49.2074%" y="1189" width="0.4824%" height="15" fill="rgb(245,119,33)" fg:x="714" fg:w="7"/><text x="49.4574%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.48%)</title><rect x="49.2074%" y="1173" width="0.4824%" height="15" fill="rgb(231,125,12)" fg:x="714" fg:w="7"/><text x="49.4574%" y="1183.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.07%)</title><rect x="49.6210%" y="1157" width="0.0689%" height="15" fill="rgb(216,96,41)" fg:x="720" fg:w="1"/><text x="49.8710%" y="1167.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.07%)</title><rect x="49.6210%" y="1141" width="0.0689%" height="15" fill="rgb(248,43,45)" fg:x="720" fg:w="1"/><text x="49.8710%" y="1151.50"></text></g><g><title>std::path::Path::to_path_buf (10 samples, 0.69%)</title><rect x="49.2074%" y="1317" width="0.6892%" height="15" fill="rgb(217,222,7)" fg:x="714" fg:w="10"/><text x="49.4574%" y="1327.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (10 samples, 0.69%)</title><rect x="49.2074%" y="1301" width="0.6892%" height="15" fill="rgb(233,28,6)" fg:x="714" fg:w="10"/><text x="49.4574%" y="1311.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (10 samples, 0.69%)</title><rect x="49.2074%" y="1285" width="0.6892%" height="15" fill="rgb(231,218,15)" fg:x="714" fg:w="10"/><text x="49.4574%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (10 samples, 0.69%)</title><rect x="49.2074%" y="1269" width="0.6892%" height="15" fill="rgb(226,171,48)" fg:x="714" fg:w="10"/><text x="49.4574%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.69%)</title><rect x="49.2074%" y="1253" width="0.6892%" height="15" fill="rgb(235,201,9)" fg:x="714" fg:w="10"/><text x="49.4574%" y="1263.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.69%)</title><rect x="49.2074%" y="1237" width="0.6892%" height="15" fill="rgb(217,80,15)" fg:x="714" fg:w="10"/><text x="49.4574%" y="1247.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.69%)</title><rect x="49.2074%" y="1221" width="0.6892%" height="15" fill="rgb(219,152,8)" fg:x="714" fg:w="10"/><text x="49.4574%" y="1231.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.21%)</title><rect x="49.6899%" y="1205" width="0.2068%" height="15" fill="rgb(243,107,38)" fg:x="721" fg:w="3"/><text x="49.9399%" y="1215.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.21%)</title><rect x="49.6899%" y="1189" width="0.2068%" height="15" fill="rgb(231,17,5)" fg:x="721" fg:w="3"/><text x="49.9399%" y="1199.50"></text></g><g><title>[libc.so.6] (3 samples, 0.21%)</title><rect x="49.6899%" y="1173" width="0.2068%" height="15" fill="rgb(209,25,54)" fg:x="721" fg:w="3"/><text x="49.9399%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.14%)</title><rect x="49.8966%" y="1285" width="0.1378%" height="15" fill="rgb(219,0,2)" fg:x="724" fg:w="2"/><text x="50.1466%" y="1295.50"></text></g><g><title>std::path::PathBuf::_push::{{closure}} (2 samples, 0.14%)</title><rect x="49.8966%" y="1269" width="0.1378%" height="15" fill="rgb(246,9,5)" fg:x="724" fg:w="2"/><text x="50.1466%" y="1279.50"></text></g><g><title>std::sys::unix::path::is_sep_byte (2 samples, 0.14%)</title><rect x="49.8966%" y="1253" width="0.1378%" height="15" fill="rgb(226,159,4)" fg:x="724" fg:w="2"/><text x="50.1466%" y="1263.50"></text></g><g><title>__rdl_realloc (1 samples, 0.07%)</title><rect x="50.0345%" y="1077" width="0.0689%" height="15" fill="rgb(219,175,34)" fg:x="726" fg:w="1"/><text x="50.2845%" y="1087.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.07%)</title><rect x="50.0345%" y="1061" width="0.0689%" height="15" fill="rgb(236,10,46)" fg:x="726" fg:w="1"/><text x="50.2845%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (24 samples, 1.65%)</title><rect x="50.0345%" y="1125" width="1.6540%" height="15" fill="rgb(240,211,16)" fg:x="726" fg:w="24"/><text x="50.2845%" y="1135.50"></text></g><g><title>alloc::alloc::Global::grow_impl (24 samples, 1.65%)</title><rect x="50.0345%" y="1109" width="1.6540%" height="15" fill="rgb(205,3,43)" fg:x="726" fg:w="24"/><text x="50.2845%" y="1119.50"></text></g><g><title>alloc::alloc::realloc (24 samples, 1.65%)</title><rect x="50.0345%" y="1093" width="1.6540%" height="15" fill="rgb(245,7,22)" fg:x="726" fg:w="24"/><text x="50.2845%" y="1103.50"></text></g><g><title>realloc (23 samples, 1.59%)</title><rect x="50.1034%" y="1077" width="1.5851%" height="15" fill="rgb(239,132,32)" fg:x="727" fg:w="23"/><text x="50.3534%" y="1087.50"></text></g><g><title>[libc.so.6] (12 samples, 0.83%)</title><rect x="50.8615%" y="1061" width="0.8270%" height="15" fill="rgb(228,202,34)" fg:x="738" fg:w="12"/><text x="51.1115%" y="1071.50"></text></g><g><title>[libc.so.6] (11 samples, 0.76%)</title><rect x="50.9304%" y="1045" width="0.7581%" height="15" fill="rgb(254,200,22)" fg:x="739" fg:w="11"/><text x="51.1804%" y="1055.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="51.5507%" y="1029" width="0.1378%" height="15" fill="rgb(219,10,39)" fg:x="748" fg:w="2"/><text x="51.8007%" y="1039.50"></text></g><g><title>std::fs::DirEntry::path (38 samples, 2.62%)</title><rect x="49.1385%" y="1381" width="2.6189%" height="15" fill="rgb(226,210,39)" fg:x="713" fg:w="38"/><text x="49.3885%" y="1391.50">st..</text></g><g><title>std::sys::unix::fs::DirEntry::path (38 samples, 2.62%)</title><rect x="49.1385%" y="1365" width="2.6189%" height="15" fill="rgb(208,219,16)" fg:x="713" fg:w="38"/><text x="49.3885%" y="1375.50">st..</text></g><g><title>std::path::Path::join (37 samples, 2.55%)</title><rect x="49.2074%" y="1349" width="2.5500%" height="15" fill="rgb(216,158,51)" fg:x="714" fg:w="37"/><text x="49.4574%" y="1359.50">st..</text></g><g><title>std::path::Path::_join (37 samples, 2.55%)</title><rect x="49.2074%" y="1333" width="2.5500%" height="15" fill="rgb(233,14,44)" fg:x="714" fg:w="37"/><text x="49.4574%" y="1343.50">st..</text></g><g><title>std::path::PathBuf::push (27 samples, 1.86%)</title><rect x="49.8966%" y="1317" width="1.8608%" height="15" fill="rgb(237,97,39)" fg:x="724" fg:w="27"/><text x="50.1466%" y="1327.50">s..</text></g><g><title>std::path::PathBuf::_push (27 samples, 1.86%)</title><rect x="49.8966%" y="1301" width="1.8608%" height="15" fill="rgb(218,198,43)" fg:x="724" fg:w="27"/><text x="50.1466%" y="1311.50">s..</text></g><g><title>std::ffi::os_str::OsString::push (25 samples, 1.72%)</title><rect x="50.0345%" y="1285" width="1.7229%" height="15" fill="rgb(231,104,20)" fg:x="726" fg:w="25"/><text x="50.2845%" y="1295.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (25 samples, 1.72%)</title><rect x="50.0345%" y="1269" width="1.7229%" height="15" fill="rgb(254,36,13)" fg:x="726" fg:w="25"/><text x="50.2845%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (25 samples, 1.72%)</title><rect x="50.0345%" y="1253" width="1.7229%" height="15" fill="rgb(248,14,50)" fg:x="726" fg:w="25"/><text x="50.2845%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (25 samples, 1.72%)</title><rect x="50.0345%" y="1237" width="1.7229%" height="15" fill="rgb(217,107,29)" fg:x="726" fg:w="25"/><text x="50.2845%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (25 samples, 1.72%)</title><rect x="50.0345%" y="1221" width="1.7229%" height="15" fill="rgb(251,169,33)" fg:x="726" fg:w="25"/><text x="50.2845%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (25 samples, 1.72%)</title><rect x="50.0345%" y="1205" width="1.7229%" height="15" fill="rgb(217,108,32)" fg:x="726" fg:w="25"/><text x="50.2845%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (25 samples, 1.72%)</title><rect x="50.0345%" y="1189" width="1.7229%" height="15" fill="rgb(219,66,42)" fg:x="726" fg:w="25"/><text x="50.2845%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 1.72%)</title><rect x="50.0345%" y="1173" width="1.7229%" height="15" fill="rgb(206,180,7)" fg:x="726" fg:w="25"/><text x="50.2845%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 1.72%)</title><rect x="50.0345%" y="1157" width="1.7229%" height="15" fill="rgb(208,226,31)" fg:x="726" fg:w="25"/><text x="50.2845%" y="1167.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 1.72%)</title><rect x="50.0345%" y="1141" width="1.7229%" height="15" fill="rgb(218,26,49)" fg:x="726" fg:w="25"/><text x="50.2845%" y="1151.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.07%)</title><rect x="51.6885%" y="1125" width="0.0689%" height="15" fill="rgb(233,197,48)" fg:x="750" fg:w="1"/><text x="51.9385%" y="1135.50"></text></g><g><title>[libc.so.6] (6 samples, 0.41%)</title><rect x="51.8263%" y="1333" width="0.4135%" height="15" fill="rgb(252,181,51)" fg:x="752" fg:w="6"/><text x="52.0763%" y="1343.50"></text></g><g><title>malloc (6 samples, 0.41%)</title><rect x="51.8263%" y="1317" width="0.4135%" height="15" fill="rgb(253,90,19)" fg:x="752" fg:w="6"/><text x="52.0763%" y="1327.50"></text></g><g><title>[libc.so.6] (6 samples, 0.41%)</title><rect x="51.8263%" y="1301" width="0.4135%" height="15" fill="rgb(215,171,30)" fg:x="752" fg:w="6"/><text x="52.0763%" y="1311.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="52.1020%" y="1285" width="0.1378%" height="15" fill="rgb(214,222,9)" fg:x="756" fg:w="2"/><text x="52.3520%" y="1295.50"></text></g><g><title>[libc.so.6] (8 samples, 0.55%)</title><rect x="51.7574%" y="1349" width="0.5513%" height="15" fill="rgb(223,3,22)" fg:x="751" fg:w="8"/><text x="52.0074%" y="1359.50"></text></g><g><title>fstatat64 (1 samples, 0.07%)</title><rect x="52.2398%" y="1333" width="0.0689%" height="15" fill="rgb(225,196,46)" fg:x="758" fg:w="1"/><text x="52.4898%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::ffi::c_str::CString&gt; (1 samples, 0.07%)</title><rect x="52.3088%" y="1349" width="0.0689%" height="15" fill="rgb(209,110,37)" fg:x="759" fg:w="1"/><text x="52.5588%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (1 samples, 0.07%)</title><rect x="52.3088%" y="1333" width="0.0689%" height="15" fill="rgb(249,89,12)" fg:x="759" fg:w="1"/><text x="52.5588%" y="1343.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.07%)</title><rect x="52.3088%" y="1317" width="0.0689%" height="15" fill="rgb(226,27,33)" fg:x="759" fg:w="1"/><text x="52.5588%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="52.3088%" y="1301" width="0.0689%" height="15" fill="rgb(213,82,22)" fg:x="759" fg:w="1"/><text x="52.5588%" y="1311.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="52.3088%" y="1285" width="0.0689%" height="15" fill="rgb(248,140,0)" fg:x="759" fg:w="1"/><text x="52.5588%" y="1295.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="52.3088%" y="1269" width="0.0689%" height="15" fill="rgb(228,106,3)" fg:x="759" fg:w="1"/><text x="52.5588%" y="1279.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="52.3088%" y="1253" width="0.0689%" height="15" fill="rgb(209,23,37)" fg:x="759" fg:w="1"/><text x="52.5588%" y="1263.50"></text></g><g><title>std::fs::read_dir (11 samples, 0.76%)</title><rect x="51.7574%" y="1381" width="0.7581%" height="15" fill="rgb(241,93,50)" fg:x="751" fg:w="11"/><text x="52.0074%" y="1391.50"></text></g><g><title>std::sys::unix::fs::readdir (11 samples, 0.76%)</title><rect x="51.7574%" y="1365" width="0.7581%" height="15" fill="rgb(253,46,43)" fg:x="751" fg:w="11"/><text x="52.0074%" y="1375.50"></text></g><g><title>opendir (2 samples, 0.14%)</title><rect x="52.3777%" y="1349" width="0.1378%" height="15" fill="rgb(226,206,43)" fg:x="760" fg:w="2"/><text x="52.6277%" y="1359.50"></text></g><g><title>__open64_nocancel (1 samples, 0.07%)</title><rect x="52.4466%" y="1333" width="0.0689%" height="15" fill="rgb(217,54,7)" fg:x="761" fg:w="1"/><text x="52.6966%" y="1343.50"></text></g><g><title>std::path::Components::len_before_body (1 samples, 0.07%)</title><rect x="52.8601%" y="1349" width="0.0689%" height="15" fill="rgb(223,5,52)" fg:x="767" fg:w="1"/><text x="53.1101%" y="1359.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (2 samples, 0.14%)</title><rect x="52.9979%" y="1333" width="0.1378%" height="15" fill="rgb(206,52,46)" fg:x="769" fg:w="2"/><text x="53.2479%" y="1343.50"></text></g><g><title>std::path::Components::parse_next_component_back::{{closure}} (2 samples, 0.14%)</title><rect x="52.9979%" y="1317" width="0.1378%" height="15" fill="rgb(253,136,11)" fg:x="769" fg:w="2"/><text x="53.2479%" y="1327.50"></text></g><g><title>std::path::Components::is_sep_byte (2 samples, 0.14%)</title><rect x="52.9979%" y="1301" width="0.1378%" height="15" fill="rgb(208,106,33)" fg:x="769" fg:w="2"/><text x="53.2479%" y="1311.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.28%)</title><rect x="53.1358%" y="1333" width="0.2757%" height="15" fill="rgb(206,54,4)" fg:x="771" fg:w="4"/><text x="53.3858%" y="1343.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.28%)</title><rect x="53.1358%" y="1317" width="0.2757%" height="15" fill="rgb(213,3,15)" fg:x="771" fg:w="4"/><text x="53.3858%" y="1327.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.07%)</title><rect x="53.3425%" y="1301" width="0.0689%" height="15" fill="rgb(252,211,39)" fg:x="774" fg:w="1"/><text x="53.5925%" y="1311.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.07%)</title><rect x="53.3425%" y="1285" width="0.0689%" height="15" fill="rgb(223,6,36)" fg:x="774" fg:w="1"/><text x="53.5925%" y="1295.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.07%)</title><rect x="53.3425%" y="1269" width="0.0689%" height="15" fill="rgb(252,169,45)" fg:x="774" fg:w="1"/><text x="53.5925%" y="1279.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.07%)</title><rect x="53.3425%" y="1253" width="0.0689%" height="15" fill="rgb(212,48,26)" fg:x="774" fg:w="1"/><text x="53.5925%" y="1263.50"></text></g><g><title>std::path::Components::len_before_body (1 samples, 0.07%)</title><rect x="53.4114%" y="1333" width="0.0689%" height="15" fill="rgb(251,102,48)" fg:x="775" fg:w="1"/><text x="53.6614%" y="1343.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.07%)</title><rect x="53.4114%" y="1317" width="0.0689%" height="15" fill="rgb(243,208,16)" fg:x="775" fg:w="1"/><text x="53.6614%" y="1327.50"></text></g><g><title>&lt;std::path::State as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.07%)</title><rect x="53.4114%" y="1301" width="0.0689%" height="15" fill="rgb(219,96,24)" fg:x="775" fg:w="1"/><text x="53.6614%" y="1311.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for isize&gt;::partial_cmp (1 samples, 0.07%)</title><rect x="53.4114%" y="1285" width="0.0689%" height="15" fill="rgb(219,33,29)" fg:x="775" fg:w="1"/><text x="53.6614%" y="1295.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (1 samples, 0.07%)</title><rect x="53.4114%" y="1269" width="0.0689%" height="15" fill="rgb(223,176,5)" fg:x="775" fg:w="1"/><text x="53.6614%" y="1279.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (15 samples, 1.03%)</title><rect x="52.5155%" y="1365" width="1.0338%" height="15" fill="rgb(228,140,14)" fg:x="762" fg:w="15"/><text x="52.7655%" y="1375.50"></text></g><g><title>std::path::Components::parse_next_component_back (9 samples, 0.62%)</title><rect x="52.9290%" y="1349" width="0.6203%" height="15" fill="rgb(217,179,31)" fg:x="768" fg:w="9"/><text x="53.1790%" y="1359.50"></text></g><g><title>std::path::Components::parse_single_component (1 samples, 0.07%)</title><rect x="53.4804%" y="1333" width="0.0689%" height="15" fill="rgb(230,9,30)" fg:x="776" fg:w="1"/><text x="53.7304%" y="1343.50"></text></g><g><title>std::path::Path::file_name (18 samples, 1.24%)</title><rect x="52.5155%" y="1381" width="1.2405%" height="15" fill="rgb(230,136,20)" fg:x="762" fg:w="18"/><text x="52.7655%" y="1391.50"></text></g><g><title>std::path::Path::components (3 samples, 0.21%)</title><rect x="53.5493%" y="1365" width="0.2068%" height="15" fill="rgb(215,210,22)" fg:x="777" fg:w="3"/><text x="53.7993%" y="1375.50"></text></g><g><title>std::path::has_physical_root (1 samples, 0.07%)</title><rect x="53.6871%" y="1349" width="0.0689%" height="15" fill="rgb(218,43,5)" fg:x="779" fg:w="1"/><text x="53.9371%" y="1359.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.07%)</title><rect x="53.7560%" y="1349" width="0.0689%" height="15" fill="rgb(216,11,5)" fg:x="780" fg:w="1"/><text x="54.0060%" y="1359.50"></text></g><g><title>[libc.so.6] (9 samples, 0.62%)</title><rect x="53.8939%" y="1333" width="0.6203%" height="15" fill="rgb(209,82,29)" fg:x="782" fg:w="9"/><text x="54.1439%" y="1343.50"></text></g><g><title>cfree (2 samples, 0.14%)</title><rect x="54.5141%" y="1333" width="0.1378%" height="15" fill="rgb(244,115,12)" fg:x="791" fg:w="2"/><text x="54.7641%" y="1343.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.21%)</title><rect x="54.6520%" y="1317" width="0.2068%" height="15" fill="rgb(222,82,18)" fg:x="793" fg:w="3"/><text x="54.9020%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (2 samples, 0.14%)</title><rect x="54.8587%" y="1269" width="0.1378%" height="15" fill="rgb(249,227,8)" fg:x="796" fg:w="2"/><text x="55.1087%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="54.8587%" y="1253" width="0.1378%" height="15" fill="rgb(253,141,45)" fg:x="796" fg:w="2"/><text x="55.1087%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.14%)</title><rect x="54.8587%" y="1237" width="0.1378%" height="15" fill="rgb(234,184,4)" fg:x="796" fg:w="2"/><text x="55.1087%" y="1247.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.14%)</title><rect x="54.8587%" y="1221" width="0.1378%" height="15" fill="rgb(218,194,23)" fg:x="796" fg:w="2"/><text x="55.1087%" y="1231.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="54.8587%" y="1205" width="0.1378%" height="15" fill="rgb(235,66,41)" fg:x="796" fg:w="2"/><text x="55.1087%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.07%)</title><rect x="55.0655%" y="1253" width="0.0689%" height="15" fill="rgb(245,217,1)" fg:x="799" fg:w="1"/><text x="55.3155%" y="1263.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (4 samples, 0.28%)</title><rect x="54.9966%" y="1269" width="0.2757%" height="15" fill="rgb(229,91,1)" fg:x="798" fg:w="4"/><text x="55.2466%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.14%)</title><rect x="55.1344%" y="1253" width="0.1378%" height="15" fill="rgb(207,101,30)" fg:x="800" fg:w="2"/><text x="55.3844%" y="1263.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="55.2033%" y="1237" width="0.0689%" height="15" fill="rgb(223,82,49)" fg:x="801" fg:w="1"/><text x="55.4533%" y="1247.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="55.4790%" y="1157" width="0.0689%" height="15" fill="rgb(218,167,17)" fg:x="805" fg:w="1"/><text x="55.7290%" y="1167.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="55.4790%" y="1141" width="0.0689%" height="15" fill="rgb(208,103,14)" fg:x="805" fg:w="1"/><text x="55.7290%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.48%)</title><rect x="55.2722%" y="1269" width="0.4824%" height="15" fill="rgb(238,20,8)" fg:x="802" fg:w="7"/><text x="55.5222%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.48%)</title><rect x="55.2722%" y="1253" width="0.4824%" height="15" fill="rgb(218,80,54)" fg:x="802" fg:w="7"/><text x="55.5222%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.48%)</title><rect x="55.2722%" y="1237" width="0.4824%" height="15" fill="rgb(240,144,17)" fg:x="802" fg:w="7"/><text x="55.5222%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.48%)</title><rect x="55.2722%" y="1221" width="0.4824%" height="15" fill="rgb(245,27,50)" fg:x="802" fg:w="7"/><text x="55.5222%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.28%)</title><rect x="55.4790%" y="1205" width="0.2757%" height="15" fill="rgb(251,51,7)" fg:x="805" fg:w="4"/><text x="55.7290%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.28%)</title><rect x="55.4790%" y="1189" width="0.2757%" height="15" fill="rgb(245,217,29)" fg:x="805" fg:w="4"/><text x="55.7290%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.28%)</title><rect x="55.4790%" y="1173" width="0.2757%" height="15" fill="rgb(221,176,29)" fg:x="805" fg:w="4"/><text x="55.7290%" y="1183.50"></text></g><g><title>malloc (3 samples, 0.21%)</title><rect x="55.5479%" y="1157" width="0.2068%" height="15" fill="rgb(212,180,24)" fg:x="806" fg:w="3"/><text x="55.7979%" y="1167.50"></text></g><g><title>std::sys::unix::fs::cstr (28 samples, 1.93%)</title><rect x="54.6520%" y="1333" width="1.9297%" height="15" fill="rgb(254,24,2)" fg:x="793" fg:w="28"/><text x="54.9020%" y="1343.50">s..</text></g><g><title>alloc::ffi::c_str::CString::new (25 samples, 1.72%)</title><rect x="54.8587%" y="1317" width="1.7229%" height="15" fill="rgb(230,100,2)" fg:x="796" fg:w="25"/><text x="55.1087%" y="1327.50"></text></g><g><title>&lt;&amp;[u8] as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (25 samples, 1.72%)</title><rect x="54.8587%" y="1301" width="1.7229%" height="15" fill="rgb(219,142,25)" fg:x="796" fg:w="25"/><text x="55.1087%" y="1311.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (25 samples, 1.72%)</title><rect x="54.8587%" y="1285" width="1.7229%" height="15" fill="rgb(240,73,43)" fg:x="796" fg:w="25"/><text x="55.1087%" y="1295.50"></text></g><g><title>core::slice::memchr::memchr (12 samples, 0.83%)</title><rect x="55.7547%" y="1269" width="0.8270%" height="15" fill="rgb(214,114,15)" fg:x="809" fg:w="12"/><text x="56.0047%" y="1279.50"></text></g><g><title>core::slice::memchr::memchr_aligned (11 samples, 0.76%)</title><rect x="55.8236%" y="1253" width="0.7581%" height="15" fill="rgb(207,130,4)" fg:x="810" fg:w="11"/><text x="56.0736%" y="1263.50"></text></g><g><title>core::slice::memchr::memchr_naive (5 samples, 0.34%)</title><rect x="56.2371%" y="1237" width="0.3446%" height="15" fill="rgb(221,25,40)" fg:x="816" fg:w="5"/><text x="56.4871%" y="1247.50"></text></g><g><title>core::mem::zeroed (1 samples, 0.07%)</title><rect x="56.8573%" y="1317" width="0.0689%" height="15" fill="rgb(241,184,7)" fg:x="825" fg:w="1"/><text x="57.1073%" y="1327.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.07%)</title><rect x="56.8573%" y="1301" width="0.0689%" height="15" fill="rgb(235,159,4)" fg:x="825" fg:w="1"/><text x="57.1073%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (1 samples, 0.07%)</title><rect x="56.9263%" y="1317" width="0.0689%" height="15" fill="rgb(214,87,48)" fg:x="826" fg:w="1"/><text x="57.1763%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="56.9263%" y="1301" width="0.0689%" height="15" fill="rgb(246,198,24)" fg:x="826" fg:w="1"/><text x="57.1763%" y="1311.50"></text></g><g><title>libc::unix::linux_like::linux::makedev (6 samples, 0.41%)</title><rect x="56.9952%" y="1317" width="0.4135%" height="15" fill="rgb(209,66,40)" fg:x="827" fg:w="6"/><text x="57.2452%" y="1327.50"></text></g><g><title>std::sys::unix::cvt (2 samples, 0.14%)</title><rect x="57.4087%" y="1317" width="0.1378%" height="15" fill="rgb(233,147,39)" fg:x="833" fg:w="2"/><text x="57.6587%" y="1327.50"></text></g><g><title>&lt;i32 as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.07%)</title><rect x="57.4776%" y="1301" width="0.0689%" height="15" fill="rgb(231,145,52)" fg:x="834" fg:w="1"/><text x="57.7276%" y="1311.50"></text></g><g><title>std::path::Path::is_dir (66 samples, 4.55%)</title><rect x="53.7560%" y="1381" width="4.5486%" height="15" fill="rgb(206,20,26)" fg:x="780" fg:w="66"/><text x="54.0060%" y="1391.50">std::..</text></g><g><title>std::fs::metadata (66 samples, 4.55%)</title><rect x="53.7560%" y="1365" width="4.5486%" height="15" fill="rgb(238,220,4)" fg:x="780" fg:w="66"/><text x="54.0060%" y="1375.50">std::..</text></g><g><title>std::sys::unix::fs::stat (65 samples, 4.48%)</title><rect x="53.8249%" y="1349" width="4.4797%" height="15" fill="rgb(252,195,42)" fg:x="781" fg:w="65"/><text x="54.0749%" y="1359.50">std::..</text></g><g><title>std::sys::unix::fs::try_statx (25 samples, 1.72%)</title><rect x="56.5817%" y="1333" width="1.7229%" height="15" fill="rgb(209,10,6)" fg:x="821" fg:w="25"/><text x="56.8317%" y="1343.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (11 samples, 0.76%)</title><rect x="57.5465%" y="1317" width="0.7581%" height="15" fill="rgb(229,3,52)" fg:x="835" fg:w="11"/><text x="57.7965%" y="1327.50"></text></g><g><title>statx (11 samples, 0.76%)</title><rect x="57.5465%" y="1301" width="0.7581%" height="15" fill="rgb(253,49,37)" fg:x="835" fg:w="11"/><text x="57.7965%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.21%)</title><rect x="58.3735%" y="1189" width="0.2068%" height="15" fill="rgb(240,103,49)" fg:x="847" fg:w="3"/><text x="58.6235%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.21%)</title><rect x="58.3735%" y="1173" width="0.2068%" height="15" fill="rgb(250,182,30)" fg:x="847" fg:w="3"/><text x="58.6235%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.21%)</title><rect x="58.3735%" y="1157" width="0.2068%" height="15" fill="rgb(248,8,30)" fg:x="847" fg:w="3"/><text x="58.6235%" y="1167.50"></text></g><g><title>malloc (3 samples, 0.21%)</title><rect x="58.3735%" y="1141" width="0.2068%" height="15" fill="rgb(237,120,30)" fg:x="847" fg:w="3"/><text x="58.6235%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.28%)</title><rect x="58.3735%" y="1237" width="0.2757%" height="15" fill="rgb(221,146,34)" fg:x="847" fg:w="4"/><text x="58.6235%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.28%)</title><rect x="58.3735%" y="1221" width="0.2757%" height="15" fill="rgb(242,55,13)" fg:x="847" fg:w="4"/><text x="58.6235%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.28%)</title><rect x="58.3735%" y="1205" width="0.2757%" height="15" fill="rgb(242,112,31)" fg:x="847" fg:w="4"/><text x="58.6235%" y="1215.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.07%)</title><rect x="58.5803%" y="1189" width="0.0689%" height="15" fill="rgb(249,192,27)" fg:x="850" fg:w="1"/><text x="58.8303%" y="1199.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.07%)</title><rect x="58.5803%" y="1173" width="0.0689%" height="15" fill="rgb(208,204,44)" fg:x="850" fg:w="1"/><text x="58.8303%" y="1183.50"></text></g><g><title>std::path::Path::to_path_buf (6 samples, 0.41%)</title><rect x="58.3735%" y="1349" width="0.4135%" height="15" fill="rgb(208,93,54)" fg:x="847" fg:w="6"/><text x="58.6235%" y="1359.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (6 samples, 0.41%)</title><rect x="58.3735%" y="1333" width="0.4135%" height="15" fill="rgb(242,1,31)" fg:x="847" fg:w="6"/><text x="58.6235%" y="1343.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (6 samples, 0.41%)</title><rect x="58.3735%" y="1317" width="0.4135%" height="15" fill="rgb(241,83,25)" fg:x="847" fg:w="6"/><text x="58.6235%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6 samples, 0.41%)</title><rect x="58.3735%" y="1301" width="0.4135%" height="15" fill="rgb(205,169,50)" fg:x="847" fg:w="6"/><text x="58.6235%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.41%)</title><rect x="58.3735%" y="1285" width="0.4135%" height="15" fill="rgb(239,186,37)" fg:x="847" fg:w="6"/><text x="58.6235%" y="1295.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.41%)</title><rect x="58.3735%" y="1269" width="0.4135%" height="15" fill="rgb(205,221,10)" fg:x="847" fg:w="6"/><text x="58.6235%" y="1279.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.41%)</title><rect x="58.3735%" y="1253" width="0.4135%" height="15" fill="rgb(218,196,15)" fg:x="847" fg:w="6"/><text x="58.6235%" y="1263.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.14%)</title><rect x="58.6492%" y="1237" width="0.1378%" height="15" fill="rgb(218,196,35)" fg:x="851" fg:w="2"/><text x="58.8992%" y="1247.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.14%)</title><rect x="58.6492%" y="1221" width="0.1378%" height="15" fill="rgb(233,63,24)" fg:x="851" fg:w="2"/><text x="58.8992%" y="1231.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="58.6492%" y="1205" width="0.1378%" height="15" fill="rgb(225,8,4)" fg:x="851" fg:w="2"/><text x="58.8992%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.07%)</title><rect x="58.7870%" y="1205" width="0.0689%" height="15" fill="rgb(234,105,35)" fg:x="853" fg:w="1"/><text x="59.0370%" y="1215.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.07%)</title><rect x="58.7870%" y="1189" width="0.0689%" height="15" fill="rgb(236,21,32)" fg:x="853" fg:w="1"/><text x="59.0370%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.07%)</title><rect x="58.8560%" y="1173" width="0.0689%" height="15" fill="rgb(228,109,6)" fg:x="854" fg:w="1"/><text x="59.1060%" y="1183.50"></text></g><g><title>__rdl_realloc (1 samples, 0.07%)</title><rect x="58.9938%" y="1109" width="0.0689%" height="15" fill="rgb(229,215,31)" fg:x="856" fg:w="1"/><text x="59.2438%" y="1119.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.07%)</title><rect x="58.9938%" y="1093" width="0.0689%" height="15" fill="rgb(221,52,54)" fg:x="856" fg:w="1"/><text x="59.2438%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (37 samples, 2.55%)</title><rect x="58.7870%" y="1237" width="2.5500%" height="15" fill="rgb(252,129,43)" fg:x="853" fg:w="37"/><text x="59.0370%" y="1247.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (37 samples, 2.55%)</title><rect x="58.7870%" y="1221" width="2.5500%" height="15" fill="rgb(248,183,27)" fg:x="853" fg:w="37"/><text x="59.0370%" y="1231.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (36 samples, 2.48%)</title><rect x="58.8560%" y="1205" width="2.4810%" height="15" fill="rgb(250,0,22)" fg:x="854" fg:w="36"/><text x="59.1060%" y="1215.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (36 samples, 2.48%)</title><rect x="58.8560%" y="1189" width="2.4810%" height="15" fill="rgb(213,166,10)" fg:x="854" fg:w="36"/><text x="59.1060%" y="1199.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (35 samples, 2.41%)</title><rect x="58.9249%" y="1173" width="2.4121%" height="15" fill="rgb(207,163,36)" fg:x="855" fg:w="35"/><text x="59.1749%" y="1183.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (35 samples, 2.41%)</title><rect x="58.9249%" y="1157" width="2.4121%" height="15" fill="rgb(208,122,22)" fg:x="855" fg:w="35"/><text x="59.1749%" y="1167.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (35 samples, 2.41%)</title><rect x="58.9249%" y="1141" width="2.4121%" height="15" fill="rgb(207,104,49)" fg:x="855" fg:w="35"/><text x="59.1749%" y="1151.50">al..</text></g><g><title>alloc::alloc::realloc (35 samples, 2.41%)</title><rect x="58.9249%" y="1125" width="2.4121%" height="15" fill="rgb(248,211,50)" fg:x="855" fg:w="35"/><text x="59.1749%" y="1135.50">al..</text></g><g><title>realloc (33 samples, 2.27%)</title><rect x="59.0627%" y="1109" width="2.2743%" height="15" fill="rgb(217,13,45)" fg:x="857" fg:w="33"/><text x="59.3127%" y="1119.50">r..</text></g><g><title>[libc.so.6] (22 samples, 1.52%)</title><rect x="59.8208%" y="1093" width="1.5162%" height="15" fill="rgb(211,216,49)" fg:x="868" fg:w="22"/><text x="60.0708%" y="1103.50"></text></g><g><title>[libc.so.6] (18 samples, 1.24%)</title><rect x="60.0965%" y="1077" width="1.2405%" height="15" fill="rgb(221,58,53)" fg:x="872" fg:w="18"/><text x="60.3465%" y="1087.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="61.1992%" y="1061" width="0.1378%" height="15" fill="rgb(220,112,41)" fg:x="888" fg:w="2"/><text x="61.4492%" y="1071.50"></text></g><g><title>std::path::Path::join (45 samples, 3.10%)</title><rect x="58.3046%" y="1381" width="3.1013%" height="15" fill="rgb(236,38,28)" fg:x="846" fg:w="45"/><text x="58.5546%" y="1391.50">std..</text></g><g><title>std::path::Path::_join (45 samples, 3.10%)</title><rect x="58.3046%" y="1365" width="3.1013%" height="15" fill="rgb(227,195,22)" fg:x="846" fg:w="45"/><text x="58.5546%" y="1375.50">std..</text></g><g><title>std::path::PathBuf::push (38 samples, 2.62%)</title><rect x="58.7870%" y="1349" width="2.6189%" height="15" fill="rgb(214,55,33)" fg:x="853" fg:w="38"/><text x="59.0370%" y="1359.50">st..</text></g><g><title>std::path::PathBuf::_push (38 samples, 2.62%)</title><rect x="58.7870%" y="1333" width="2.6189%" height="15" fill="rgb(248,80,13)" fg:x="853" fg:w="38"/><text x="59.0370%" y="1343.50">st..</text></g><g><title>std::ffi::os_str::OsString::push (38 samples, 2.62%)</title><rect x="58.7870%" y="1317" width="2.6189%" height="15" fill="rgb(238,52,6)" fg:x="853" fg:w="38"/><text x="59.0370%" y="1327.50">st..</text></g><g><title>std::sys::unix::os_str::Buf::push_slice (38 samples, 2.62%)</title><rect x="58.7870%" y="1301" width="2.6189%" height="15" fill="rgb(224,198,47)" fg:x="853" fg:w="38"/><text x="59.0370%" y="1311.50">st..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (38 samples, 2.62%)</title><rect x="58.7870%" y="1285" width="2.6189%" height="15" fill="rgb(233,171,20)" fg:x="853" fg:w="38"/><text x="59.0370%" y="1295.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (38 samples, 2.62%)</title><rect x="58.7870%" y="1269" width="2.6189%" height="15" fill="rgb(241,30,25)" fg:x="853" fg:w="38"/><text x="59.0370%" y="1279.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (38 samples, 2.62%)</title><rect x="58.7870%" y="1253" width="2.6189%" height="15" fill="rgb(207,171,38)" fg:x="853" fg:w="38"/><text x="59.0370%" y="1263.50">al..</text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="61.3370%" y="1237" width="0.0689%" height="15" fill="rgb(234,70,1)" fg:x="890" fg:w="1"/><text x="61.5870%" y="1247.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="61.3370%" y="1221" width="0.0689%" height="15" fill="rgb(232,178,18)" fg:x="890" fg:w="1"/><text x="61.5870%" y="1231.50"></text></g><g><title>&lt;std::path::PathBuf as core::ops::deref::Deref&gt;::deref (3 samples, 0.21%)</title><rect x="61.6127%" y="1365" width="0.2068%" height="15" fill="rgb(241,78,40)" fg:x="894" fg:w="3"/><text x="61.8627%" y="1375.50"></text></g><g><title>std::path::Path::new (3 samples, 0.21%)</title><rect x="61.6127%" y="1349" width="0.2068%" height="15" fill="rgb(222,35,25)" fg:x="894" fg:w="3"/><text x="61.8627%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;std::path::PathBuf&gt;&gt; (2 samples, 0.14%)</title><rect x="61.8194%" y="1365" width="0.1378%" height="15" fill="rgb(207,92,16)" fg:x="897" fg:w="2"/><text x="62.0694%" y="1375.50"></text></g><g><title>__rust_dealloc (1 samples, 0.07%)</title><rect x="61.9573%" y="1237" width="0.0689%" height="15" fill="rgb(216,59,51)" fg:x="899" fg:w="1"/><text x="62.2073%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.55%)</title><rect x="61.9573%" y="1269" width="0.5513%" height="15" fill="rgb(213,80,28)" fg:x="899" fg:w="8"/><text x="62.2073%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.55%)</title><rect x="61.9573%" y="1253" width="0.5513%" height="15" fill="rgb(220,93,7)" fg:x="899" fg:w="8"/><text x="62.2073%" y="1263.50"></text></g><g><title>cfree (7 samples, 0.48%)</title><rect x="62.0262%" y="1237" width="0.4824%" height="15" fill="rgb(225,24,44)" fg:x="900" fg:w="7"/><text x="62.2762%" y="1247.50"></text></g><g><title>[libc.so.6] (3 samples, 0.21%)</title><rect x="62.3019%" y="1221" width="0.2068%" height="15" fill="rgb(243,74,40)" fg:x="904" fg:w="3"/><text x="62.5519%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (10 samples, 0.69%)</title><rect x="61.9573%" y="1365" width="0.6892%" height="15" fill="rgb(228,39,7)" fg:x="899" fg:w="10"/><text x="62.2073%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (10 samples, 0.69%)</title><rect x="61.9573%" y="1349" width="0.6892%" height="15" fill="rgb(227,79,8)" fg:x="899" fg:w="10"/><text x="62.2073%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::os_str::Buf&gt; (10 samples, 0.69%)</title><rect x="61.9573%" y="1333" width="0.6892%" height="15" fill="rgb(236,58,11)" fg:x="899" fg:w="10"/><text x="62.2073%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (10 samples, 0.69%)</title><rect x="61.9573%" y="1317" width="0.6892%" height="15" fill="rgb(249,63,35)" fg:x="899" fg:w="10"/><text x="62.2073%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (10 samples, 0.69%)</title><rect x="61.9573%" y="1301" width="0.6892%" height="15" fill="rgb(252,114,16)" fg:x="899" fg:w="10"/><text x="62.2073%" y="1311.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.69%)</title><rect x="61.9573%" y="1285" width="0.6892%" height="15" fill="rgb(254,151,24)" fg:x="899" fg:w="10"/><text x="62.2073%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.14%)</title><rect x="62.5086%" y="1269" width="0.1378%" height="15" fill="rgb(253,54,39)" fg:x="907" fg:w="2"/><text x="62.7586%" y="1279.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.07%)</title><rect x="62.5775%" y="1253" width="0.0689%" height="15" fill="rgb(243,25,45)" fg:x="908" fg:w="1"/><text x="62.8275%" y="1263.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.07%)</title><rect x="62.5775%" y="1237" width="0.0689%" height="15" fill="rgb(234,134,9)" fg:x="908" fg:w="1"/><text x="62.8275%" y="1247.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.07%)</title><rect x="62.6465%" y="1365" width="0.0689%" height="15" fill="rgb(227,166,31)" fg:x="909" fg:w="1"/><text x="62.8965%" y="1375.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.07%)</title><rect x="62.6465%" y="1349" width="0.0689%" height="15" fill="rgb(245,143,41)" fg:x="909" fg:w="1"/><text x="62.8965%" y="1359.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.07%)</title><rect x="62.6465%" y="1333" width="0.0689%" height="15" fill="rgb(238,181,32)" fg:x="909" fg:w="1"/><text x="62.8965%" y="1343.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="62.6465%" y="1317" width="0.0689%" height="15" fill="rgb(224,113,18)" fg:x="909" fg:w="1"/><text x="62.8965%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="62.7154%" y="1221" width="0.1378%" height="15" fill="rgb(240,229,28)" fg:x="910" fg:w="2"/><text x="62.9654%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="62.7154%" y="1205" width="0.1378%" height="15" fill="rgb(250,185,3)" fg:x="910" fg:w="2"/><text x="62.9654%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="62.7154%" y="1189" width="0.1378%" height="15" fill="rgb(212,59,25)" fg:x="910" fg:w="2"/><text x="62.9654%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.14%)</title><rect x="62.7154%" y="1173" width="0.1378%" height="15" fill="rgb(221,87,20)" fg:x="910" fg:w="2"/><text x="62.9654%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="62.7154%" y="1157" width="0.1378%" height="15" fill="rgb(213,74,28)" fg:x="910" fg:w="2"/><text x="62.9654%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="62.7154%" y="1141" width="0.1378%" height="15" fill="rgb(224,132,34)" fg:x="910" fg:w="2"/><text x="62.9654%" y="1151.50"></text></g><g><title>malloc (2 samples, 0.14%)</title><rect x="62.7154%" y="1125" width="0.1378%" height="15" fill="rgb(222,101,24)" fg:x="910" fg:w="2"/><text x="62.9654%" y="1135.50"></text></g><g><title>std::path::Path::to_path_buf (3 samples, 0.21%)</title><rect x="62.7154%" y="1333" width="0.2068%" height="15" fill="rgb(254,142,4)" fg:x="910" fg:w="3"/><text x="62.9654%" y="1343.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (3 samples, 0.21%)</title><rect x="62.7154%" y="1317" width="0.2068%" height="15" fill="rgb(230,229,49)" fg:x="910" fg:w="3"/><text x="62.9654%" y="1327.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (3 samples, 0.21%)</title><rect x="62.7154%" y="1301" width="0.2068%" height="15" fill="rgb(238,70,47)" fg:x="910" fg:w="3"/><text x="62.9654%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.21%)</title><rect x="62.7154%" y="1285" width="0.2068%" height="15" fill="rgb(231,160,17)" fg:x="910" fg:w="3"/><text x="62.9654%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.21%)</title><rect x="62.7154%" y="1269" width="0.2068%" height="15" fill="rgb(218,68,53)" fg:x="910" fg:w="3"/><text x="62.9654%" y="1279.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.21%)</title><rect x="62.7154%" y="1253" width="0.2068%" height="15" fill="rgb(236,111,10)" fg:x="910" fg:w="3"/><text x="62.9654%" y="1263.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.21%)</title><rect x="62.7154%" y="1237" width="0.2068%" height="15" fill="rgb(224,34,41)" fg:x="910" fg:w="3"/><text x="62.9654%" y="1247.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="62.8532%" y="1221" width="0.0689%" height="15" fill="rgb(241,118,19)" fg:x="912" fg:w="1"/><text x="63.1032%" y="1231.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="62.8532%" y="1205" width="0.0689%" height="15" fill="rgb(238,129,25)" fg:x="912" fg:w="1"/><text x="63.1032%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="62.8532%" y="1189" width="0.0689%" height="15" fill="rgb(238,22,31)" fg:x="912" fg:w="1"/><text x="63.1032%" y="1199.50"></text></g><g><title>std::path::Path::join (24 samples, 1.65%)</title><rect x="62.7154%" y="1365" width="1.6540%" height="15" fill="rgb(222,174,48)" fg:x="910" fg:w="24"/><text x="62.9654%" y="1375.50"></text></g><g><title>std::path::Path::_join (24 samples, 1.65%)</title><rect x="62.7154%" y="1349" width="1.6540%" height="15" fill="rgb(206,152,40)" fg:x="910" fg:w="24"/><text x="62.9654%" y="1359.50"></text></g><g><title>std::path::PathBuf::push (21 samples, 1.45%)</title><rect x="62.9221%" y="1333" width="1.4473%" height="15" fill="rgb(218,99,54)" fg:x="913" fg:w="21"/><text x="63.1721%" y="1343.50"></text></g><g><title>std::path::PathBuf::_push (21 samples, 1.45%)</title><rect x="62.9221%" y="1317" width="1.4473%" height="15" fill="rgb(220,174,26)" fg:x="913" fg:w="21"/><text x="63.1721%" y="1327.50"></text></g><g><title>std::ffi::os_str::OsString::push (21 samples, 1.45%)</title><rect x="62.9221%" y="1301" width="1.4473%" height="15" fill="rgb(245,116,9)" fg:x="913" fg:w="21"/><text x="63.1721%" y="1311.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (21 samples, 1.45%)</title><rect x="62.9221%" y="1285" width="1.4473%" height="15" fill="rgb(209,72,35)" fg:x="913" fg:w="21"/><text x="63.1721%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (21 samples, 1.45%)</title><rect x="62.9221%" y="1269" width="1.4473%" height="15" fill="rgb(226,126,21)" fg:x="913" fg:w="21"/><text x="63.1721%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 1.45%)</title><rect x="62.9221%" y="1253" width="1.4473%" height="15" fill="rgb(227,192,1)" fg:x="913" fg:w="21"/><text x="63.1721%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 1.45%)</title><rect x="62.9221%" y="1237" width="1.4473%" height="15" fill="rgb(237,180,29)" fg:x="913" fg:w="21"/><text x="63.1721%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (21 samples, 1.45%)</title><rect x="62.9221%" y="1221" width="1.4473%" height="15" fill="rgb(230,197,35)" fg:x="913" fg:w="21"/><text x="63.1721%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 1.45%)</title><rect x="62.9221%" y="1205" width="1.4473%" height="15" fill="rgb(246,193,31)" fg:x="913" fg:w="21"/><text x="63.1721%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 1.38%)</title><rect x="62.9910%" y="1189" width="1.3784%" height="15" fill="rgb(241,36,4)" fg:x="914" fg:w="20"/><text x="63.2410%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 1.38%)</title><rect x="62.9910%" y="1173" width="1.3784%" height="15" fill="rgb(241,130,17)" fg:x="914" fg:w="20"/><text x="63.2410%" y="1183.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 1.38%)</title><rect x="62.9910%" y="1157" width="1.3784%" height="15" fill="rgb(206,137,32)" fg:x="914" fg:w="20"/><text x="63.2410%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (20 samples, 1.38%)</title><rect x="62.9910%" y="1141" width="1.3784%" height="15" fill="rgb(237,228,51)" fg:x="914" fg:w="20"/><text x="63.2410%" y="1151.50"></text></g><g><title>alloc::alloc::Global::grow_impl (20 samples, 1.38%)</title><rect x="62.9910%" y="1125" width="1.3784%" height="15" fill="rgb(243,6,42)" fg:x="914" fg:w="20"/><text x="63.2410%" y="1135.50"></text></g><g><title>alloc::alloc::realloc (20 samples, 1.38%)</title><rect x="62.9910%" y="1109" width="1.3784%" height="15" fill="rgb(251,74,28)" fg:x="914" fg:w="20"/><text x="63.2410%" y="1119.50"></text></g><g><title>realloc (20 samples, 1.38%)</title><rect x="62.9910%" y="1093" width="1.3784%" height="15" fill="rgb(218,20,49)" fg:x="914" fg:w="20"/><text x="63.2410%" y="1103.50"></text></g><g><title>[libc.so.6] (12 samples, 0.83%)</title><rect x="63.5424%" y="1077" width="0.8270%" height="15" fill="rgb(238,28,14)" fg:x="922" fg:w="12"/><text x="63.7924%" y="1087.50"></text></g><g><title>[libc.so.6] (12 samples, 0.83%)</title><rect x="63.5424%" y="1061" width="0.8270%" height="15" fill="rgb(229,40,46)" fg:x="922" fg:w="12"/><text x="63.7924%" y="1071.50"></text></g><g><title>[libc.so.6] (3 samples, 0.21%)</title><rect x="64.1626%" y="1045" width="0.2068%" height="15" fill="rgb(244,195,20)" fg:x="931" fg:w="3"/><text x="64.4126%" y="1055.50"></text></g><g><title>__rust_realloc (1 samples, 0.07%)</title><rect x="64.4383%" y="1189" width="0.0689%" height="15" fill="rgb(253,56,35)" fg:x="935" fg:w="1"/><text x="64.6883%" y="1199.50"></text></g><g><title>alloc::string::String::reserve (8 samples, 0.55%)</title><rect x="64.4383%" y="1333" width="0.5513%" height="15" fill="rgb(210,149,44)" fg:x="935" fg:w="8"/><text x="64.6883%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.55%)</title><rect x="64.4383%" y="1317" width="0.5513%" height="15" fill="rgb(240,135,12)" fg:x="935" fg:w="8"/><text x="64.6883%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.55%)</title><rect x="64.4383%" y="1301" width="0.5513%" height="15" fill="rgb(251,24,50)" fg:x="935" fg:w="8"/><text x="64.6883%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.55%)</title><rect x="64.4383%" y="1285" width="0.5513%" height="15" fill="rgb(243,200,47)" fg:x="935" fg:w="8"/><text x="64.6883%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.55%)</title><rect x="64.4383%" y="1269" width="0.5513%" height="15" fill="rgb(224,166,26)" fg:x="935" fg:w="8"/><text x="64.6883%" y="1279.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.55%)</title><rect x="64.4383%" y="1253" width="0.5513%" height="15" fill="rgb(233,0,47)" fg:x="935" fg:w="8"/><text x="64.6883%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.55%)</title><rect x="64.4383%" y="1237" width="0.5513%" height="15" fill="rgb(253,80,5)" fg:x="935" fg:w="8"/><text x="64.6883%" y="1247.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.55%)</title><rect x="64.4383%" y="1221" width="0.5513%" height="15" fill="rgb(214,133,25)" fg:x="935" fg:w="8"/><text x="64.6883%" y="1231.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.55%)</title><rect x="64.4383%" y="1205" width="0.5513%" height="15" fill="rgb(209,27,14)" fg:x="935" fg:w="8"/><text x="64.6883%" y="1215.50"></text></g><g><title>realloc (7 samples, 0.48%)</title><rect x="64.5072%" y="1189" width="0.4824%" height="15" fill="rgb(219,102,51)" fg:x="936" fg:w="7"/><text x="64.7572%" y="1199.50"></text></g><g><title>[libc.so.6] (5 samples, 0.34%)</title><rect x="64.6451%" y="1173" width="0.3446%" height="15" fill="rgb(237,18,16)" fg:x="938" fg:w="5"/><text x="64.8951%" y="1183.50"></text></g><g><title>[libc.so.6] (5 samples, 0.34%)</title><rect x="64.6451%" y="1157" width="0.3446%" height="15" fill="rgb(241,85,17)" fg:x="938" fg:w="5"/><text x="64.8951%" y="1167.50"></text></g><g><title>[libc.so.6] (4 samples, 0.28%)</title><rect x="64.7140%" y="1141" width="0.2757%" height="15" fill="rgb(236,90,42)" fg:x="939" fg:w="4"/><text x="64.9640%" y="1151.50"></text></g><g><title>std::fs::buffer_capacity_required (2 samples, 0.14%)</title><rect x="64.9897%" y="1333" width="0.1378%" height="15" fill="rgb(249,57,21)" fg:x="943" fg:w="2"/><text x="65.2397%" y="1343.50"></text></g><g><title>std::fs::File::metadata (2 samples, 0.14%)</title><rect x="64.9897%" y="1317" width="0.1378%" height="15" fill="rgb(243,12,36)" fg:x="943" fg:w="2"/><text x="65.2397%" y="1327.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (2 samples, 0.14%)</title><rect x="64.9897%" y="1301" width="0.1378%" height="15" fill="rgb(253,128,47)" fg:x="943" fg:w="2"/><text x="65.2397%" y="1311.50"></text></g><g><title>std::sys::unix::fs::try_statx (2 samples, 0.14%)</title><rect x="64.9897%" y="1285" width="0.1378%" height="15" fill="rgb(207,33,20)" fg:x="943" fg:w="2"/><text x="65.2397%" y="1295.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (2 samples, 0.14%)</title><rect x="64.9897%" y="1269" width="0.1378%" height="15" fill="rgb(233,215,35)" fg:x="943" fg:w="2"/><text x="65.2397%" y="1279.50"></text></g><g><title>statx (2 samples, 0.14%)</title><rect x="64.9897%" y="1253" width="0.1378%" height="15" fill="rgb(249,188,52)" fg:x="943" fg:w="2"/><text x="65.2397%" y="1263.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (13 samples, 0.90%)</title><rect x="64.4383%" y="1349" width="0.8959%" height="15" fill="rgb(225,12,32)" fg:x="935" fg:w="13"/><text x="64.6883%" y="1359.50"></text></g><g><title>std::io::default_read_to_string (3 samples, 0.21%)</title><rect x="65.1275%" y="1333" width="0.2068%" height="15" fill="rgb(247,98,14)" fg:x="945" fg:w="3"/><text x="65.3775%" y="1343.50"></text></g><g><title>std::io::append_to_string (3 samples, 0.21%)</title><rect x="65.1275%" y="1317" width="0.2068%" height="15" fill="rgb(247,219,48)" fg:x="945" fg:w="3"/><text x="65.3775%" y="1327.50"></text></g><g><title>std::io::default_read_to_string::{{closure}} (3 samples, 0.21%)</title><rect x="65.1275%" y="1301" width="0.2068%" height="15" fill="rgb(253,60,48)" fg:x="945" fg:w="3"/><text x="65.3775%" y="1311.50"></text></g><g><title>std::io::default_read_to_end (3 samples, 0.21%)</title><rect x="65.1275%" y="1285" width="0.2068%" height="15" fill="rgb(245,15,52)" fg:x="945" fg:w="3"/><text x="65.3775%" y="1295.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (3 samples, 0.21%)</title><rect x="65.1275%" y="1269" width="0.2068%" height="15" fill="rgb(220,133,28)" fg:x="945" fg:w="3"/><text x="65.3775%" y="1279.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (3 samples, 0.21%)</title><rect x="65.1275%" y="1253" width="0.2068%" height="15" fill="rgb(217,180,4)" fg:x="945" fg:w="3"/><text x="65.3775%" y="1263.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (3 samples, 0.21%)</title><rect x="65.1275%" y="1237" width="0.2068%" height="15" fill="rgb(251,24,1)" fg:x="945" fg:w="3"/><text x="65.3775%" y="1247.50"></text></g><g><title>read (3 samples, 0.21%)</title><rect x="65.1275%" y="1221" width="0.2068%" height="15" fill="rgb(212,185,49)" fg:x="945" fg:w="3"/><text x="65.3775%" y="1231.50"></text></g><g><title>[libc.so.6] (3 samples, 0.21%)</title><rect x="65.1275%" y="1205" width="0.2068%" height="15" fill="rgb(215,175,22)" fg:x="945" fg:w="3"/><text x="65.3775%" y="1215.50"></text></g><g><title>alloc::string::String::truncate (1 samples, 0.07%)</title><rect x="65.3343%" y="1349" width="0.0689%" height="15" fill="rgb(250,205,14)" fg:x="948" fg:w="1"/><text x="65.5843%" y="1359.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.07%)</title><rect x="65.3343%" y="1333" width="0.0689%" height="15" fill="rgb(225,211,22)" fg:x="948" fg:w="1"/><text x="65.5843%" y="1343.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.07%)</title><rect x="65.3343%" y="1317" width="0.0689%" height="15" fill="rgb(251,179,42)" fg:x="948" fg:w="1"/><text x="65.5843%" y="1327.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.07%)</title><rect x="65.3343%" y="1301" width="0.0689%" height="15" fill="rgb(208,216,51)" fg:x="948" fg:w="1"/><text x="65.5843%" y="1311.50"></text></g><g><title>alloc::string::String::with_capacity (2 samples, 0.14%)</title><rect x="65.4032%" y="1349" width="0.1378%" height="15" fill="rgb(235,36,11)" fg:x="949" fg:w="2"/><text x="65.6532%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="65.4721%" y="1333" width="0.0689%" height="15" fill="rgb(213,189,28)" fg:x="950" fg:w="1"/><text x="65.7221%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="65.4721%" y="1317" width="0.0689%" height="15" fill="rgb(227,203,42)" fg:x="950" fg:w="1"/><text x="65.7221%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="65.4721%" y="1301" width="0.0689%" height="15" fill="rgb(244,72,36)" fg:x="950" fg:w="1"/><text x="65.7221%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="65.4721%" y="1285" width="0.0689%" height="15" fill="rgb(213,53,17)" fg:x="950" fg:w="1"/><text x="65.7221%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="65.4721%" y="1269" width="0.0689%" height="15" fill="rgb(207,167,3)" fg:x="950" fg:w="1"/><text x="65.7221%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="65.4721%" y="1253" width="0.0689%" height="15" fill="rgb(216,98,30)" fg:x="950" fg:w="1"/><text x="65.7221%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="65.4721%" y="1237" width="0.0689%" height="15" fill="rgb(236,123,15)" fg:x="950" fg:w="1"/><text x="65.7221%" y="1247.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="65.4721%" y="1221" width="0.0689%" height="15" fill="rgb(248,81,50)" fg:x="950" fg:w="1"/><text x="65.7221%" y="1231.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end (1 samples, 0.07%)</title><rect x="65.5410%" y="1349" width="0.0689%" height="15" fill="rgb(214,120,4)" fg:x="951" fg:w="1"/><text x="65.7910%" y="1359.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end_matches (1 samples, 0.07%)</title><rect x="65.5410%" y="1333" width="0.0689%" height="15" fill="rgb(208,179,34)" fg:x="951" fg:w="1"/><text x="65.7910%" y="1343.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::ReverseSearcher&gt;::next_reject_back (1 samples, 0.07%)</title><rect x="65.5410%" y="1317" width="0.0689%" height="15" fill="rgb(227,140,7)" fg:x="951" fg:w="1"/><text x="65.7910%" y="1327.50"></text></g><g><title>core::str::pattern::ReverseSearcher::next_reject_back (1 samples, 0.07%)</title><rect x="65.5410%" y="1301" width="0.0689%" height="15" fill="rgb(214,22,6)" fg:x="951" fg:w="1"/><text x="65.7910%" y="1311.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::ReverseSearcher&gt;::next_back (1 samples, 0.07%)</title><rect x="65.5410%" y="1285" width="0.0689%" height="15" fill="rgb(207,137,27)" fg:x="951" fg:w="1"/><text x="65.7910%" y="1295.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.07%)</title><rect x="65.5410%" y="1269" width="0.0689%" height="15" fill="rgb(210,8,46)" fg:x="951" fg:w="1"/><text x="65.7910%" y="1279.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.07%)</title><rect x="65.5410%" y="1253" width="0.0689%" height="15" fill="rgb(240,16,54)" fg:x="951" fg:w="1"/><text x="65.7910%" y="1263.50"></text></g><g><title>core::str::validations::next_code_point_reverse (1 samples, 0.07%)</title><rect x="65.5410%" y="1237" width="0.0689%" height="15" fill="rgb(211,209,29)" fg:x="951" fg:w="1"/><text x="65.7910%" y="1247.50"></text></g><g><title>std::fs::OpenOptions::new (1 samples, 0.07%)</title><rect x="65.6099%" y="1333" width="0.0689%" height="15" fill="rgb(226,228,24)" fg:x="952" fg:w="1"/><text x="65.8599%" y="1343.50"></text></g><g><title>std::sys::unix::fs::OpenOptions::new (1 samples, 0.07%)</title><rect x="65.6099%" y="1317" width="0.0689%" height="15" fill="rgb(222,84,9)" fg:x="952" fg:w="1"/><text x="65.8599%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::ffi::c_str::CString&gt; (1 samples, 0.07%)</title><rect x="65.6788%" y="1285" width="0.0689%" height="15" fill="rgb(234,203,30)" fg:x="953" fg:w="1"/><text x="65.9288%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (1 samples, 0.07%)</title><rect x="65.6788%" y="1269" width="0.0689%" height="15" fill="rgb(238,109,14)" fg:x="953" fg:w="1"/><text x="65.9288%" y="1279.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.07%)</title><rect x="65.6788%" y="1253" width="0.0689%" height="15" fill="rgb(233,206,34)" fg:x="953" fg:w="1"/><text x="65.9288%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="65.6788%" y="1237" width="0.0689%" height="15" fill="rgb(220,167,47)" fg:x="953" fg:w="1"/><text x="65.9288%" y="1247.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="65.6788%" y="1221" width="0.0689%" height="15" fill="rgb(238,105,10)" fg:x="953" fg:w="1"/><text x="65.9288%" y="1231.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="65.6788%" y="1205" width="0.0689%" height="15" fill="rgb(213,227,17)" fg:x="953" fg:w="1"/><text x="65.9288%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="65.6788%" y="1189" width="0.0689%" height="15" fill="rgb(217,132,38)" fg:x="953" fg:w="1"/><text x="65.9288%" y="1199.50"></text></g><g><title>std::sys::unix::fs::File::open_c (4 samples, 0.28%)</title><rect x="65.7478%" y="1285" width="0.2757%" height="15" fill="rgb(242,146,4)" fg:x="954" fg:w="4"/><text x="65.9978%" y="1295.50"></text></g><g><title>std::sys::unix::cvt_r (4 samples, 0.28%)</title><rect x="65.7478%" y="1269" width="0.2757%" height="15" fill="rgb(212,61,9)" fg:x="954" fg:w="4"/><text x="65.9978%" y="1279.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (4 samples, 0.28%)</title><rect x="65.7478%" y="1253" width="0.2757%" height="15" fill="rgb(247,126,22)" fg:x="954" fg:w="4"/><text x="65.9978%" y="1263.50"></text></g><g><title>open64 (4 samples, 0.28%)</title><rect x="65.7478%" y="1237" width="0.2757%" height="15" fill="rgb(220,196,2)" fg:x="954" fg:w="4"/><text x="65.9978%" y="1247.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="65.9545%" y="1221" width="0.0689%" height="15" fill="rgb(208,46,4)" fg:x="957" fg:w="1"/><text x="66.2045%" y="1231.50"></text></g><g><title>sysinfo::linux::component::get_file_line (25 samples, 1.72%)</title><rect x="64.3694%" y="1365" width="1.7229%" height="15" fill="rgb(252,104,46)" fg:x="934" fg:w="25"/><text x="64.6194%" y="1375.50"></text></g><g><title>std::fs::File::open (7 samples, 0.48%)</title><rect x="65.6099%" y="1349" width="0.4824%" height="15" fill="rgb(237,152,48)" fg:x="952" fg:w="7"/><text x="65.8599%" y="1359.50"></text></g><g><title>std::fs::OpenOptions::open (6 samples, 0.41%)</title><rect x="65.6788%" y="1333" width="0.4135%" height="15" fill="rgb(221,59,37)" fg:x="953" fg:w="6"/><text x="65.9288%" y="1343.50"></text></g><g><title>std::fs::OpenOptions::_open (6 samples, 0.41%)</title><rect x="65.6788%" y="1317" width="0.4135%" height="15" fill="rgb(209,202,51)" fg:x="953" fg:w="6"/><text x="65.9288%" y="1327.50"></text></g><g><title>std::sys::unix::fs::File::open (6 samples, 0.41%)</title><rect x="65.6788%" y="1301" width="0.4135%" height="15" fill="rgb(228,81,30)" fg:x="953" fg:w="6"/><text x="65.9288%" y="1311.50"></text></g><g><title>std::sys::unix::fs::cstr (1 samples, 0.07%)</title><rect x="66.0234%" y="1285" width="0.0689%" height="15" fill="rgb(227,42,39)" fg:x="958" fg:w="1"/><text x="66.2734%" y="1295.50"></text></g><g><title>alloc::ffi::c_str::CString::new (1 samples, 0.07%)</title><rect x="66.0234%" y="1269" width="0.0689%" height="15" fill="rgb(221,26,2)" fg:x="958" fg:w="1"/><text x="66.2734%" y="1279.50"></text></g><g><title>&lt;&amp;[u8] as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.07%)</title><rect x="66.0234%" y="1253" width="0.0689%" height="15" fill="rgb(254,61,31)" fg:x="958" fg:w="1"/><text x="66.2734%" y="1263.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.07%)</title><rect x="66.0234%" y="1237" width="0.0689%" height="15" fill="rgb(222,173,38)" fg:x="958" fg:w="1"/><text x="66.2734%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="66.0234%" y="1221" width="0.0689%" height="15" fill="rgb(218,50,12)" fg:x="958" fg:w="1"/><text x="66.2734%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="66.0234%" y="1205" width="0.0689%" height="15" fill="rgb(223,88,40)" fg:x="958" fg:w="1"/><text x="66.2734%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="66.0234%" y="1189" width="0.0689%" height="15" fill="rgb(237,54,19)" fg:x="958" fg:w="1"/><text x="66.2734%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="66.0234%" y="1173" width="0.0689%" height="15" fill="rgb(251,129,25)" fg:x="958" fg:w="1"/><text x="66.2734%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="66.0234%" y="1157" width="0.0689%" height="15" fill="rgb(238,97,19)" fg:x="958" fg:w="1"/><text x="66.2734%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="66.0234%" y="1141" width="0.0689%" height="15" fill="rgb(240,169,18)" fg:x="958" fg:w="1"/><text x="66.2734%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="66.0234%" y="1125" width="0.0689%" height="15" fill="rgb(230,187,49)" fg:x="958" fg:w="1"/><text x="66.2734%" y="1135.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="66.0234%" y="1109" width="0.0689%" height="15" fill="rgb(209,44,26)" fg:x="958" fg:w="1"/><text x="66.2734%" y="1119.50"></text></g><g><title>sysinfo::linux::component::convert_temp_celsius (3 samples, 0.21%)</title><rect x="66.1613%" y="1349" width="0.2068%" height="15" fill="rgb(244,0,6)" fg:x="960" fg:w="3"/><text x="66.4113%" y="1359.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.21%)</title><rect x="66.1613%" y="1333" width="0.2068%" height="15" fill="rgb(248,18,21)" fg:x="960" fg:w="3"/><text x="66.4113%" y="1343.50"></text></g><g><title>sysinfo::linux::component::convert_temp_celsius::{{closure}} (2 samples, 0.14%)</title><rect x="66.2302%" y="1317" width="0.1378%" height="15" fill="rgb(245,180,19)" fg:x="961" fg:w="2"/><text x="66.4802%" y="1327.50"></text></g><g><title>read (46 samples, 3.17%)</title><rect x="66.5748%" y="1285" width="3.1702%" height="15" fill="rgb(252,118,36)" fg:x="966" fg:w="46"/><text x="66.8248%" y="1295.50">read</text></g><g><title>[libc.so.6] (12 samples, 0.83%)</title><rect x="68.9180%" y="1269" width="0.8270%" height="15" fill="rgb(210,224,19)" fg:x="1000" fg:w="12"/><text x="69.1680%" y="1279.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (51 samples, 3.51%)</title><rect x="66.5059%" y="1333" width="3.5148%" height="15" fill="rgb(218,30,24)" fg:x="965" fg:w="51"/><text x="66.7559%" y="1343.50">&lt;st..</text></g><g><title>std::sys::unix::fs::File::read (51 samples, 3.51%)</title><rect x="66.5059%" y="1317" width="3.5148%" height="15" fill="rgb(219,75,50)" fg:x="965" fg:w="51"/><text x="66.7559%" y="1327.50">std..</text></g><g><title>std::sys::unix::fd::FileDesc::read (51 samples, 3.51%)</title><rect x="66.5059%" y="1301" width="3.5148%" height="15" fill="rgb(234,72,50)" fg:x="965" fg:w="51"/><text x="66.7559%" y="1311.50">std..</text></g><g><title>std::sys::unix::cvt (4 samples, 0.28%)</title><rect x="69.7450%" y="1285" width="0.2757%" height="15" fill="rgb(219,100,48)" fg:x="1012" fg:w="4"/><text x="69.9950%" y="1295.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (4 samples, 0.28%)</title><rect x="69.7450%" y="1269" width="0.2757%" height="15" fill="rgb(253,5,41)" fg:x="1012" fg:w="4"/><text x="69.9950%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (10 samples, 0.69%)</title><rect x="70.0207%" y="1333" width="0.6892%" height="15" fill="rgb(247,181,11)" fg:x="1016" fg:w="10"/><text x="70.2707%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (10 samples, 0.69%)</title><rect x="70.0207%" y="1317" width="0.6892%" height="15" fill="rgb(222,223,25)" fg:x="1016" fg:w="10"/><text x="70.2707%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (10 samples, 0.69%)</title><rect x="70.0207%" y="1301" width="0.6892%" height="15" fill="rgb(214,198,28)" fg:x="1016" fg:w="10"/><text x="70.2707%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (10 samples, 0.69%)</title><rect x="70.0207%" y="1285" width="0.6892%" height="15" fill="rgb(230,46,43)" fg:x="1016" fg:w="10"/><text x="70.2707%" y="1295.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (10 samples, 0.69%)</title><rect x="70.0207%" y="1269" width="0.6892%" height="15" fill="rgb(233,65,53)" fg:x="1016" fg:w="10"/><text x="70.2707%" y="1279.50"></text></g><g><title>__close (10 samples, 0.69%)</title><rect x="70.0207%" y="1253" width="0.6892%" height="15" fill="rgb(221,121,27)" fg:x="1016" fg:w="10"/><text x="70.2707%" y="1263.50"></text></g><g><title>[libc.so.6] (6 samples, 0.41%)</title><rect x="70.2963%" y="1237" width="0.4135%" height="15" fill="rgb(247,70,47)" fg:x="1020" fg:w="6"/><text x="70.5463%" y="1247.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for i32&gt;::from_str (1 samples, 0.07%)</title><rect x="70.7099%" y="1317" width="0.0689%" height="15" fill="rgb(228,85,35)" fg:x="1026" fg:w="1"/><text x="70.9599%" y="1327.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="70.9855%" y="1301" width="0.0689%" height="15" fill="rgb(209,50,18)" fg:x="1030" fg:w="1"/><text x="71.2355%" y="1311.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (6 samples, 0.41%)</title><rect x="70.7099%" y="1333" width="0.4135%" height="15" fill="rgb(250,19,35)" fg:x="1026" fg:w="6"/><text x="70.9599%" y="1343.50"></text></g><g><title>core::num::from_str_radix (5 samples, 0.34%)</title><rect x="70.7788%" y="1317" width="0.3446%" height="15" fill="rgb(253,107,29)" fg:x="1027" fg:w="5"/><text x="71.0288%" y="1327.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (1 samples, 0.07%)</title><rect x="71.0544%" y="1301" width="0.0689%" height="15" fill="rgb(252,179,29)" fg:x="1031" fg:w="1"/><text x="71.3044%" y="1311.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.07%)</title><rect x="71.0544%" y="1285" width="0.0689%" height="15" fill="rgb(238,194,6)" fg:x="1031" fg:w="1"/><text x="71.3044%" y="1295.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim (1 samples, 0.07%)</title><rect x="71.1234%" y="1333" width="0.0689%" height="15" fill="rgb(238,164,29)" fg:x="1032" fg:w="1"/><text x="71.3734%" y="1343.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (1 samples, 0.07%)</title><rect x="71.1234%" y="1317" width="0.0689%" height="15" fill="rgb(224,25,9)" fg:x="1032" fg:w="1"/><text x="71.3734%" y="1327.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (1 samples, 0.07%)</title><rect x="71.1234%" y="1301" width="0.0689%" height="15" fill="rgb(244,153,23)" fg:x="1032" fg:w="1"/><text x="71.3734%" y="1311.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.07%)</title><rect x="71.1234%" y="1285" width="0.0689%" height="15" fill="rgb(212,203,14)" fg:x="1032" fg:w="1"/><text x="71.3734%" y="1295.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.07%)</title><rect x="71.1234%" y="1269" width="0.0689%" height="15" fill="rgb(220,164,20)" fg:x="1032" fg:w="1"/><text x="71.3734%" y="1279.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.07%)</title><rect x="71.1234%" y="1253" width="0.0689%" height="15" fill="rgb(222,203,48)" fg:x="1032" fg:w="1"/><text x="71.3734%" y="1263.50"></text></g><g><title>core::str::converts::from_utf8 (3 samples, 0.21%)</title><rect x="71.1923%" y="1333" width="0.2068%" height="15" fill="rgb(215,159,22)" fg:x="1033" fg:w="3"/><text x="71.4423%" y="1343.50"></text></g><g><title>core::str::validations::run_utf8_validation (3 samples, 0.21%)</title><rect x="71.1923%" y="1317" width="0.2068%" height="15" fill="rgb(216,183,47)" fg:x="1033" fg:w="3"/><text x="71.4423%" y="1327.50"></text></g><g><title>std::fs::OpenOptions::new (1 samples, 0.07%)</title><rect x="71.3990%" y="1317" width="0.0689%" height="15" fill="rgb(229,195,25)" fg:x="1036" fg:w="1"/><text x="71.6490%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::ffi::c_str::CString&gt; (1 samples, 0.07%)</title><rect x="71.5369%" y="1269" width="0.0689%" height="15" fill="rgb(224,132,51)" fg:x="1038" fg:w="1"/><text x="71.7869%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (1 samples, 0.07%)</title><rect x="71.5369%" y="1253" width="0.0689%" height="15" fill="rgb(240,63,7)" fg:x="1038" fg:w="1"/><text x="71.7869%" y="1263.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.07%)</title><rect x="71.5369%" y="1237" width="0.0689%" height="15" fill="rgb(249,182,41)" fg:x="1038" fg:w="1"/><text x="71.7869%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="71.5369%" y="1221" width="0.0689%" height="15" fill="rgb(243,47,26)" fg:x="1038" fg:w="1"/><text x="71.7869%" y="1231.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="71.5369%" y="1205" width="0.0689%" height="15" fill="rgb(233,48,2)" fg:x="1038" fg:w="1"/><text x="71.7869%" y="1215.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="71.5369%" y="1189" width="0.0689%" height="15" fill="rgb(244,165,34)" fg:x="1038" fg:w="1"/><text x="71.7869%" y="1199.50"></text></g><g><title>std::sys::unix::fs::File::open_c (11 samples, 0.76%)</title><rect x="71.6058%" y="1269" width="0.7581%" height="15" fill="rgb(207,89,7)" fg:x="1039" fg:w="11"/><text x="71.8558%" y="1279.50"></text></g><g><title>std::sys::unix::cvt_r (10 samples, 0.69%)</title><rect x="71.6747%" y="1253" width="0.6892%" height="15" fill="rgb(244,117,36)" fg:x="1040" fg:w="10"/><text x="71.9247%" y="1263.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (10 samples, 0.69%)</title><rect x="71.6747%" y="1237" width="0.6892%" height="15" fill="rgb(226,144,34)" fg:x="1040" fg:w="10"/><text x="71.9247%" y="1247.50"></text></g><g><title>open64 (9 samples, 0.62%)</title><rect x="71.7436%" y="1221" width="0.6203%" height="15" fill="rgb(213,23,19)" fg:x="1041" fg:w="9"/><text x="71.9936%" y="1231.50"></text></g><g><title>[libc.so.6] (5 samples, 0.34%)</title><rect x="72.0193%" y="1205" width="0.3446%" height="15" fill="rgb(217,75,12)" fg:x="1045" fg:w="5"/><text x="72.2693%" y="1215.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (1 samples, 0.07%)</title><rect x="72.3639%" y="1205" width="0.0689%" height="15" fill="rgb(224,159,17)" fg:x="1050" fg:w="1"/><text x="72.6139%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (1 samples, 0.07%)</title><rect x="72.3639%" y="1189" width="0.0689%" height="15" fill="rgb(217,118,1)" fg:x="1050" fg:w="1"/><text x="72.6139%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1 samples, 0.07%)</title><rect x="72.3639%" y="1173" width="0.0689%" height="15" fill="rgb(232,180,48)" fg:x="1050" fg:w="1"/><text x="72.6139%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (1 samples, 0.07%)</title><rect x="72.3639%" y="1157" width="0.0689%" height="15" fill="rgb(230,27,33)" fg:x="1050" fg:w="1"/><text x="72.6139%" y="1167.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="72.4328%" y="1093" width="0.0689%" height="15" fill="rgb(205,31,21)" fg:x="1051" fg:w="1"/><text x="72.6828%" y="1103.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="72.4328%" y="1077" width="0.0689%" height="15" fill="rgb(253,59,4)" fg:x="1051" fg:w="1"/><text x="72.6828%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="72.4328%" y="1205" width="0.1378%" height="15" fill="rgb(224,201,9)" fg:x="1051" fg:w="2"/><text x="72.6828%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="72.4328%" y="1189" width="0.1378%" height="15" fill="rgb(229,206,30)" fg:x="1051" fg:w="2"/><text x="72.6828%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="72.4328%" y="1173" width="0.1378%" height="15" fill="rgb(212,67,47)" fg:x="1051" fg:w="2"/><text x="72.6828%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="72.4328%" y="1157" width="0.1378%" height="15" fill="rgb(211,96,50)" fg:x="1051" fg:w="2"/><text x="72.6828%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.14%)</title><rect x="72.4328%" y="1141" width="0.1378%" height="15" fill="rgb(252,114,18)" fg:x="1051" fg:w="2"/><text x="72.6828%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="72.4328%" y="1125" width="0.1378%" height="15" fill="rgb(223,58,37)" fg:x="1051" fg:w="2"/><text x="72.6828%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="72.4328%" y="1109" width="0.1378%" height="15" fill="rgb(237,70,4)" fg:x="1051" fg:w="2"/><text x="72.6828%" y="1119.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="72.5017%" y="1093" width="0.0689%" height="15" fill="rgb(244,85,46)" fg:x="1052" fg:w="1"/><text x="72.7517%" y="1103.50"></text></g><g><title>std::fs::OpenOptions::open (17 samples, 1.17%)</title><rect x="71.4680%" y="1317" width="1.1716%" height="15" fill="rgb(223,39,52)" fg:x="1037" fg:w="17"/><text x="71.7180%" y="1327.50"></text></g><g><title>std::fs::OpenOptions::_open (17 samples, 1.17%)</title><rect x="71.4680%" y="1301" width="1.1716%" height="15" fill="rgb(218,200,14)" fg:x="1037" fg:w="17"/><text x="71.7180%" y="1311.50"></text></g><g><title>std::sys::unix::fs::File::open (16 samples, 1.10%)</title><rect x="71.5369%" y="1285" width="1.1027%" height="15" fill="rgb(208,171,16)" fg:x="1038" fg:w="16"/><text x="71.7869%" y="1295.50"></text></g><g><title>std::sys::unix::fs::cstr (4 samples, 0.28%)</title><rect x="72.3639%" y="1269" width="0.2757%" height="15" fill="rgb(234,200,18)" fg:x="1050" fg:w="4"/><text x="72.6139%" y="1279.50"></text></g><g><title>alloc::ffi::c_str::CString::new (4 samples, 0.28%)</title><rect x="72.3639%" y="1253" width="0.2757%" height="15" fill="rgb(228,45,11)" fg:x="1050" fg:w="4"/><text x="72.6139%" y="1263.50"></text></g><g><title>&lt;&amp;[u8] as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (4 samples, 0.28%)</title><rect x="72.3639%" y="1237" width="0.2757%" height="15" fill="rgb(237,182,11)" fg:x="1050" fg:w="4"/><text x="72.6139%" y="1247.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (4 samples, 0.28%)</title><rect x="72.3639%" y="1221" width="0.2757%" height="15" fill="rgb(241,175,49)" fg:x="1050" fg:w="4"/><text x="72.6139%" y="1231.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.07%)</title><rect x="72.5706%" y="1205" width="0.0689%" height="15" fill="rgb(247,38,35)" fg:x="1053" fg:w="1"/><text x="72.8206%" y="1215.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.07%)</title><rect x="72.5706%" y="1189" width="0.0689%" height="15" fill="rgb(228,39,49)" fg:x="1053" fg:w="1"/><text x="72.8206%" y="1199.50"></text></g><g><title>sysinfo::linux::component::fill_component (165 samples, 11.37%)</title><rect x="61.4059%" y="1381" width="11.3715%" height="15" fill="rgb(226,101,26)" fg:x="891" fg:w="165"/><text x="61.6559%" y="1391.50">sysinfo::linux::c..</text></g><g><title>sysinfo::linux::component::get_temperature_from_file (97 samples, 6.69%)</title><rect x="66.0924%" y="1365" width="6.6850%" height="15" fill="rgb(206,141,19)" fg:x="959" fg:w="97"/><text x="66.3424%" y="1375.50">sysinfo::..</text></g><g><title>sysinfo::linux::component::read_number_from_file (93 samples, 6.41%)</title><rect x="66.3680%" y="1349" width="6.4094%" height="15" fill="rgb(211,200,13)" fg:x="963" fg:w="93"/><text x="66.6180%" y="1359.50">sysinfo:..</text></g><g><title>std::fs::File::open (20 samples, 1.38%)</title><rect x="71.3990%" y="1333" width="1.3784%" height="15" fill="rgb(241,121,6)" fg:x="1036" fg:w="20"/><text x="71.6490%" y="1343.50"></text></g><g><title>std::fs::OpenOptions::read (2 samples, 0.14%)</title><rect x="72.6396%" y="1317" width="0.1378%" height="15" fill="rgb(234,221,29)" fg:x="1054" fg:w="2"/><text x="72.8896%" y="1327.50"></text></g><g><title>std::sys::unix::fs::OpenOptions::read (1 samples, 0.07%)</title><rect x="72.7085%" y="1301" width="0.0689%" height="15" fill="rgb(229,136,5)" fg:x="1055" fg:w="1"/><text x="72.9585%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.07%)</title><rect x="72.9841%" y="1269" width="0.0689%" height="15" fill="rgb(238,36,11)" fg:x="1059" fg:w="1"/><text x="73.2341%" y="1279.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.07%)</title><rect x="72.9841%" y="1253" width="0.0689%" height="15" fill="rgb(251,55,41)" fg:x="1059" fg:w="1"/><text x="73.2341%" y="1263.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.07%)</title><rect x="72.9841%" y="1237" width="0.0689%" height="15" fill="rgb(242,34,40)" fg:x="1059" fg:w="1"/><text x="73.2341%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (56 samples, 3.86%)</title><rect x="73.1220%" y="1253" width="3.8594%" height="15" fill="rgb(215,42,17)" fg:x="1061" fg:w="56"/><text x="73.3720%" y="1263.50">&lt;all..</text></g><g><title>alloc::alloc::Global::grow_impl (56 samples, 3.86%)</title><rect x="73.1220%" y="1237" width="3.8594%" height="15" fill="rgb(207,44,46)" fg:x="1061" fg:w="56"/><text x="73.3720%" y="1247.50">allo..</text></g><g><title>alloc::alloc::realloc (56 samples, 3.86%)</title><rect x="73.1220%" y="1221" width="3.8594%" height="15" fill="rgb(211,206,28)" fg:x="1061" fg:w="56"/><text x="73.3720%" y="1231.50">allo..</text></g><g><title>realloc (56 samples, 3.86%)</title><rect x="73.1220%" y="1205" width="3.8594%" height="15" fill="rgb(237,167,16)" fg:x="1061" fg:w="56"/><text x="73.3720%" y="1215.50">real..</text></g><g><title>[libc.so.6] (51 samples, 3.51%)</title><rect x="73.4666%" y="1189" width="3.5148%" height="15" fill="rgb(233,66,6)" fg:x="1066" fg:w="51"/><text x="73.7166%" y="1199.50">[li..</text></g><g><title>[libc.so.6] (49 samples, 3.38%)</title><rect x="73.6044%" y="1173" width="3.3770%" height="15" fill="rgb(246,123,29)" fg:x="1068" fg:w="49"/><text x="73.8544%" y="1183.50">[li..</text></g><g><title>[libc.so.6] (36 samples, 2.48%)</title><rect x="74.5003%" y="1157" width="2.4810%" height="15" fill="rgb(209,62,40)" fg:x="1081" fg:w="36"/><text x="74.7503%" y="1167.50">[l..</text></g><g><title>alloc::raw_vec::finish_grow (58 samples, 4.00%)</title><rect x="73.0531%" y="1269" width="3.9972%" height="15" fill="rgb(218,4,25)" fg:x="1060" fg:w="58"/><text x="73.3031%" y="1279.50">allo..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.07%)</title><rect x="76.9814%" y="1253" width="0.0689%" height="15" fill="rgb(253,91,49)" fg:x="1117" fg:w="1"/><text x="77.2314%" y="1263.50"></text></g><g><title>alloc::string::String::reserve (60 samples, 4.14%)</title><rect x="72.9841%" y="1349" width="4.1351%" height="15" fill="rgb(228,155,29)" fg:x="1059" fg:w="60"/><text x="73.2341%" y="1359.50">alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (60 samples, 4.14%)</title><rect x="72.9841%" y="1333" width="4.1351%" height="15" fill="rgb(243,57,37)" fg:x="1059" fg:w="60"/><text x="73.2341%" y="1343.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (60 samples, 4.14%)</title><rect x="72.9841%" y="1317" width="4.1351%" height="15" fill="rgb(244,167,17)" fg:x="1059" fg:w="60"/><text x="73.2341%" y="1327.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (60 samples, 4.14%)</title><rect x="72.9841%" y="1301" width="4.1351%" height="15" fill="rgb(207,181,38)" fg:x="1059" fg:w="60"/><text x="73.2341%" y="1311.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (60 samples, 4.14%)</title><rect x="72.9841%" y="1285" width="4.1351%" height="15" fill="rgb(211,8,23)" fg:x="1059" fg:w="60"/><text x="73.2341%" y="1295.50">alloc..</text></g><g><title>core::cmp::max (1 samples, 0.07%)</title><rect x="77.0503%" y="1269" width="0.0689%" height="15" fill="rgb(235,11,44)" fg:x="1118" fg:w="1"/><text x="77.3003%" y="1279.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.07%)</title><rect x="77.0503%" y="1253" width="0.0689%" height="15" fill="rgb(248,18,52)" fg:x="1118" fg:w="1"/><text x="77.3003%" y="1263.50"></text></g><g><title>core::mem::zeroed (3 samples, 0.21%)</title><rect x="77.3260%" y="1285" width="0.2068%" height="15" fill="rgb(208,4,7)" fg:x="1122" fg:w="3"/><text x="77.5760%" y="1295.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (3 samples, 0.21%)</title><rect x="77.3260%" y="1269" width="0.2068%" height="15" fill="rgb(240,17,39)" fg:x="1122" fg:w="3"/><text x="77.5760%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (1 samples, 0.07%)</title><rect x="77.5327%" y="1285" width="0.0689%" height="15" fill="rgb(207,170,3)" fg:x="1125" fg:w="1"/><text x="77.7827%" y="1295.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="77.5327%" y="1269" width="0.0689%" height="15" fill="rgb(236,100,52)" fg:x="1125" fg:w="1"/><text x="77.7827%" y="1279.50"></text></g><g><title>libc::unix::linux_like::linux::makedev (1 samples, 0.07%)</title><rect x="77.6017%" y="1285" width="0.0689%" height="15" fill="rgb(246,78,51)" fg:x="1126" fg:w="1"/><text x="77.8517%" y="1295.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.07%)</title><rect x="77.6706%" y="1285" width="0.0689%" height="15" fill="rgb(211,17,15)" fg:x="1127" fg:w="1"/><text x="77.9206%" y="1295.50"></text></g><g><title>std::fs::File::metadata (14 samples, 0.96%)</title><rect x="77.1192%" y="1333" width="0.9649%" height="15" fill="rgb(209,59,46)" fg:x="1119" fg:w="14"/><text x="77.3692%" y="1343.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (14 samples, 0.96%)</title><rect x="77.1192%" y="1317" width="0.9649%" height="15" fill="rgb(210,92,25)" fg:x="1119" fg:w="14"/><text x="77.3692%" y="1327.50"></text></g><g><title>std::sys::unix::fs::try_statx (14 samples, 0.96%)</title><rect x="77.1192%" y="1301" width="0.9649%" height="15" fill="rgb(238,174,52)" fg:x="1119" fg:w="14"/><text x="77.3692%" y="1311.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (5 samples, 0.34%)</title><rect x="77.7395%" y="1285" width="0.3446%" height="15" fill="rgb(230,73,7)" fg:x="1128" fg:w="5"/><text x="77.9895%" y="1295.50"></text></g><g><title>statx (4 samples, 0.28%)</title><rect x="77.8084%" y="1269" width="0.2757%" height="15" fill="rgb(243,124,40)" fg:x="1129" fg:w="4"/><text x="78.0584%" y="1279.50"></text></g><g><title>std::fs::buffer_capacity_required (22 samples, 1.52%)</title><rect x="77.1192%" y="1349" width="1.5162%" height="15" fill="rgb(244,170,11)" fg:x="1119" fg:w="22"/><text x="77.3692%" y="1359.50"></text></g><g><title>std::io::Seek::stream_position (8 samples, 0.55%)</title><rect x="78.0841%" y="1333" width="0.5513%" height="15" fill="rgb(207,114,54)" fg:x="1133" fg:w="8"/><text x="78.3341%" y="1343.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Seek&gt;::seek (8 samples, 0.55%)</title><rect x="78.0841%" y="1317" width="0.5513%" height="15" fill="rgb(205,42,20)" fg:x="1133" fg:w="8"/><text x="78.3341%" y="1327.50"></text></g><g><title>std::sys::unix::fs::File::seek (8 samples, 0.55%)</title><rect x="78.0841%" y="1301" width="0.5513%" height="15" fill="rgb(230,30,28)" fg:x="1133" fg:w="8"/><text x="78.3341%" y="1311.50"></text></g><g><title>llseek (8 samples, 0.55%)</title><rect x="78.0841%" y="1285" width="0.5513%" height="15" fill="rgb(205,73,54)" fg:x="1133" fg:w="8"/><text x="78.3341%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.07%)</title><rect x="78.7043%" y="1317" width="0.0689%" height="15" fill="rgb(254,227,23)" fg:x="1142" fg:w="1"/><text x="78.9543%" y="1327.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.07%)</title><rect x="78.7043%" y="1301" width="0.0689%" height="15" fill="rgb(228,202,34)" fg:x="1142" fg:w="1"/><text x="78.9543%" y="1311.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.07%)</title><rect x="78.7043%" y="1285" width="0.0689%" height="15" fill="rgb(222,225,37)" fg:x="1142" fg:w="1"/><text x="78.9543%" y="1295.50"></text></g><g><title>core::str::converts::from_utf8 (6 samples, 0.41%)</title><rect x="78.7733%" y="1317" width="0.4135%" height="15" fill="rgb(221,14,54)" fg:x="1143" fg:w="6"/><text x="79.0233%" y="1327.50"></text></g><g><title>core::str::validations::run_utf8_validation (5 samples, 0.34%)</title><rect x="78.8422%" y="1301" width="0.3446%" height="15" fill="rgb(254,102,2)" fg:x="1144" fg:w="5"/><text x="79.0922%" y="1311.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (26 samples, 1.79%)</title><rect x="79.4624%" y="1285" width="1.7919%" height="15" fill="rgb(232,104,17)" fg:x="1153" fg:w="26"/><text x="79.7124%" y="1295.50">&lt;..</text></g><g><title>std::sys::unix::fs::File::read_buf (26 samples, 1.79%)</title><rect x="79.4624%" y="1269" width="1.7919%" height="15" fill="rgb(250,220,14)" fg:x="1153" fg:w="26"/><text x="79.7124%" y="1279.50">s..</text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (26 samples, 1.79%)</title><rect x="79.4624%" y="1253" width="1.7919%" height="15" fill="rgb(241,158,9)" fg:x="1153" fg:w="26"/><text x="79.7124%" y="1263.50">s..</text></g><g><title>read (26 samples, 1.79%)</title><rect x="79.4624%" y="1237" width="1.7919%" height="15" fill="rgb(246,9,43)" fg:x="1153" fg:w="26"/><text x="79.7124%" y="1247.50">r..</text></g><g><title>[libc.so.6] (12 samples, 0.83%)</title><rect x="80.4273%" y="1221" width="0.8270%" height="15" fill="rgb(206,73,33)" fg:x="1167" fg:w="12"/><text x="80.6773%" y="1231.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (122 samples, 8.41%)</title><rect x="72.9152%" y="1365" width="8.4080%" height="15" fill="rgb(222,79,8)" fg:x="1058" fg:w="122"/><text x="73.1652%" y="1375.50">&lt;std::fs::Fi..</text></g><g><title>std::io::default_read_to_string (39 samples, 2.69%)</title><rect x="78.6354%" y="1349" width="2.6878%" height="15" fill="rgb(234,8,54)" fg:x="1141" fg:w="39"/><text x="78.8854%" y="1359.50">st..</text></g><g><title>std::io::append_to_string (39 samples, 2.69%)</title><rect x="78.6354%" y="1333" width="2.6878%" height="15" fill="rgb(209,134,38)" fg:x="1141" fg:w="39"/><text x="78.8854%" y="1343.50">st..</text></g><g><title>std::io::default_read_to_string::{{closure}} (31 samples, 2.14%)</title><rect x="79.1868%" y="1317" width="2.1365%" height="15" fill="rgb(230,127,29)" fg:x="1149" fg:w="31"/><text x="79.4368%" y="1327.50">s..</text></g><g><title>std::io::default_read_to_end (31 samples, 2.14%)</title><rect x="79.1868%" y="1301" width="2.1365%" height="15" fill="rgb(242,44,41)" fg:x="1149" fg:w="31"/><text x="79.4368%" y="1311.50">s..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.07%)</title><rect x="81.2543%" y="1285" width="0.0689%" height="15" fill="rgb(222,56,43)" fg:x="1179" fg:w="1"/><text x="81.5043%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (1 samples, 0.07%)</title><rect x="81.3232%" y="1349" width="0.0689%" height="15" fill="rgb(238,39,47)" fg:x="1180" fg:w="1"/><text x="81.5732%" y="1359.50"></text></g><g><title>alloc::string::String::truncate (2 samples, 0.14%)</title><rect x="81.3232%" y="1365" width="0.1378%" height="15" fill="rgb(226,79,43)" fg:x="1180" fg:w="2"/><text x="81.5732%" y="1375.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.07%)</title><rect x="81.3921%" y="1349" width="0.0689%" height="15" fill="rgb(242,105,53)" fg:x="1181" fg:w="1"/><text x="81.6421%" y="1359.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.07%)</title><rect x="81.3921%" y="1333" width="0.0689%" height="15" fill="rgb(251,132,46)" fg:x="1181" fg:w="1"/><text x="81.6421%" y="1343.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.07%)</title><rect x="81.3921%" y="1317" width="0.0689%" height="15" fill="rgb(231,77,14)" fg:x="1181" fg:w="1"/><text x="81.6421%" y="1327.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="81.5300%" y="1237" width="0.0689%" height="15" fill="rgb(240,135,9)" fg:x="1183" fg:w="1"/><text x="81.7800%" y="1247.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="81.5300%" y="1221" width="0.0689%" height="15" fill="rgb(248,109,14)" fg:x="1183" fg:w="1"/><text x="81.7800%" y="1231.50"></text></g><g><title>__rust_alloc (2 samples, 0.14%)</title><rect x="81.5989%" y="1237" width="0.1378%" height="15" fill="rgb(227,146,52)" fg:x="1184" fg:w="2"/><text x="81.8489%" y="1247.50"></text></g><g><title>alloc::string::String::with_capacity (7 samples, 0.48%)</title><rect x="81.4611%" y="1365" width="0.4824%" height="15" fill="rgb(232,54,3)" fg:x="1182" fg:w="7"/><text x="81.7111%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.41%)</title><rect x="81.5300%" y="1349" width="0.4135%" height="15" fill="rgb(229,201,43)" fg:x="1183" fg:w="6"/><text x="81.7800%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.41%)</title><rect x="81.5300%" y="1333" width="0.4135%" height="15" fill="rgb(252,161,33)" fg:x="1183" fg:w="6"/><text x="81.7800%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.41%)</title><rect x="81.5300%" y="1317" width="0.4135%" height="15" fill="rgb(226,146,40)" fg:x="1183" fg:w="6"/><text x="81.7800%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.41%)</title><rect x="81.5300%" y="1301" width="0.4135%" height="15" fill="rgb(219,47,25)" fg:x="1183" fg:w="6"/><text x="81.7800%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.41%)</title><rect x="81.5300%" y="1285" width="0.4135%" height="15" fill="rgb(250,135,13)" fg:x="1183" fg:w="6"/><text x="81.7800%" y="1295.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.41%)</title><rect x="81.5300%" y="1269" width="0.4135%" height="15" fill="rgb(219,229,18)" fg:x="1183" fg:w="6"/><text x="81.7800%" y="1279.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.41%)</title><rect x="81.5300%" y="1253" width="0.4135%" height="15" fill="rgb(217,152,27)" fg:x="1183" fg:w="6"/><text x="81.7800%" y="1263.50"></text></g><g><title>malloc (3 samples, 0.21%)</title><rect x="81.7367%" y="1237" width="0.2068%" height="15" fill="rgb(225,71,47)" fg:x="1186" fg:w="3"/><text x="81.9867%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.14%)</title><rect x="81.9435%" y="1301" width="0.1378%" height="15" fill="rgb(220,139,14)" fg:x="1189" fg:w="2"/><text x="82.1935%" y="1311.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.14%)</title><rect x="81.9435%" y="1285" width="0.1378%" height="15" fill="rgb(247,54,32)" fg:x="1189" fg:w="2"/><text x="82.1935%" y="1295.50"></text></g><g><title>cfree (2 samples, 0.14%)</title><rect x="81.9435%" y="1269" width="0.1378%" height="15" fill="rgb(252,131,39)" fg:x="1189" fg:w="2"/><text x="82.1935%" y="1279.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="82.0124%" y="1253" width="0.0689%" height="15" fill="rgb(210,108,39)" fg:x="1190" fg:w="1"/><text x="82.2624%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.21%)</title><rect x="81.9435%" y="1365" width="0.2068%" height="15" fill="rgb(205,23,29)" fg:x="1189" fg:w="3"/><text x="82.1935%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.21%)</title><rect x="81.9435%" y="1349" width="0.2068%" height="15" fill="rgb(246,139,46)" fg:x="1189" fg:w="3"/><text x="82.1935%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.21%)</title><rect x="81.9435%" y="1333" width="0.2068%" height="15" fill="rgb(250,81,26)" fg:x="1189" fg:w="3"/><text x="82.1935%" y="1343.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.21%)</title><rect x="81.9435%" y="1317" width="0.2068%" height="15" fill="rgb(214,104,7)" fg:x="1189" fg:w="3"/><text x="82.1935%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.07%)</title><rect x="82.0813%" y="1301" width="0.0689%" height="15" fill="rgb(233,189,8)" fg:x="1191" fg:w="1"/><text x="82.3313%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (13 samples, 0.90%)</title><rect x="82.1502%" y="1365" width="0.8959%" height="15" fill="rgb(228,141,17)" fg:x="1192" fg:w="13"/><text x="82.4002%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (13 samples, 0.90%)</title><rect x="82.1502%" y="1349" width="0.8959%" height="15" fill="rgb(247,157,1)" fg:x="1192" fg:w="13"/><text x="82.4002%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (13 samples, 0.90%)</title><rect x="82.1502%" y="1333" width="0.8959%" height="15" fill="rgb(249,225,5)" fg:x="1192" fg:w="13"/><text x="82.4002%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (13 samples, 0.90%)</title><rect x="82.1502%" y="1317" width="0.8959%" height="15" fill="rgb(242,55,13)" fg:x="1192" fg:w="13"/><text x="82.4002%" y="1327.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (13 samples, 0.90%)</title><rect x="82.1502%" y="1301" width="0.8959%" height="15" fill="rgb(230,49,50)" fg:x="1192" fg:w="13"/><text x="82.4002%" y="1311.50"></text></g><g><title>__close (13 samples, 0.90%)</title><rect x="82.1502%" y="1285" width="0.8959%" height="15" fill="rgb(241,111,38)" fg:x="1192" fg:w="13"/><text x="82.4002%" y="1295.50"></text></g><g><title>[libc.so.6] (9 samples, 0.62%)</title><rect x="82.4259%" y="1269" width="0.6203%" height="15" fill="rgb(252,155,4)" fg:x="1196" fg:w="9"/><text x="82.6759%" y="1279.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (1 samples, 0.07%)</title><rect x="83.0462%" y="1365" width="0.0689%" height="15" fill="rgb(212,69,32)" fg:x="1205" fg:w="1"/><text x="83.2962%" y="1375.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end (1 samples, 0.07%)</title><rect x="83.1151%" y="1365" width="0.0689%" height="15" fill="rgb(243,107,47)" fg:x="1206" fg:w="1"/><text x="83.3651%" y="1375.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_end_matches (1 samples, 0.07%)</title><rect x="83.1151%" y="1349" width="0.0689%" height="15" fill="rgb(247,130,12)" fg:x="1206" fg:w="1"/><text x="83.3651%" y="1359.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::ReverseSearcher&gt;::next_reject_back (1 samples, 0.07%)</title><rect x="83.1151%" y="1333" width="0.0689%" height="15" fill="rgb(233,74,16)" fg:x="1206" fg:w="1"/><text x="83.3651%" y="1343.50"></text></g><g><title>core::str::pattern::ReverseSearcher::next_reject_back (1 samples, 0.07%)</title><rect x="83.1151%" y="1317" width="0.0689%" height="15" fill="rgb(208,58,18)" fg:x="1206" fg:w="1"/><text x="83.3651%" y="1327.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::ReverseSearcher&gt;::next_back (1 samples, 0.07%)</title><rect x="83.1151%" y="1301" width="0.0689%" height="15" fill="rgb(242,225,1)" fg:x="1206" fg:w="1"/><text x="83.3651%" y="1311.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.07%)</title><rect x="83.1151%" y="1285" width="0.0689%" height="15" fill="rgb(249,39,40)" fg:x="1206" fg:w="1"/><text x="83.3651%" y="1295.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.07%)</title><rect x="83.1151%" y="1269" width="0.0689%" height="15" fill="rgb(207,72,44)" fg:x="1206" fg:w="1"/><text x="83.3651%" y="1279.50"></text></g><g><title>core::str::validations::next_code_point_reverse (1 samples, 0.07%)</title><rect x="83.1151%" y="1253" width="0.0689%" height="15" fill="rgb(215,193,12)" fg:x="1206" fg:w="1"/><text x="83.3651%" y="1263.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.07%)</title><rect x="83.1151%" y="1237" width="0.0689%" height="15" fill="rgb(248,41,39)" fg:x="1206" fg:w="1"/><text x="83.3651%" y="1247.50"></text></g><g><title>std::fs::OpenOptions::new (1 samples, 0.07%)</title><rect x="83.2529%" y="1349" width="0.0689%" height="15" fill="rgb(253,85,4)" fg:x="1208" fg:w="1"/><text x="83.5029%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::ffi::c_str::CString&gt; (4 samples, 0.28%)</title><rect x="83.3218%" y="1301" width="0.2757%" height="15" fill="rgb(243,70,31)" fg:x="1209" fg:w="4"/><text x="83.5718%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (4 samples, 0.28%)</title><rect x="83.3218%" y="1285" width="0.2757%" height="15" fill="rgb(253,195,26)" fg:x="1209" fg:w="4"/><text x="83.5718%" y="1295.50"></text></g><g><title>alloc::alloc::box_free (4 samples, 0.28%)</title><rect x="83.3218%" y="1269" width="0.2757%" height="15" fill="rgb(243,42,11)" fg:x="1209" fg:w="4"/><text x="83.5718%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.28%)</title><rect x="83.3218%" y="1253" width="0.2757%" height="15" fill="rgb(239,66,17)" fg:x="1209" fg:w="4"/><text x="83.5718%" y="1263.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.28%)</title><rect x="83.3218%" y="1237" width="0.2757%" height="15" fill="rgb(217,132,21)" fg:x="1209" fg:w="4"/><text x="83.5718%" y="1247.50"></text></g><g><title>cfree (4 samples, 0.28%)</title><rect x="83.3218%" y="1221" width="0.2757%" height="15" fill="rgb(252,202,21)" fg:x="1209" fg:w="4"/><text x="83.5718%" y="1231.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="83.4597%" y="1205" width="0.1378%" height="15" fill="rgb(233,98,36)" fg:x="1211" fg:w="2"/><text x="83.7097%" y="1215.50"></text></g><g><title>std::io::error::Error::kind (2 samples, 0.14%)</title><rect x="83.7354%" y="1269" width="0.1378%" height="15" fill="rgb(216,153,54)" fg:x="1215" fg:w="2"/><text x="83.9854%" y="1279.50"></text></g><g><title>std::sys::unix::decode_error_kind (2 samples, 0.14%)</title><rect x="83.7354%" y="1253" width="0.1378%" height="15" fill="rgb(250,99,7)" fg:x="1215" fg:w="2"/><text x="83.9854%" y="1263.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.07%)</title><rect x="83.8732%" y="1269" width="0.0689%" height="15" fill="rgb(207,56,50)" fg:x="1217" fg:w="1"/><text x="84.1232%" y="1279.50"></text></g><g><title>std::io::error::Error::last_os_error (1 samples, 0.07%)</title><rect x="83.8732%" y="1253" width="0.0689%" height="15" fill="rgb(244,61,34)" fg:x="1217" fg:w="1"/><text x="84.1232%" y="1263.50"></text></g><g><title>std::sys::unix::os::errno (1 samples, 0.07%)</title><rect x="83.8732%" y="1237" width="0.0689%" height="15" fill="rgb(241,50,38)" fg:x="1217" fg:w="1"/><text x="84.1232%" y="1247.50"></text></g><g><title>__errno_location (1 samples, 0.07%)</title><rect x="83.8732%" y="1221" width="0.0689%" height="15" fill="rgb(212,166,30)" fg:x="1217" fg:w="1"/><text x="84.1232%" y="1231.50"></text></g><g><title>std::sys::unix::cvt_r (35 samples, 2.41%)</title><rect x="83.7354%" y="1285" width="2.4121%" height="15" fill="rgb(249,127,32)" fg:x="1215" fg:w="35"/><text x="83.9854%" y="1295.50">st..</text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (32 samples, 2.21%)</title><rect x="83.9421%" y="1269" width="2.2054%" height="15" fill="rgb(209,103,0)" fg:x="1218" fg:w="32"/><text x="84.1921%" y="1279.50">s..</text></g><g><title>open64 (32 samples, 2.21%)</title><rect x="83.9421%" y="1253" width="2.2054%" height="15" fill="rgb(238,209,51)" fg:x="1218" fg:w="32"/><text x="84.1921%" y="1263.50">o..</text></g><g><title>[libc.so.6] (16 samples, 1.10%)</title><rect x="85.0448%" y="1237" width="1.1027%" height="15" fill="rgb(237,56,23)" fg:x="1234" fg:w="16"/><text x="85.2948%" y="1247.50"></text></g><g><title>std::sys::unix::fs::File::open_c (41 samples, 2.83%)</title><rect x="83.5975%" y="1301" width="2.8256%" height="15" fill="rgb(215,153,46)" fg:x="1213" fg:w="41"/><text x="83.8475%" y="1311.50">st..</text></g><g><title>std::sys::unix::fs::OpenOptions::get_creation_mode (4 samples, 0.28%)</title><rect x="86.1475%" y="1285" width="0.2757%" height="15" fill="rgb(224,49,31)" fg:x="1250" fg:w="4"/><text x="86.3975%" y="1295.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.07%)</title><rect x="86.4232%" y="1285" width="0.0689%" height="15" fill="rgb(250,18,42)" fg:x="1254" fg:w="1"/><text x="86.6732%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (2 samples, 0.14%)</title><rect x="86.6299%" y="1237" width="0.1378%" height="15" fill="rgb(215,176,39)" fg:x="1257" fg:w="2"/><text x="86.8799%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="86.6299%" y="1221" width="0.1378%" height="15" fill="rgb(223,77,29)" fg:x="1257" fg:w="2"/><text x="86.8799%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.14%)</title><rect x="86.6299%" y="1205" width="0.1378%" height="15" fill="rgb(234,94,52)" fg:x="1257" fg:w="2"/><text x="86.8799%" y="1215.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.14%)</title><rect x="86.6299%" y="1189" width="0.1378%" height="15" fill="rgb(220,154,50)" fg:x="1257" fg:w="2"/><text x="86.8799%" y="1199.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="86.6299%" y="1173" width="0.1378%" height="15" fill="rgb(212,11,10)" fg:x="1257" fg:w="2"/><text x="86.8799%" y="1183.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (4 samples, 0.28%)</title><rect x="86.7677%" y="1237" width="0.2757%" height="15" fill="rgb(205,166,19)" fg:x="1259" fg:w="4"/><text x="87.0177%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.14%)</title><rect x="86.9056%" y="1221" width="0.1378%" height="15" fill="rgb(244,198,16)" fg:x="1261" fg:w="2"/><text x="87.1556%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="87.0434%" y="1237" width="0.1378%" height="15" fill="rgb(219,69,12)" fg:x="1263" fg:w="2"/><text x="87.2934%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="87.0434%" y="1221" width="0.1378%" height="15" fill="rgb(245,30,7)" fg:x="1263" fg:w="2"/><text x="87.2934%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="87.0434%" y="1205" width="0.1378%" height="15" fill="rgb(218,221,48)" fg:x="1263" fg:w="2"/><text x="87.2934%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="87.0434%" y="1189" width="0.1378%" height="15" fill="rgb(216,66,15)" fg:x="1263" fg:w="2"/><text x="87.2934%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.14%)</title><rect x="87.0434%" y="1173" width="0.1378%" height="15" fill="rgb(226,122,50)" fg:x="1263" fg:w="2"/><text x="87.2934%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="87.0434%" y="1157" width="0.1378%" height="15" fill="rgb(239,156,16)" fg:x="1263" fg:w="2"/><text x="87.2934%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="87.0434%" y="1141" width="0.1378%" height="15" fill="rgb(224,27,38)" fg:x="1263" fg:w="2"/><text x="87.2934%" y="1151.50"></text></g><g><title>malloc (2 samples, 0.14%)</title><rect x="87.0434%" y="1125" width="0.1378%" height="15" fill="rgb(224,39,27)" fg:x="1263" fg:w="2"/><text x="87.2934%" y="1135.50"></text></g><g><title>core::slice::memchr::memchr_naive (5 samples, 0.34%)</title><rect x="87.3880%" y="1205" width="0.3446%" height="15" fill="rgb(215,92,29)" fg:x="1268" fg:w="5"/><text x="87.6380%" y="1215.50"></text></g><g><title>&lt;sysinfo::linux::system::System as sysinfo::traits::SystemExt&gt;::refresh_components_list (865 samples, 59.61%)</title><rect x="28.2564%" y="1429" width="59.6141%" height="15" fill="rgb(207,159,16)" fg:x="410" fg:w="865"/><text x="28.5064%" y="1439.50">&lt;sysinfo::linux::system::System as sysinfo::traits::SystemExt&gt;::refresh_components_list</text></g><g><title>sysinfo::linux::component::get_components (851 samples, 58.65%)</title><rect x="29.2212%" y="1413" width="58.6492%" height="15" fill="rgb(238,163,47)" fg:x="424" fg:w="851"/><text x="29.4712%" y="1423.50">sysinfo::linux::component::get_components</text></g><g><title>sysinfo::linux::component::Component::from_hwmon (788 samples, 54.31%)</title><rect x="33.5631%" y="1397" width="54.3074%" height="15" fill="rgb(219,91,49)" fg:x="487" fg:w="788"/><text x="33.8131%" y="1407.50">sysinfo::linux::component::Component::from_hwmon</text></g><g><title>sysinfo::linux::component::get_file_line (219 samples, 15.09%)</title><rect x="72.7774%" y="1381" width="15.0930%" height="15" fill="rgb(227,167,31)" fg:x="1056" fg:w="219"/><text x="73.0274%" y="1391.50">sysinfo::linux::compone..</text></g><g><title>std::fs::File::open (68 samples, 4.69%)</title><rect x="83.1840%" y="1365" width="4.6864%" height="15" fill="rgb(234,80,54)" fg:x="1207" fg:w="68"/><text x="83.4340%" y="1375.50">std::..</text></g><g><title>std::fs::OpenOptions::open (66 samples, 4.55%)</title><rect x="83.3218%" y="1349" width="4.5486%" height="15" fill="rgb(212,114,2)" fg:x="1209" fg:w="66"/><text x="83.5718%" y="1359.50">std::..</text></g><g><title>std::fs::OpenOptions::_open (66 samples, 4.55%)</title><rect x="83.3218%" y="1333" width="4.5486%" height="15" fill="rgb(234,50,24)" fg:x="1209" fg:w="66"/><text x="83.5718%" y="1343.50">std::..</text></g><g><title>std::sys::unix::fs::File::open (66 samples, 4.55%)</title><rect x="83.3218%" y="1317" width="4.5486%" height="15" fill="rgb(221,68,8)" fg:x="1209" fg:w="66"/><text x="83.5718%" y="1327.50">std::..</text></g><g><title>std::sys::unix::fs::cstr (21 samples, 1.45%)</title><rect x="86.4232%" y="1301" width="1.4473%" height="15" fill="rgb(254,180,31)" fg:x="1254" fg:w="21"/><text x="86.6732%" y="1311.50"></text></g><g><title>alloc::ffi::c_str::CString::new (20 samples, 1.38%)</title><rect x="86.4921%" y="1285" width="1.3784%" height="15" fill="rgb(247,130,50)" fg:x="1255" fg:w="20"/><text x="86.7421%" y="1295.50"></text></g><g><title>&lt;&amp;[u8] as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (20 samples, 1.38%)</title><rect x="86.4921%" y="1269" width="1.3784%" height="15" fill="rgb(211,109,4)" fg:x="1255" fg:w="20"/><text x="86.7421%" y="1279.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (20 samples, 1.38%)</title><rect x="86.4921%" y="1253" width="1.3784%" height="15" fill="rgb(238,50,21)" fg:x="1255" fg:w="20"/><text x="86.7421%" y="1263.50"></text></g><g><title>core::slice::memchr::memchr (10 samples, 0.69%)</title><rect x="87.1813%" y="1237" width="0.6892%" height="15" fill="rgb(225,57,45)" fg:x="1265" fg:w="10"/><text x="87.4313%" y="1247.50"></text></g><g><title>core::slice::memchr::memchr_aligned (9 samples, 0.62%)</title><rect x="87.2502%" y="1221" width="0.6203%" height="15" fill="rgb(209,196,50)" fg:x="1266" fg:w="9"/><text x="87.5002%" y="1231.50"></text></g><g><title>core::slice::memchr::repeat_byte (2 samples, 0.14%)</title><rect x="87.7326%" y="1205" width="0.1378%" height="15" fill="rgb(242,140,13)" fg:x="1273" fg:w="2"/><text x="87.9826%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="87.8704%" y="1349" width="0.0689%" height="15" fill="rgb(217,111,7)" fg:x="1275" fg:w="1"/><text x="88.1204%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="87.8704%" y="1333" width="0.0689%" height="15" fill="rgb(253,193,51)" fg:x="1275" fg:w="1"/><text x="88.1204%" y="1343.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="87.8704%" y="1317" width="0.0689%" height="15" fill="rgb(252,70,29)" fg:x="1275" fg:w="1"/><text x="88.1204%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="87.8704%" y="1301" width="0.0689%" height="15" fill="rgb(232,127,12)" fg:x="1275" fg:w="1"/><text x="88.1204%" y="1311.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="87.8704%" y="1285" width="0.0689%" height="15" fill="rgb(211,180,21)" fg:x="1275" fg:w="1"/><text x="88.1204%" y="1295.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="87.8704%" y="1269" width="0.0689%" height="15" fill="rgb(229,72,13)" fg:x="1275" fg:w="1"/><text x="88.1204%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sysinfo::linux::disk::Disk&gt;&gt; (3 samples, 0.21%)</title><rect x="87.8704%" y="1413" width="0.2068%" height="15" fill="rgb(240,211,49)" fg:x="1275" fg:w="3"/><text x="88.1204%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.21%)</title><rect x="87.8704%" y="1397" width="0.2068%" height="15" fill="rgb(219,149,40)" fg:x="1275" fg:w="3"/><text x="88.1204%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sysinfo::linux::disk::Disk]&gt; (3 samples, 0.21%)</title><rect x="87.8704%" y="1381" width="0.2068%" height="15" fill="rgb(210,127,46)" fg:x="1275" fg:w="3"/><text x="88.1204%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;sysinfo::linux::disk::Disk&gt; (3 samples, 0.21%)</title><rect x="87.8704%" y="1365" width="0.2068%" height="15" fill="rgb(220,106,7)" fg:x="1275" fg:w="3"/><text x="88.1204%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (2 samples, 0.14%)</title><rect x="87.9394%" y="1349" width="0.1378%" height="15" fill="rgb(249,31,22)" fg:x="1276" fg:w="2"/><text x="88.1894%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::os_str::Buf&gt; (2 samples, 0.14%)</title><rect x="87.9394%" y="1333" width="0.1378%" height="15" fill="rgb(253,1,49)" fg:x="1276" fg:w="2"/><text x="88.1894%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="87.9394%" y="1317" width="0.1378%" height="15" fill="rgb(227,144,33)" fg:x="1276" fg:w="2"/><text x="88.1894%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="87.9394%" y="1301" width="0.1378%" height="15" fill="rgb(249,163,44)" fg:x="1276" fg:w="2"/><text x="88.1894%" y="1311.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="87.9394%" y="1285" width="0.1378%" height="15" fill="rgb(234,15,39)" fg:x="1276" fg:w="2"/><text x="88.1894%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.14%)</title><rect x="87.9394%" y="1269" width="0.1378%" height="15" fill="rgb(207,66,16)" fg:x="1276" fg:w="2"/><text x="88.1894%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.14%)</title><rect x="87.9394%" y="1253" width="0.1378%" height="15" fill="rgb(233,112,24)" fg:x="1276" fg:w="2"/><text x="88.1894%" y="1263.50"></text></g><g><title>cfree (2 samples, 0.14%)</title><rect x="87.9394%" y="1237" width="0.1378%" height="15" fill="rgb(230,90,22)" fg:x="1276" fg:w="2"/><text x="88.1894%" y="1247.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="88.0083%" y="1221" width="0.0689%" height="15" fill="rgb(229,61,13)" fg:x="1277" fg:w="1"/><text x="88.2583%" y="1231.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.07%)</title><rect x="88.0772%" y="1125" width="0.0689%" height="15" fill="rgb(225,57,24)" fg:x="1278" fg:w="1"/><text x="88.3272%" y="1135.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.07%)</title><rect x="88.0772%" y="1109" width="0.0689%" height="15" fill="rgb(208,169,48)" fg:x="1278" fg:w="1"/><text x="88.3272%" y="1119.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="88.0772%" y="1205" width="0.2068%" height="15" fill="rgb(244,218,51)" fg:x="1278" fg:w="3"/><text x="88.3272%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="88.0772%" y="1189" width="0.2068%" height="15" fill="rgb(214,148,10)" fg:x="1278" fg:w="3"/><text x="88.3272%" y="1199.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="88.0772%" y="1173" width="0.2068%" height="15" fill="rgb(225,174,27)" fg:x="1278" fg:w="3"/><text x="88.3272%" y="1183.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (3 samples, 0.21%)</title><rect x="88.0772%" y="1157" width="0.2068%" height="15" fill="rgb(230,96,26)" fg:x="1278" fg:w="3"/><text x="88.3272%" y="1167.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (3 samples, 0.21%)</title><rect x="88.0772%" y="1141" width="0.2068%" height="15" fill="rgb(232,10,30)" fg:x="1278" fg:w="3"/><text x="88.3272%" y="1151.50"></text></g><g><title>core::slice::memchr::memchr (2 samples, 0.14%)</title><rect x="88.1461%" y="1125" width="0.1378%" height="15" fill="rgb(222,8,50)" fg:x="1279" fg:w="2"/><text x="88.3961%" y="1135.50"></text></g><g><title>core::slice::memchr::memchr_aligned (2 samples, 0.14%)</title><rect x="88.1461%" y="1109" width="0.1378%" height="15" fill="rgb(213,81,27)" fg:x="1279" fg:w="2"/><text x="88.3961%" y="1119.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.07%)</title><rect x="88.2150%" y="1093" width="0.0689%" height="15" fill="rgb(245,50,10)" fg:x="1280" fg:w="1"/><text x="88.4650%" y="1103.50"></text></g><g><title>&lt;std::path::Path as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.07%)</title><rect x="88.2839%" y="1109" width="0.0689%" height="15" fill="rgb(216,100,18)" fg:x="1281" fg:w="1"/><text x="88.5339%" y="1119.50"></text></g><g><title>std::path::Path::to_path_buf (1 samples, 0.07%)</title><rect x="88.2839%" y="1093" width="0.0689%" height="15" fill="rgb(236,147,54)" fg:x="1281" fg:w="1"/><text x="88.5339%" y="1103.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (1 samples, 0.07%)</title><rect x="88.2839%" y="1077" width="0.0689%" height="15" fill="rgb(205,143,26)" fg:x="1281" fg:w="1"/><text x="88.5339%" y="1087.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (1 samples, 0.07%)</title><rect x="88.2839%" y="1061" width="0.0689%" height="15" fill="rgb(236,26,9)" fg:x="1281" fg:w="1"/><text x="88.5339%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.07%)</title><rect x="88.2839%" y="1045" width="0.0689%" height="15" fill="rgb(221,165,53)" fg:x="1281" fg:w="1"/><text x="88.5339%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="88.2839%" y="1029" width="0.0689%" height="15" fill="rgb(214,110,17)" fg:x="1281" fg:w="1"/><text x="88.5339%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="88.2839%" y="1013" width="0.0689%" height="15" fill="rgb(237,197,12)" fg:x="1281" fg:w="1"/><text x="88.5339%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="88.2839%" y="997" width="0.0689%" height="15" fill="rgb(205,84,17)" fg:x="1281" fg:w="1"/><text x="88.5339%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="88.2839%" y="981" width="0.0689%" height="15" fill="rgb(237,18,45)" fg:x="1281" fg:w="1"/><text x="88.5339%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="88.2839%" y="965" width="0.0689%" height="15" fill="rgb(221,87,14)" fg:x="1281" fg:w="1"/><text x="88.5339%" y="975.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="88.2839%" y="949" width="0.0689%" height="15" fill="rgb(238,186,15)" fg:x="1281" fg:w="1"/><text x="88.5339%" y="959.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim (1 samples, 0.07%)</title><rect x="88.3529%" y="1093" width="0.0689%" height="15" fill="rgb(208,115,11)" fg:x="1282" fg:w="1"/><text x="88.6029%" y="1103.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (1 samples, 0.07%)</title><rect x="88.3529%" y="1077" width="0.0689%" height="15" fill="rgb(254,175,0)" fg:x="1282" fg:w="1"/><text x="88.6029%" y="1087.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::ReverseSearcher&gt;::next_reject_back (1 samples, 0.07%)</title><rect x="88.3529%" y="1061" width="0.0689%" height="15" fill="rgb(227,24,42)" fg:x="1282" fg:w="1"/><text x="88.6029%" y="1071.50"></text></g><g><title>core::str::pattern::ReverseSearcher::next_reject_back (1 samples, 0.07%)</title><rect x="88.3529%" y="1045" width="0.0689%" height="15" fill="rgb(223,211,37)" fg:x="1282" fg:w="1"/><text x="88.6029%" y="1055.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::ReverseSearcher&gt;::next_back (1 samples, 0.07%)</title><rect x="88.3529%" y="1029" width="0.0689%" height="15" fill="rgb(235,49,27)" fg:x="1282" fg:w="1"/><text x="88.6029%" y="1039.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.07%)</title><rect x="88.3529%" y="1013" width="0.0689%" height="15" fill="rgb(254,97,51)" fg:x="1282" fg:w="1"/><text x="88.6029%" y="1023.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.07%)</title><rect x="88.3529%" y="997" width="0.0689%" height="15" fill="rgb(249,51,40)" fg:x="1282" fg:w="1"/><text x="88.6029%" y="1007.50"></text></g><g><title>core::str::validations::next_code_point_reverse (1 samples, 0.07%)</title><rect x="88.3529%" y="981" width="0.0689%" height="15" fill="rgb(210,128,45)" fg:x="1282" fg:w="1"/><text x="88.6029%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.07%)</title><rect x="88.3529%" y="965" width="0.0689%" height="15" fill="rgb(224,137,50)" fg:x="1282" fg:w="1"/><text x="88.6029%" y="975.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_start_matches (2 samples, 0.14%)</title><rect x="88.4218%" y="1093" width="0.1378%" height="15" fill="rgb(242,15,9)" fg:x="1283" fg:w="2"/><text x="88.6718%" y="1103.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.14%)</title><rect x="88.4218%" y="1077" width="0.1378%" height="15" fill="rgb(233,187,41)" fg:x="1283" fg:w="2"/><text x="88.6718%" y="1087.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.14%)</title><rect x="88.4218%" y="1061" width="0.1378%" height="15" fill="rgb(227,2,29)" fg:x="1283" fg:w="2"/><text x="88.6718%" y="1071.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (2 samples, 0.14%)</title><rect x="88.4218%" y="1045" width="0.1378%" height="15" fill="rgb(222,70,3)" fg:x="1283" fg:w="2"/><text x="88.6718%" y="1055.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (2 samples, 0.14%)</title><rect x="88.4218%" y="1029" width="0.1378%" height="15" fill="rgb(213,11,42)" fg:x="1283" fg:w="2"/><text x="88.6718%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="88.6285%" y="1045" width="0.0689%" height="15" fill="rgb(225,150,9)" fg:x="1286" fg:w="1"/><text x="88.8785%" y="1055.50"></text></g><g><title>realpath (3 samples, 0.21%)</title><rect x="88.5596%" y="1061" width="0.2068%" height="15" fill="rgb(230,162,45)" fg:x="1285" fg:w="3"/><text x="88.8096%" y="1071.50"></text></g><g><title>getcwd (1 samples, 0.07%)</title><rect x="88.6975%" y="1045" width="0.0689%" height="15" fill="rgb(222,14,52)" fg:x="1287" fg:w="1"/><text x="88.9475%" y="1055.50"></text></g><g><title>std::fs::canonicalize (4 samples, 0.28%)</title><rect x="88.5596%" y="1093" width="0.2757%" height="15" fill="rgb(254,198,14)" fg:x="1285" fg:w="4"/><text x="88.8096%" y="1103.50"></text></g><g><title>std::sys::unix::fs::canonicalize (4 samples, 0.28%)</title><rect x="88.5596%" y="1077" width="0.2757%" height="15" fill="rgb(220,217,30)" fg:x="1285" fg:w="4"/><text x="88.8096%" y="1087.50"></text></g><g><title>std::io::error::Error::last_os_error (1 samples, 0.07%)</title><rect x="88.7664%" y="1061" width="0.0689%" height="15" fill="rgb(215,146,41)" fg:x="1288" fg:w="1"/><text x="89.0164%" y="1071.50"></text></g><g><title>std::io::error::Error::from_raw_os_error (1 samples, 0.07%)</title><rect x="88.7664%" y="1045" width="0.0689%" height="15" fill="rgb(217,27,36)" fg:x="1288" fg:w="1"/><text x="89.0164%" y="1055.50"></text></g><g><title>std::io::error::repr_bitpacked::Repr::new_os (1 samples, 0.07%)</title><rect x="88.7664%" y="1029" width="0.0689%" height="15" fill="rgb(219,218,39)" fg:x="1288" fg:w="1"/><text x="89.0164%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.21%)</title><rect x="88.8353%" y="949" width="0.2068%" height="15" fill="rgb(219,4,42)" fg:x="1289" fg:w="3"/><text x="89.0853%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.21%)</title><rect x="88.8353%" y="933" width="0.2068%" height="15" fill="rgb(249,119,36)" fg:x="1289" fg:w="3"/><text x="89.0853%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.21%)</title><rect x="88.8353%" y="917" width="0.2068%" height="15" fill="rgb(209,23,33)" fg:x="1289" fg:w="3"/><text x="89.0853%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.21%)</title><rect x="88.8353%" y="901" width="0.2068%" height="15" fill="rgb(211,10,0)" fg:x="1289" fg:w="3"/><text x="89.0853%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.21%)</title><rect x="88.8353%" y="885" width="0.2068%" height="15" fill="rgb(208,99,37)" fg:x="1289" fg:w="3"/><text x="89.0853%" y="895.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.21%)</title><rect x="88.8353%" y="869" width="0.2068%" height="15" fill="rgb(213,132,31)" fg:x="1289" fg:w="3"/><text x="89.0853%" y="879.50"></text></g><g><title>malloc (2 samples, 0.14%)</title><rect x="88.9042%" y="853" width="0.1378%" height="15" fill="rgb(243,129,40)" fg:x="1290" fg:w="2"/><text x="89.1542%" y="863.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="88.9042%" y="837" width="0.1378%" height="15" fill="rgb(210,66,33)" fg:x="1290" fg:w="2"/><text x="89.1542%" y="847.50"></text></g><g><title>std::path::Path::to_path_buf (4 samples, 0.28%)</title><rect x="88.8353%" y="1061" width="0.2757%" height="15" fill="rgb(209,189,4)" fg:x="1289" fg:w="4"/><text x="89.0853%" y="1071.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (4 samples, 0.28%)</title><rect x="88.8353%" y="1045" width="0.2757%" height="15" fill="rgb(214,107,37)" fg:x="1289" fg:w="4"/><text x="89.0853%" y="1055.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (4 samples, 0.28%)</title><rect x="88.8353%" y="1029" width="0.2757%" height="15" fill="rgb(245,88,54)" fg:x="1289" fg:w="4"/><text x="89.0853%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.28%)</title><rect x="88.8353%" y="1013" width="0.2757%" height="15" fill="rgb(205,146,20)" fg:x="1289" fg:w="4"/><text x="89.0853%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.28%)</title><rect x="88.8353%" y="997" width="0.2757%" height="15" fill="rgb(220,161,25)" fg:x="1289" fg:w="4"/><text x="89.0853%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.28%)</title><rect x="88.8353%" y="981" width="0.2757%" height="15" fill="rgb(215,152,15)" fg:x="1289" fg:w="4"/><text x="89.0853%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.28%)</title><rect x="88.8353%" y="965" width="0.2757%" height="15" fill="rgb(233,192,44)" fg:x="1289" fg:w="4"/><text x="89.0853%" y="975.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="89.0420%" y="949" width="0.0689%" height="15" fill="rgb(240,170,46)" fg:x="1292" fg:w="1"/><text x="89.2920%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="89.0420%" y="933" width="0.0689%" height="15" fill="rgb(207,104,33)" fg:x="1292" fg:w="1"/><text x="89.2920%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="89.0420%" y="917" width="0.0689%" height="15" fill="rgb(219,21,39)" fg:x="1292" fg:w="1"/><text x="89.2920%" y="927.50"></text></g><g><title>std::path::Path::join (5 samples, 0.34%)</title><rect x="88.8353%" y="1093" width="0.3446%" height="15" fill="rgb(214,133,29)" fg:x="1289" fg:w="5"/><text x="89.0853%" y="1103.50"></text></g><g><title>std::path::Path::_join (5 samples, 0.34%)</title><rect x="88.8353%" y="1077" width="0.3446%" height="15" fill="rgb(226,93,6)" fg:x="1289" fg:w="5"/><text x="89.0853%" y="1087.50"></text></g><g><title>std::path::PathBuf::push (1 samples, 0.07%)</title><rect x="89.1110%" y="1061" width="0.0689%" height="15" fill="rgb(252,222,34)" fg:x="1293" fg:w="1"/><text x="89.3610%" y="1071.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.07%)</title><rect x="89.1110%" y="1045" width="0.0689%" height="15" fill="rgb(252,92,48)" fg:x="1293" fg:w="1"/><text x="89.3610%" y="1055.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.07%)</title><rect x="89.1110%" y="1029" width="0.0689%" height="15" fill="rgb(245,223,24)" fg:x="1293" fg:w="1"/><text x="89.3610%" y="1039.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.07%)</title><rect x="89.1110%" y="1013" width="0.0689%" height="15" fill="rgb(205,176,3)" fg:x="1293" fg:w="1"/><text x="89.3610%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="89.1110%" y="997" width="0.0689%" height="15" fill="rgb(235,151,15)" fg:x="1293" fg:w="1"/><text x="89.3610%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="89.1110%" y="981" width="0.0689%" height="15" fill="rgb(237,209,11)" fg:x="1293" fg:w="1"/><text x="89.3610%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="89.1110%" y="965" width="0.0689%" height="15" fill="rgb(243,227,24)" fg:x="1293" fg:w="1"/><text x="89.3610%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="89.1110%" y="949" width="0.0689%" height="15" fill="rgb(239,193,16)" fg:x="1293" fg:w="1"/><text x="89.3610%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="89.1110%" y="933" width="0.0689%" height="15" fill="rgb(231,27,9)" fg:x="1293" fg:w="1"/><text x="89.3610%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="89.1110%" y="917" width="0.0689%" height="15" fill="rgb(219,169,10)" fg:x="1293" fg:w="1"/><text x="89.3610%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="89.1110%" y="901" width="0.0689%" height="15" fill="rgb(244,229,43)" fg:x="1293" fg:w="1"/><text x="89.3610%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="89.1110%" y="885" width="0.0689%" height="15" fill="rgb(254,38,20)" fg:x="1293" fg:w="1"/><text x="89.3610%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="89.1110%" y="869" width="0.0689%" height="15" fill="rgb(250,47,30)" fg:x="1293" fg:w="1"/><text x="89.3610%" y="879.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="89.1110%" y="853" width="0.0689%" height="15" fill="rgb(224,124,36)" fg:x="1293" fg:w="1"/><text x="89.3610%" y="863.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="89.1110%" y="837" width="0.0689%" height="15" fill="rgb(246,68,51)" fg:x="1293" fg:w="1"/><text x="89.3610%" y="847.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="89.1110%" y="821" width="0.0689%" height="15" fill="rgb(253,43,49)" fg:x="1293" fg:w="1"/><text x="89.3610%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (1 samples, 0.07%)</title><rect x="89.1799%" y="1077" width="0.0689%" height="15" fill="rgb(219,54,36)" fg:x="1294" fg:w="1"/><text x="89.4299%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (1 samples, 0.07%)</title><rect x="89.1799%" y="1061" width="0.0689%" height="15" fill="rgb(227,133,34)" fg:x="1294" fg:w="1"/><text x="89.4299%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (1 samples, 0.07%)</title><rect x="89.1799%" y="1045" width="0.0689%" height="15" fill="rgb(247,227,15)" fg:x="1294" fg:w="1"/><text x="89.4299%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1 samples, 0.07%)</title><rect x="89.1799%" y="1029" width="0.0689%" height="15" fill="rgb(229,96,14)" fg:x="1294" fg:w="1"/><text x="89.4299%" y="1039.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="89.1799%" y="1013" width="0.0689%" height="15" fill="rgb(220,79,17)" fg:x="1294" fg:w="1"/><text x="89.4299%" y="1023.50"></text></g><g><title>__close (1 samples, 0.07%)</title><rect x="89.1799%" y="997" width="0.0689%" height="15" fill="rgb(205,131,53)" fg:x="1294" fg:w="1"/><text x="89.4299%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="89.1799%" y="981" width="0.0689%" height="15" fill="rgb(209,50,29)" fg:x="1294" fg:w="1"/><text x="89.4299%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.07%)</title><rect x="89.2488%" y="1013" width="0.0689%" height="15" fill="rgb(245,86,46)" fg:x="1295" fg:w="1"/><text x="89.4988%" y="1023.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.07%)</title><rect x="89.2488%" y="997" width="0.0689%" height="15" fill="rgb(235,66,46)" fg:x="1295" fg:w="1"/><text x="89.4988%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.07%)</title><rect x="89.2488%" y="981" width="0.0689%" height="15" fill="rgb(232,148,31)" fg:x="1295" fg:w="1"/><text x="89.4988%" y="991.50"></text></g><g><title>open64 (1 samples, 0.07%)</title><rect x="89.2488%" y="965" width="0.0689%" height="15" fill="rgb(217,149,8)" fg:x="1295" fg:w="1"/><text x="89.4988%" y="975.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="89.2488%" y="949" width="0.0689%" height="15" fill="rgb(209,183,11)" fg:x="1295" fg:w="1"/><text x="89.4988%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="89.3177%" y="949" width="0.0689%" height="15" fill="rgb(208,55,20)" fg:x="1296" fg:w="1"/><text x="89.5677%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="89.3177%" y="933" width="0.0689%" height="15" fill="rgb(218,39,14)" fg:x="1296" fg:w="1"/><text x="89.5677%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="89.3177%" y="917" width="0.0689%" height="15" fill="rgb(216,169,33)" fg:x="1296" fg:w="1"/><text x="89.5677%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="89.3177%" y="901" width="0.0689%" height="15" fill="rgb(233,80,24)" fg:x="1296" fg:w="1"/><text x="89.5677%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="89.3177%" y="885" width="0.0689%" height="15" fill="rgb(213,179,31)" fg:x="1296" fg:w="1"/><text x="89.5677%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="89.3177%" y="869" width="0.0689%" height="15" fill="rgb(209,19,5)" fg:x="1296" fg:w="1"/><text x="89.5677%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="89.3177%" y="853" width="0.0689%" height="15" fill="rgb(219,18,35)" fg:x="1296" fg:w="1"/><text x="89.5677%" y="863.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="89.3177%" y="837" width="0.0689%" height="15" fill="rgb(209,169,16)" fg:x="1296" fg:w="1"/><text x="89.5677%" y="847.50"></text></g><g><title>std::fs::File::open (5 samples, 0.34%)</title><rect x="89.2488%" y="1077" width="0.3446%" height="15" fill="rgb(245,90,51)" fg:x="1295" fg:w="5"/><text x="89.4988%" y="1087.50"></text></g><g><title>std::fs::OpenOptions::open (5 samples, 0.34%)</title><rect x="89.2488%" y="1061" width="0.3446%" height="15" fill="rgb(220,99,45)" fg:x="1295" fg:w="5"/><text x="89.4988%" y="1071.50"></text></g><g><title>std::fs::OpenOptions::_open (5 samples, 0.34%)</title><rect x="89.2488%" y="1045" width="0.3446%" height="15" fill="rgb(249,89,25)" fg:x="1295" fg:w="5"/><text x="89.4988%" y="1055.50"></text></g><g><title>std::sys::unix::fs::File::open (5 samples, 0.34%)</title><rect x="89.2488%" y="1029" width="0.3446%" height="15" fill="rgb(239,193,0)" fg:x="1295" fg:w="5"/><text x="89.4988%" y="1039.50"></text></g><g><title>std::sys::unix::fs::cstr (4 samples, 0.28%)</title><rect x="89.3177%" y="1013" width="0.2757%" height="15" fill="rgb(231,126,1)" fg:x="1296" fg:w="4"/><text x="89.5677%" y="1023.50"></text></g><g><title>alloc::ffi::c_str::CString::new (4 samples, 0.28%)</title><rect x="89.3177%" y="997" width="0.2757%" height="15" fill="rgb(243,166,3)" fg:x="1296" fg:w="4"/><text x="89.5677%" y="1007.50"></text></g><g><title>&lt;&amp;[u8] as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (4 samples, 0.28%)</title><rect x="89.3177%" y="981" width="0.2757%" height="15" fill="rgb(223,22,34)" fg:x="1296" fg:w="4"/><text x="89.5677%" y="991.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (4 samples, 0.28%)</title><rect x="89.3177%" y="965" width="0.2757%" height="15" fill="rgb(251,52,51)" fg:x="1296" fg:w="4"/><text x="89.5677%" y="975.50"></text></g><g><title>core::slice::memchr::memchr (3 samples, 0.21%)</title><rect x="89.3866%" y="949" width="0.2068%" height="15" fill="rgb(221,165,28)" fg:x="1297" fg:w="3"/><text x="89.6366%" y="959.50"></text></g><g><title>core::slice::memchr::memchr_aligned (3 samples, 0.21%)</title><rect x="89.3866%" y="933" width="0.2068%" height="15" fill="rgb(218,121,47)" fg:x="1297" fg:w="3"/><text x="89.6366%" y="943.50"></text></g><g><title>sysinfo::linux::disk::find_type_for_device_name (19 samples, 1.31%)</title><rect x="88.3529%" y="1109" width="1.3094%" height="15" fill="rgb(209,120,9)" fg:x="1282" fg:w="19"/><text x="88.6029%" y="1119.50"></text></g><g><title>sysinfo::linux::utils::get_all_data (7 samples, 0.48%)</title><rect x="89.1799%" y="1093" width="0.4824%" height="15" fill="rgb(236,68,12)" fg:x="1294" fg:w="7"/><text x="89.4299%" y="1103.50"></text></g><g><title>sysinfo::linux::utils::get_all_data_from_file (1 samples, 0.07%)</title><rect x="89.5934%" y="1077" width="0.0689%" height="15" fill="rgb(225,194,26)" fg:x="1300" fg:w="1"/><text x="89.8434%" y="1087.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (1 samples, 0.07%)</title><rect x="89.5934%" y="1061" width="0.0689%" height="15" fill="rgb(231,84,39)" fg:x="1300" fg:w="1"/><text x="89.8434%" y="1071.50"></text></g><g><title>alloc::string::String::reserve (1 samples, 0.07%)</title><rect x="89.5934%" y="1045" width="0.0689%" height="15" fill="rgb(210,11,45)" fg:x="1300" fg:w="1"/><text x="89.8434%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="89.5934%" y="1029" width="0.0689%" height="15" fill="rgb(224,54,52)" fg:x="1300" fg:w="1"/><text x="89.8434%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="89.5934%" y="1013" width="0.0689%" height="15" fill="rgb(238,102,14)" fg:x="1300" fg:w="1"/><text x="89.8434%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="89.5934%" y="997" width="0.0689%" height="15" fill="rgb(243,160,52)" fg:x="1300" fg:w="1"/><text x="89.8434%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="89.5934%" y="981" width="0.0689%" height="15" fill="rgb(216,114,19)" fg:x="1300" fg:w="1"/><text x="89.8434%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="89.5934%" y="965" width="0.0689%" height="15" fill="rgb(244,166,37)" fg:x="1300" fg:w="1"/><text x="89.8434%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="89.5934%" y="949" width="0.0689%" height="15" fill="rgb(246,29,44)" fg:x="1300" fg:w="1"/><text x="89.8434%" y="959.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="89.5934%" y="933" width="0.0689%" height="15" fill="rgb(215,56,53)" fg:x="1300" fg:w="1"/><text x="89.8434%" y="943.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="89.5934%" y="917" width="0.0689%" height="15" fill="rgb(217,60,2)" fg:x="1300" fg:w="1"/><text x="89.8434%" y="927.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="89.5934%" y="901" width="0.0689%" height="15" fill="rgb(207,26,24)" fg:x="1300" fg:w="1"/><text x="89.8434%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (21 samples, 1.45%)</title><rect x="88.2839%" y="1173" width="1.4473%" height="15" fill="rgb(252,210,15)" fg:x="1281" fg:w="21"/><text x="88.5339%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (21 samples, 1.45%)</title><rect x="88.2839%" y="1157" width="1.4473%" height="15" fill="rgb(253,209,26)" fg:x="1281" fg:w="21"/><text x="88.5339%" y="1167.50"></text></g><g><title>sysinfo::linux::disk::get_all_disks_inner::{{closure}} (21 samples, 1.45%)</title><rect x="88.2839%" y="1141" width="1.4473%" height="15" fill="rgb(238,170,14)" fg:x="1281" fg:w="21"/><text x="88.5339%" y="1151.50"></text></g><g><title>sysinfo::linux::disk::new_disk (21 samples, 1.45%)</title><rect x="88.2839%" y="1125" width="1.4473%" height="15" fill="rgb(216,178,15)" fg:x="1281" fg:w="21"/><text x="88.5339%" y="1135.50"></text></g><g><title>sysinfo::linux::utils::to_cpath (1 samples, 0.07%)</title><rect x="89.6623%" y="1109" width="0.0689%" height="15" fill="rgb(250,197,2)" fg:x="1301" fg:w="1"/><text x="89.9123%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.07%)</title><rect x="89.6623%" y="1093" width="0.0689%" height="15" fill="rgb(212,70,42)" fg:x="1301" fg:w="1"/><text x="89.9123%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="89.6623%" y="1077" width="0.0689%" height="15" fill="rgb(227,213,9)" fg:x="1301" fg:w="1"/><text x="89.9123%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="89.6623%" y="1061" width="0.0689%" height="15" fill="rgb(245,99,25)" fg:x="1301" fg:w="1"/><text x="89.9123%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="89.6623%" y="1045" width="0.0689%" height="15" fill="rgb(250,82,29)" fg:x="1301" fg:w="1"/><text x="89.9123%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="89.6623%" y="1029" width="0.0689%" height="15" fill="rgb(241,226,54)" fg:x="1301" fg:w="1"/><text x="89.9123%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="89.6623%" y="1013" width="0.0689%" height="15" fill="rgb(221,99,41)" fg:x="1301" fg:w="1"/><text x="89.9123%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="89.6623%" y="997" width="0.0689%" height="15" fill="rgb(213,90,21)" fg:x="1301" fg:w="1"/><text x="89.9123%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="89.6623%" y="981" width="0.0689%" height="15" fill="rgb(205,208,24)" fg:x="1301" fg:w="1"/><text x="89.9123%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="89.6623%" y="965" width="0.0689%" height="15" fill="rgb(246,31,12)" fg:x="1301" fg:w="1"/><text x="89.9123%" y="975.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="89.6623%" y="949" width="0.0689%" height="15" fill="rgb(213,154,6)" fg:x="1301" fg:w="1"/><text x="89.9123%" y="959.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="89.6623%" y="933" width="0.0689%" height="15" fill="rgb(222,163,29)" fg:x="1301" fg:w="1"/><text x="89.9123%" y="943.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (23 samples, 1.59%)</title><rect x="88.2839%" y="1189" width="1.5851%" height="15" fill="rgb(227,201,8)" fg:x="1281" fg:w="23"/><text x="88.5339%" y="1199.50"></text></g><g><title>sysinfo::linux::disk::get_all_disks_inner::{{closure}} (2 samples, 0.14%)</title><rect x="89.7312%" y="1173" width="0.1378%" height="15" fill="rgb(233,9,32)" fg:x="1302" fg:w="2"/><text x="89.9812%" y="1183.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (1 samples, 0.07%)</title><rect x="89.8001%" y="1157" width="0.0689%" height="15" fill="rgb(217,54,24)" fg:x="1303" fg:w="1"/><text x="90.0501%" y="1167.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (1 samples, 0.07%)</title><rect x="89.8001%" y="1141" width="0.0689%" height="15" fill="rgb(235,192,0)" fg:x="1303" fg:w="1"/><text x="90.0501%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (1 samples, 0.07%)</title><rect x="89.8001%" y="1125" width="0.0689%" height="15" fill="rgb(235,45,9)" fg:x="1303" fg:w="1"/><text x="90.0501%" y="1135.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (5 samples, 0.34%)</title><rect x="90.0069%" y="1029" width="0.3446%" height="15" fill="rgb(246,42,40)" fg:x="1306" fg:w="5"/><text x="90.2569%" y="1039.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::FnMut&lt;(char,)&gt;&gt;::call_mut (5 samples, 0.34%)</title><rect x="90.0069%" y="1013" width="0.3446%" height="15" fill="rgb(248,111,24)" fg:x="1306" fg:w="5"/><text x="90.2569%" y="1023.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::Fn&lt;(char,)&gt;&gt;::call (5 samples, 0.34%)</title><rect x="90.0069%" y="997" width="0.3446%" height="15" fill="rgb(249,65,22)" fg:x="1306" fg:w="5"/><text x="90.2569%" y="1007.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (5 samples, 0.34%)</title><rect x="90.0069%" y="981" width="0.3446%" height="15" fill="rgb(238,111,51)" fg:x="1306" fg:w="5"/><text x="90.2569%" y="991.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.62%)</title><rect x="89.8691%" y="1173" width="0.6203%" height="15" fill="rgb(250,118,22)" fg:x="1304" fg:w="9"/><text x="90.1191%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.62%)</title><rect x="89.8691%" y="1157" width="0.6203%" height="15" fill="rgb(234,84,26)" fg:x="1304" fg:w="9"/><text x="90.1191%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (9 samples, 0.62%)</title><rect x="89.8691%" y="1141" width="0.6203%" height="15" fill="rgb(243,172,12)" fg:x="1304" fg:w="9"/><text x="90.1191%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.62%)</title><rect x="89.8691%" y="1125" width="0.6203%" height="15" fill="rgb(236,150,49)" fg:x="1304" fg:w="9"/><text x="90.1191%" y="1135.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.55%)</title><rect x="89.9380%" y="1109" width="0.5513%" height="15" fill="rgb(225,197,26)" fg:x="1305" fg:w="8"/><text x="90.1880%" y="1119.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (8 samples, 0.55%)</title><rect x="89.9380%" y="1093" width="0.5513%" height="15" fill="rgb(214,17,42)" fg:x="1305" fg:w="8"/><text x="90.1880%" y="1103.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (7 samples, 0.48%)</title><rect x="90.0069%" y="1077" width="0.4824%" height="15" fill="rgb(224,165,40)" fg:x="1306" fg:w="7"/><text x="90.2569%" y="1087.50"></text></g><g><title>core::str::pattern::Searcher::next_match (7 samples, 0.48%)</title><rect x="90.0069%" y="1061" width="0.4824%" height="15" fill="rgb(246,100,4)" fg:x="1306" fg:w="7"/><text x="90.2569%" y="1071.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (7 samples, 0.48%)</title><rect x="90.0069%" y="1045" width="0.4824%" height="15" fill="rgb(222,103,0)" fg:x="1306" fg:w="7"/><text x="90.2569%" y="1055.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="90.3515%" y="1029" width="0.1378%" height="15" fill="rgb(227,189,26)" fg:x="1311" fg:w="2"/><text x="90.6015%" y="1039.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="90.3515%" y="1013" width="0.1378%" height="15" fill="rgb(214,202,17)" fg:x="1311" fg:w="2"/><text x="90.6015%" y="1023.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.14%)</title><rect x="90.3515%" y="997" width="0.1378%" height="15" fill="rgb(229,111,3)" fg:x="1311" fg:w="2"/><text x="90.6015%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="90.3515%" y="981" width="0.1378%" height="15" fill="rgb(229,172,15)" fg:x="1311" fg:w="2"/><text x="90.6015%" y="991.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.14%)</title><rect x="90.3515%" y="965" width="0.1378%" height="15" fill="rgb(230,224,35)" fg:x="1311" fg:w="2"/><text x="90.6015%" y="975.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next (1 samples, 0.07%)</title><rect x="90.6961%" y="1109" width="0.0689%" height="15" fill="rgb(251,141,6)" fg:x="1316" fg:w="1"/><text x="90.9461%" y="1119.50"></text></g><g><title>&lt;core::str::iter::MatchIndices&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.62%)</title><rect x="90.5582%" y="1157" width="0.6203%" height="15" fill="rgb(225,208,6)" fg:x="1314" fg:w="9"/><text x="90.8082%" y="1167.50"></text></g><g><title>core::str::iter::MatchIndicesInternal&lt;P&gt;::next (9 samples, 0.62%)</title><rect x="90.5582%" y="1141" width="0.6203%" height="15" fill="rgb(246,181,16)" fg:x="1314" fg:w="9"/><text x="90.8082%" y="1151.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (9 samples, 0.62%)</title><rect x="90.5582%" y="1125" width="0.6203%" height="15" fill="rgb(227,129,36)" fg:x="1314" fg:w="9"/><text x="90.8082%" y="1135.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (6 samples, 0.41%)</title><rect x="90.7650%" y="1109" width="0.4135%" height="15" fill="rgb(248,117,24)" fg:x="1317" fg:w="6"/><text x="91.0150%" y="1119.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.14%)</title><rect x="91.0407%" y="1093" width="0.1378%" height="15" fill="rgb(214,185,35)" fg:x="1321" fg:w="2"/><text x="91.2907%" y="1103.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2 samples, 0.14%)</title><rect x="91.0407%" y="1077" width="0.1378%" height="15" fill="rgb(236,150,34)" fg:x="1321" fg:w="2"/><text x="91.2907%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.41%)</title><rect x="91.1785%" y="1093" width="0.4135%" height="15" fill="rgb(243,228,27)" fg:x="1323" fg:w="6"/><text x="91.4285%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.41%)</title><rect x="91.1785%" y="1077" width="0.4135%" height="15" fill="rgb(245,77,44)" fg:x="1323" fg:w="6"/><text x="91.4285%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.41%)</title><rect x="91.1785%" y="1061" width="0.4135%" height="15" fill="rgb(235,214,42)" fg:x="1323" fg:w="6"/><text x="91.4285%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.41%)</title><rect x="91.1785%" y="1045" width="0.4135%" height="15" fill="rgb(221,74,3)" fg:x="1323" fg:w="6"/><text x="91.4285%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.41%)</title><rect x="91.1785%" y="1029" width="0.4135%" height="15" fill="rgb(206,121,29)" fg:x="1323" fg:w="6"/><text x="91.4285%" y="1039.50"></text></g><g><title>malloc (6 samples, 0.41%)</title><rect x="91.1785%" y="1013" width="0.4135%" height="15" fill="rgb(249,131,53)" fg:x="1323" fg:w="6"/><text x="91.4285%" y="1023.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.48%)</title><rect x="91.1785%" y="1157" width="0.4824%" height="15" fill="rgb(236,170,29)" fg:x="1323" fg:w="7"/><text x="91.4285%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.48%)</title><rect x="91.1785%" y="1141" width="0.4824%" height="15" fill="rgb(247,96,15)" fg:x="1323" fg:w="7"/><text x="91.4285%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.48%)</title><rect x="91.1785%" y="1125" width="0.4824%" height="15" fill="rgb(211,210,7)" fg:x="1323" fg:w="7"/><text x="91.4285%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.48%)</title><rect x="91.1785%" y="1109" width="0.4824%" height="15" fill="rgb(240,88,50)" fg:x="1323" fg:w="7"/><text x="91.4285%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="91.5920%" y="1093" width="0.0689%" height="15" fill="rgb(209,229,26)" fg:x="1329" fg:w="1"/><text x="91.8420%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="91.5920%" y="1077" width="0.0689%" height="15" fill="rgb(210,68,23)" fg:x="1329" fg:w="1"/><text x="91.8420%" y="1087.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.07%)</title><rect x="91.7298%" y="1093" width="0.0689%" height="15" fill="rgb(229,180,13)" fg:x="1331" fg:w="1"/><text x="91.9798%" y="1103.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="91.7298%" y="1077" width="0.0689%" height="15" fill="rgb(236,53,44)" fg:x="1331" fg:w="1"/><text x="91.9798%" y="1087.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="91.7298%" y="1061" width="0.0689%" height="15" fill="rgb(244,214,29)" fg:x="1331" fg:w="1"/><text x="91.9798%" y="1071.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (2 samples, 0.14%)</title><rect x="91.7988%" y="1093" width="0.1378%" height="15" fill="rgb(220,75,29)" fg:x="1332" fg:w="2"/><text x="92.0488%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.14%)</title><rect x="91.7988%" y="1077" width="0.1378%" height="15" fill="rgb(214,183,37)" fg:x="1332" fg:w="2"/><text x="92.0488%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="91.8677%" y="1061" width="0.0689%" height="15" fill="rgb(239,117,29)" fg:x="1333" fg:w="1"/><text x="92.1177%" y="1071.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (26 samples, 1.79%)</title><rect x="90.4893%" y="1173" width="1.7919%" height="15" fill="rgb(237,171,35)" fg:x="1313" fg:w="26"/><text x="90.7393%" y="1183.50">a..</text></g><g><title>core::str::&lt;impl str&gt;::match_indices (9 samples, 0.62%)</title><rect x="91.6609%" y="1157" width="0.6203%" height="15" fill="rgb(229,178,53)" fg:x="1330" fg:w="9"/><text x="91.9109%" y="1167.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (9 samples, 0.62%)</title><rect x="91.6609%" y="1141" width="0.6203%" height="15" fill="rgb(210,102,19)" fg:x="1330" fg:w="9"/><text x="91.9109%" y="1151.50"></text></g><g><title>core::str::pattern::StrSearcher::new (9 samples, 0.62%)</title><rect x="91.6609%" y="1125" width="0.6203%" height="15" fill="rgb(235,127,22)" fg:x="1330" fg:w="9"/><text x="91.9109%" y="1135.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (9 samples, 0.62%)</title><rect x="91.6609%" y="1109" width="0.6203%" height="15" fill="rgb(244,31,31)" fg:x="1330" fg:w="9"/><text x="91.9109%" y="1119.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (5 samples, 0.34%)</title><rect x="91.9366%" y="1093" width="0.3446%" height="15" fill="rgb(231,43,21)" fg:x="1334" fg:w="5"/><text x="92.1866%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (63 samples, 4.34%)</title><rect x="88.0772%" y="1317" width="4.3418%" height="15" fill="rgb(217,131,35)" fg:x="1278" fg:w="63"/><text x="88.3272%" y="1327.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (63 samples, 4.34%)</title><rect x="88.0772%" y="1301" width="4.3418%" height="15" fill="rgb(221,149,4)" fg:x="1278" fg:w="63"/><text x="88.3272%" y="1311.50">alloc..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 4.34%)</title><rect x="88.0772%" y="1285" width="4.3418%" height="15" fill="rgb(232,170,28)" fg:x="1278" fg:w="63"/><text x="88.3272%" y="1295.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (63 samples, 4.34%)</title><rect x="88.0772%" y="1269" width="4.3418%" height="15" fill="rgb(238,56,10)" fg:x="1278" fg:w="63"/><text x="88.3272%" y="1279.50">core:..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (63 samples, 4.34%)</title><rect x="88.0772%" y="1253" width="4.3418%" height="15" fill="rgb(235,196,14)" fg:x="1278" fg:w="63"/><text x="88.3272%" y="1263.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (63 samples, 4.34%)</title><rect x="88.0772%" y="1237" width="4.3418%" height="15" fill="rgb(216,45,48)" fg:x="1278" fg:w="63"/><text x="88.3272%" y="1247.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (63 samples, 4.34%)</title><rect x="88.0772%" y="1221" width="4.3418%" height="15" fill="rgb(238,213,17)" fg:x="1278" fg:w="63"/><text x="88.3272%" y="1231.50">core:..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (60 samples, 4.14%)</title><rect x="88.2839%" y="1205" width="4.1351%" height="15" fill="rgb(212,13,2)" fg:x="1281" fg:w="60"/><text x="88.5339%" y="1215.50">core:..</text></g><g><title>sysinfo::linux::disk::get_all_disks_inner::{{closure}} (37 samples, 2.55%)</title><rect x="89.8691%" y="1189" width="2.5500%" height="15" fill="rgb(240,114,20)" fg:x="1304" fg:w="37"/><text x="90.1191%" y="1199.50">sy..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.14%)</title><rect x="92.2812%" y="1173" width="0.1378%" height="15" fill="rgb(228,41,40)" fg:x="1339" fg:w="2"/><text x="92.5312%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="92.2812%" y="1157" width="0.1378%" height="15" fill="rgb(244,132,35)" fg:x="1339" fg:w="2"/><text x="92.5312%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="92.2812%" y="1141" width="0.1378%" height="15" fill="rgb(253,189,4)" fg:x="1339" fg:w="2"/><text x="92.5312%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="92.2812%" y="1125" width="0.1378%" height="15" fill="rgb(224,37,19)" fg:x="1339" fg:w="2"/><text x="92.5312%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.14%)</title><rect x="92.2812%" y="1109" width="0.1378%" height="15" fill="rgb(235,223,18)" fg:x="1339" fg:w="2"/><text x="92.5312%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.14%)</title><rect x="92.2812%" y="1093" width="0.1378%" height="15" fill="rgb(235,163,25)" fg:x="1339" fg:w="2"/><text x="92.5312%" y="1103.50"></text></g><g><title>cfree (2 samples, 0.14%)</title><rect x="92.2812%" y="1077" width="0.1378%" height="15" fill="rgb(217,145,28)" fg:x="1339" fg:w="2"/><text x="92.5312%" y="1087.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="92.3501%" y="1061" width="0.0689%" height="15" fill="rgb(223,223,32)" fg:x="1340" fg:w="1"/><text x="92.6001%" y="1071.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.07%)</title><rect x="92.4190%" y="1125" width="0.0689%" height="15" fill="rgb(227,189,39)" fg:x="1341" fg:w="1"/><text x="92.6690%" y="1135.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.07%)</title><rect x="92.4190%" y="1109" width="0.0689%" height="15" fill="rgb(248,10,22)" fg:x="1341" fg:w="1"/><text x="92.6690%" y="1119.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (1 samples, 0.07%)</title><rect x="92.4879%" y="1125" width="0.0689%" height="15" fill="rgb(248,46,39)" fg:x="1342" fg:w="1"/><text x="92.7379%" y="1135.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.07%)</title><rect x="92.4879%" y="1109" width="0.0689%" height="15" fill="rgb(248,113,48)" fg:x="1342" fg:w="1"/><text x="92.7379%" y="1119.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.28%)</title><rect x="92.4190%" y="1237" width="0.2757%" height="15" fill="rgb(245,16,25)" fg:x="1341" fg:w="4"/><text x="92.6690%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.28%)</title><rect x="92.4190%" y="1221" width="0.2757%" height="15" fill="rgb(249,152,16)" fg:x="1341" fg:w="4"/><text x="92.6690%" y="1231.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.28%)</title><rect x="92.4190%" y="1205" width="0.2757%" height="15" fill="rgb(250,16,1)" fg:x="1341" fg:w="4"/><text x="92.6690%" y="1215.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (4 samples, 0.28%)</title><rect x="92.4190%" y="1189" width="0.2757%" height="15" fill="rgb(249,138,3)" fg:x="1341" fg:w="4"/><text x="92.6690%" y="1199.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (4 samples, 0.28%)</title><rect x="92.4190%" y="1173" width="0.2757%" height="15" fill="rgb(227,71,41)" fg:x="1341" fg:w="4"/><text x="92.6690%" y="1183.50"></text></g><g><title>core::slice::memchr::memchr (4 samples, 0.28%)</title><rect x="92.4190%" y="1157" width="0.2757%" height="15" fill="rgb(209,184,23)" fg:x="1341" fg:w="4"/><text x="92.6690%" y="1167.50"></text></g><g><title>core::slice::memchr::memchr_aligned (4 samples, 0.28%)</title><rect x="92.4190%" y="1141" width="0.2757%" height="15" fill="rgb(223,215,31)" fg:x="1341" fg:w="4"/><text x="92.6690%" y="1151.50"></text></g><g><title>core::slice::memchr::memchr_naive (2 samples, 0.14%)</title><rect x="92.5569%" y="1125" width="0.1378%" height="15" fill="rgb(210,146,28)" fg:x="1343" fg:w="2"/><text x="92.8069%" y="1135.50"></text></g><g><title>&lt;std::path::Path as alloc::borrow::ToOwned&gt;::to_owned (2 samples, 0.14%)</title><rect x="92.6947%" y="1125" width="0.1378%" height="15" fill="rgb(209,183,41)" fg:x="1345" fg:w="2"/><text x="92.9447%" y="1135.50"></text></g><g><title>std::path::Path::to_path_buf (2 samples, 0.14%)</title><rect x="92.6947%" y="1109" width="0.1378%" height="15" fill="rgb(209,224,45)" fg:x="1345" fg:w="2"/><text x="92.9447%" y="1119.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (2 samples, 0.14%)</title><rect x="92.6947%" y="1093" width="0.1378%" height="15" fill="rgb(224,209,51)" fg:x="1345" fg:w="2"/><text x="92.9447%" y="1103.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (2 samples, 0.14%)</title><rect x="92.6947%" y="1077" width="0.1378%" height="15" fill="rgb(223,17,39)" fg:x="1345" fg:w="2"/><text x="92.9447%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.14%)</title><rect x="92.6947%" y="1061" width="0.1378%" height="15" fill="rgb(234,204,37)" fg:x="1345" fg:w="2"/><text x="92.9447%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.14%)</title><rect x="92.6947%" y="1045" width="0.1378%" height="15" fill="rgb(236,120,5)" fg:x="1345" fg:w="2"/><text x="92.9447%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.14%)</title><rect x="92.6947%" y="1029" width="0.1378%" height="15" fill="rgb(248,97,27)" fg:x="1345" fg:w="2"/><text x="92.9447%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.14%)</title><rect x="92.6947%" y="1013" width="0.1378%" height="15" fill="rgb(240,66,17)" fg:x="1345" fg:w="2"/><text x="92.9447%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.14%)</title><rect x="92.6947%" y="997" width="0.1378%" height="15" fill="rgb(210,79,3)" fg:x="1345" fg:w="2"/><text x="92.9447%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.14%)</title><rect x="92.6947%" y="981" width="0.1378%" height="15" fill="rgb(214,176,27)" fg:x="1345" fg:w="2"/><text x="92.9447%" y="991.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="92.6947%" y="965" width="0.1378%" height="15" fill="rgb(235,185,3)" fg:x="1345" fg:w="2"/><text x="92.9447%" y="975.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="92.8325%" y="1125" width="0.0689%" height="15" fill="rgb(227,24,12)" fg:x="1347" fg:w="1"/><text x="93.0825%" y="1135.50"></text></g><g><title>alloc::ffi::c_str::CString::new (1 samples, 0.07%)</title><rect x="92.9014%" y="1093" width="0.0689%" height="15" fill="rgb(252,169,48)" fg:x="1348" fg:w="1"/><text x="93.1514%" y="1103.50"></text></g><g><title>&lt;&amp;[u8] as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.07%)</title><rect x="92.9014%" y="1077" width="0.0689%" height="15" fill="rgb(212,65,1)" fg:x="1348" fg:w="1"/><text x="93.1514%" y="1087.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.07%)</title><rect x="92.9014%" y="1061" width="0.0689%" height="15" fill="rgb(242,39,24)" fg:x="1348" fg:w="1"/><text x="93.1514%" y="1071.50"></text></g><g><title>std::fs::canonicalize (2 samples, 0.14%)</title><rect x="92.9014%" y="1125" width="0.1378%" height="15" fill="rgb(249,32,23)" fg:x="1348" fg:w="2"/><text x="93.1514%" y="1135.50"></text></g><g><title>std::sys::unix::fs::canonicalize (2 samples, 0.14%)</title><rect x="92.9014%" y="1109" width="0.1378%" height="15" fill="rgb(251,195,23)" fg:x="1348" fg:w="2"/><text x="93.1514%" y="1119.50"></text></g><g><title>realpath (1 samples, 0.07%)</title><rect x="92.9704%" y="1093" width="0.0689%" height="15" fill="rgb(236,174,8)" fg:x="1349" fg:w="1"/><text x="93.2204%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="92.9704%" y="1077" width="0.0689%" height="15" fill="rgb(220,197,8)" fg:x="1349" fg:w="1"/><text x="93.2204%" y="1087.50"></text></g><g><title>std::fs::File::open (1 samples, 0.07%)</title><rect x="93.0393%" y="1109" width="0.0689%" height="15" fill="rgb(240,108,37)" fg:x="1350" fg:w="1"/><text x="93.2893%" y="1119.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.07%)</title><rect x="93.0393%" y="1093" width="0.0689%" height="15" fill="rgb(232,176,24)" fg:x="1350" fg:w="1"/><text x="93.2893%" y="1103.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.07%)</title><rect x="93.0393%" y="1077" width="0.0689%" height="15" fill="rgb(243,35,29)" fg:x="1350" fg:w="1"/><text x="93.2893%" y="1087.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.07%)</title><rect x="93.0393%" y="1061" width="0.0689%" height="15" fill="rgb(210,37,18)" fg:x="1350" fg:w="1"/><text x="93.2893%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (9 samples, 0.62%)</title><rect x="92.6947%" y="1205" width="0.6203%" height="15" fill="rgb(224,184,40)" fg:x="1345" fg:w="9"/><text x="92.9447%" y="1215.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.62%)</title><rect x="92.6947%" y="1189" width="0.6203%" height="15" fill="rgb(236,39,29)" fg:x="1345" fg:w="9"/><text x="92.9447%" y="1199.50"></text></g><g><title>sysinfo::linux::disk::get_all_disks_inner::{{closure}} (9 samples, 0.62%)</title><rect x="92.6947%" y="1173" width="0.6203%" height="15" fill="rgb(232,48,39)" fg:x="1345" fg:w="9"/><text x="92.9447%" y="1183.50"></text></g><g><title>sysinfo::linux::disk::new_disk (9 samples, 0.62%)</title><rect x="92.6947%" y="1157" width="0.6203%" height="15" fill="rgb(236,34,42)" fg:x="1345" fg:w="9"/><text x="92.9447%" y="1167.50"></text></g><g><title>sysinfo::linux::disk::find_type_for_device_name (9 samples, 0.62%)</title><rect x="92.6947%" y="1141" width="0.6203%" height="15" fill="rgb(243,106,37)" fg:x="1345" fg:w="9"/><text x="92.9447%" y="1151.50"></text></g><g><title>sysinfo::linux::utils::get_all_data (4 samples, 0.28%)</title><rect x="93.0393%" y="1125" width="0.2757%" height="15" fill="rgb(218,96,6)" fg:x="1350" fg:w="4"/><text x="93.2893%" y="1135.50"></text></g><g><title>sysinfo::linux::utils::get_all_data_from_file (3 samples, 0.21%)</title><rect x="93.1082%" y="1109" width="0.2068%" height="15" fill="rgb(235,130,12)" fg:x="1351" fg:w="3"/><text x="93.3582%" y="1119.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (3 samples, 0.21%)</title><rect x="93.1082%" y="1093" width="0.2068%" height="15" fill="rgb(231,95,0)" fg:x="1351" fg:w="3"/><text x="93.3582%" y="1103.50"></text></g><g><title>alloc::string::String::reserve (3 samples, 0.21%)</title><rect x="93.1082%" y="1077" width="0.2068%" height="15" fill="rgb(228,12,23)" fg:x="1351" fg:w="3"/><text x="93.3582%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.21%)</title><rect x="93.1082%" y="1061" width="0.2068%" height="15" fill="rgb(216,12,1)" fg:x="1351" fg:w="3"/><text x="93.3582%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.21%)</title><rect x="93.1082%" y="1045" width="0.2068%" height="15" fill="rgb(219,59,3)" fg:x="1351" fg:w="3"/><text x="93.3582%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.21%)</title><rect x="93.1082%" y="1029" width="0.2068%" height="15" fill="rgb(215,208,46)" fg:x="1351" fg:w="3"/><text x="93.3582%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.21%)</title><rect x="93.1082%" y="1013" width="0.2068%" height="15" fill="rgb(254,224,29)" fg:x="1351" fg:w="3"/><text x="93.3582%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.21%)</title><rect x="93.1082%" y="997" width="0.2068%" height="15" fill="rgb(232,14,29)" fg:x="1351" fg:w="3"/><text x="93.3582%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.21%)</title><rect x="93.1082%" y="981" width="0.2068%" height="15" fill="rgb(208,45,52)" fg:x="1351" fg:w="3"/><text x="93.3582%" y="991.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.21%)</title><rect x="93.1082%" y="965" width="0.2068%" height="15" fill="rgb(234,191,28)" fg:x="1351" fg:w="3"/><text x="93.3582%" y="975.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.21%)</title><rect x="93.1082%" y="949" width="0.2068%" height="15" fill="rgb(244,67,43)" fg:x="1351" fg:w="3"/><text x="93.3582%" y="959.50"></text></g><g><title>realloc (3 samples, 0.21%)</title><rect x="93.1082%" y="933" width="0.2068%" height="15" fill="rgb(236,189,24)" fg:x="1351" fg:w="3"/><text x="93.3582%" y="943.50"></text></g><g><title>[libc.so.6] (3 samples, 0.21%)</title><rect x="93.1082%" y="917" width="0.2068%" height="15" fill="rgb(239,214,33)" fg:x="1351" fg:w="3"/><text x="93.3582%" y="927.50"></text></g><g><title>[libc.so.6] (3 samples, 0.21%)</title><rect x="93.1082%" y="901" width="0.2068%" height="15" fill="rgb(226,176,41)" fg:x="1351" fg:w="3"/><text x="93.3582%" y="911.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="93.1771%" y="885" width="0.1378%" height="15" fill="rgb(248,47,8)" fg:x="1352" fg:w="2"/><text x="93.4271%" y="895.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (10 samples, 0.69%)</title><rect x="92.6947%" y="1221" width="0.6892%" height="15" fill="rgb(218,81,44)" fg:x="1345" fg:w="10"/><text x="92.9447%" y="1231.50"></text></g><g><title>sysinfo::linux::disk::get_all_disks_inner::{{closure}} (1 samples, 0.07%)</title><rect x="93.3150%" y="1205" width="0.0689%" height="15" fill="rgb(213,98,6)" fg:x="1354" fg:w="1"/><text x="93.5650%" y="1215.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="93.3839%" y="1205" width="0.0689%" height="15" fill="rgb(222,85,22)" fg:x="1355" fg:w="1"/><text x="93.6339%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="93.3839%" y="1189" width="0.0689%" height="15" fill="rgb(239,46,39)" fg:x="1355" fg:w="1"/><text x="93.6339%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.07%)</title><rect x="93.3839%" y="1173" width="0.0689%" height="15" fill="rgb(237,12,29)" fg:x="1355" fg:w="1"/><text x="93.6339%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="93.3839%" y="1157" width="0.0689%" height="15" fill="rgb(214,77,8)" fg:x="1355" fg:w="1"/><text x="93.6339%" y="1167.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="93.3839%" y="1141" width="0.0689%" height="15" fill="rgb(217,168,37)" fg:x="1355" fg:w="1"/><text x="93.6339%" y="1151.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.07%)</title><rect x="93.3839%" y="1125" width="0.0689%" height="15" fill="rgb(221,217,23)" fg:x="1355" fg:w="1"/><text x="93.6339%" y="1135.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.07%)</title><rect x="93.3839%" y="1109" width="0.0689%" height="15" fill="rgb(243,229,36)" fg:x="1355" fg:w="1"/><text x="93.6339%" y="1119.50"></text></g><g><title>core::str::pattern::Searcher::next_match (1 samples, 0.07%)</title><rect x="93.3839%" y="1093" width="0.0689%" height="15" fill="rgb(251,163,40)" fg:x="1355" fg:w="1"/><text x="93.6339%" y="1103.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (1 samples, 0.07%)</title><rect x="93.3839%" y="1077" width="0.0689%" height="15" fill="rgb(237,222,12)" fg:x="1355" fg:w="1"/><text x="93.6339%" y="1087.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (1 samples, 0.07%)</title><rect x="93.3839%" y="1061" width="0.0689%" height="15" fill="rgb(248,132,6)" fg:x="1355" fg:w="1"/><text x="93.6339%" y="1071.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::FnMut&lt;(char,)&gt;&gt;::call_mut (1 samples, 0.07%)</title><rect x="93.3839%" y="1045" width="0.0689%" height="15" fill="rgb(227,167,50)" fg:x="1355" fg:w="1"/><text x="93.6339%" y="1055.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::Fn&lt;(char,)&gt;&gt;::call (1 samples, 0.07%)</title><rect x="93.3839%" y="1029" width="0.0689%" height="15" fill="rgb(242,84,37)" fg:x="1355" fg:w="1"/><text x="93.6339%" y="1039.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (1 samples, 0.07%)</title><rect x="93.3839%" y="1013" width="0.0689%" height="15" fill="rgb(212,4,50)" fg:x="1355" fg:w="1"/><text x="93.6339%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="93.5217%" y="1125" width="0.1378%" height="15" fill="rgb(230,228,32)" fg:x="1357" fg:w="2"/><text x="93.7717%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="93.5217%" y="1109" width="0.1378%" height="15" fill="rgb(248,217,23)" fg:x="1357" fg:w="2"/><text x="93.7717%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.14%)</title><rect x="93.5217%" y="1093" width="0.1378%" height="15" fill="rgb(238,197,32)" fg:x="1357" fg:w="2"/><text x="93.7717%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.14%)</title><rect x="93.5217%" y="1077" width="0.1378%" height="15" fill="rgb(236,106,1)" fg:x="1357" fg:w="2"/><text x="93.7717%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.14%)</title><rect x="93.5217%" y="1061" width="0.1378%" height="15" fill="rgb(219,228,13)" fg:x="1357" fg:w="2"/><text x="93.7717%" y="1071.50"></text></g><g><title>malloc (2 samples, 0.14%)</title><rect x="93.5217%" y="1045" width="0.1378%" height="15" fill="rgb(238,30,35)" fg:x="1357" fg:w="2"/><text x="93.7717%" y="1055.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.21%)</title><rect x="93.5217%" y="1189" width="0.2068%" height="15" fill="rgb(236,70,23)" fg:x="1357" fg:w="3"/><text x="93.7717%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.21%)</title><rect x="93.5217%" y="1173" width="0.2068%" height="15" fill="rgb(249,104,48)" fg:x="1357" fg:w="3"/><text x="93.7717%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.21%)</title><rect x="93.5217%" y="1157" width="0.2068%" height="15" fill="rgb(254,117,50)" fg:x="1357" fg:w="3"/><text x="93.7717%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.21%)</title><rect x="93.5217%" y="1141" width="0.2068%" height="15" fill="rgb(223,152,4)" fg:x="1357" fg:w="3"/><text x="93.7717%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="93.6595%" y="1125" width="0.0689%" height="15" fill="rgb(245,6,2)" fg:x="1359" fg:w="1"/><text x="93.9095%" y="1135.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="93.6595%" y="1109" width="0.0689%" height="15" fill="rgb(249,150,24)" fg:x="1359" fg:w="1"/><text x="93.9095%" y="1119.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1 samples, 0.07%)</title><rect x="93.9352%" y="1125" width="0.0689%" height="15" fill="rgb(228,185,42)" fg:x="1363" fg:w="1"/><text x="94.1852%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="93.9352%" y="1109" width="0.0689%" height="15" fill="rgb(226,39,33)" fg:x="1363" fg:w="1"/><text x="94.1852%" y="1119.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create::{{closure}} (1 samples, 0.07%)</title><rect x="93.9352%" y="1093" width="0.0689%" height="15" fill="rgb(221,166,19)" fg:x="1363" fg:w="1"/><text x="94.1852%" y="1103.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (9 samples, 0.62%)</title><rect x="93.4528%" y="1205" width="0.6203%" height="15" fill="rgb(209,109,2)" fg:x="1356" fg:w="9"/><text x="93.7028%" y="1215.50"></text></g><g><title>core::str::&lt;impl str&gt;::match_indices (5 samples, 0.34%)</title><rect x="93.7285%" y="1189" width="0.3446%" height="15" fill="rgb(252,216,26)" fg:x="1360" fg:w="5"/><text x="93.9785%" y="1199.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (5 samples, 0.34%)</title><rect x="93.7285%" y="1173" width="0.3446%" height="15" fill="rgb(227,173,36)" fg:x="1360" fg:w="5"/><text x="93.9785%" y="1183.50"></text></g><g><title>core::str::pattern::StrSearcher::new (5 samples, 0.34%)</title><rect x="93.7285%" y="1157" width="0.3446%" height="15" fill="rgb(209,90,7)" fg:x="1360" fg:w="5"/><text x="93.9785%" y="1167.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (4 samples, 0.28%)</title><rect x="93.7974%" y="1141" width="0.2757%" height="15" fill="rgb(250,194,11)" fg:x="1361" fg:w="4"/><text x="94.0474%" y="1151.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1 samples, 0.07%)</title><rect x="94.0041%" y="1125" width="0.0689%" height="15" fill="rgb(220,72,50)" fg:x="1364" fg:w="1"/><text x="94.2541%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 1.72%)</title><rect x="92.4190%" y="1285" width="1.7229%" height="15" fill="rgb(222,106,48)" fg:x="1341" fg:w="25"/><text x="92.6690%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 1.72%)</title><rect x="92.4190%" y="1269" width="1.7229%" height="15" fill="rgb(216,220,45)" fg:x="1341" fg:w="25"/><text x="92.6690%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (25 samples, 1.72%)</title><rect x="92.4190%" y="1253" width="1.7229%" height="15" fill="rgb(234,112,18)" fg:x="1341" fg:w="25"/><text x="92.6690%" y="1263.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (21 samples, 1.45%)</title><rect x="92.6947%" y="1237" width="1.4473%" height="15" fill="rgb(206,179,9)" fg:x="1345" fg:w="21"/><text x="92.9447%" y="1247.50"></text></g><g><title>sysinfo::linux::disk::get_all_disks_inner::{{closure}} (11 samples, 0.76%)</title><rect x="93.3839%" y="1221" width="0.7581%" height="15" fill="rgb(215,115,40)" fg:x="1355" fg:w="11"/><text x="93.6339%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.07%)</title><rect x="94.0731%" y="1205" width="0.0689%" height="15" fill="rgb(222,69,34)" fg:x="1365" fg:w="1"/><text x="94.3231%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="94.0731%" y="1189" width="0.0689%" height="15" fill="rgb(209,161,10)" fg:x="1365" fg:w="1"/><text x="94.3231%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="94.0731%" y="1173" width="0.0689%" height="15" fill="rgb(217,6,38)" fg:x="1365" fg:w="1"/><text x="94.3231%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="94.0731%" y="1157" width="0.0689%" height="15" fill="rgb(229,229,48)" fg:x="1365" fg:w="1"/><text x="94.3231%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="94.0731%" y="1141" width="0.0689%" height="15" fill="rgb(225,21,28)" fg:x="1365" fg:w="1"/><text x="94.3231%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="94.0731%" y="1125" width="0.0689%" height="15" fill="rgb(206,33,13)" fg:x="1365" fg:w="1"/><text x="94.3231%" y="1135.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="94.0731%" y="1109" width="0.0689%" height="15" fill="rgb(242,178,17)" fg:x="1365" fg:w="1"/><text x="94.3231%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="94.1420%" y="1157" width="0.1378%" height="15" fill="rgb(220,162,5)" fg:x="1366" fg:w="2"/><text x="94.3920%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="94.1420%" y="1141" width="0.1378%" height="15" fill="rgb(210,33,43)" fg:x="1366" fg:w="2"/><text x="94.3920%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="94.1420%" y="1125" width="0.1378%" height="15" fill="rgb(216,116,54)" fg:x="1366" fg:w="2"/><text x="94.3920%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="94.2109%" y="1109" width="0.0689%" height="15" fill="rgb(249,92,24)" fg:x="1367" fg:w="1"/><text x="94.4609%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="94.2109%" y="1093" width="0.0689%" height="15" fill="rgb(231,189,14)" fg:x="1367" fg:w="1"/><text x="94.4609%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="94.2109%" y="1077" width="0.0689%" height="15" fill="rgb(230,8,41)" fg:x="1367" fg:w="1"/><text x="94.4609%" y="1087.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="94.2109%" y="1061" width="0.0689%" height="15" fill="rgb(249,7,27)" fg:x="1367" fg:w="1"/><text x="94.4609%" y="1071.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (3 samples, 0.21%)</title><rect x="94.1420%" y="1221" width="0.2068%" height="15" fill="rgb(232,86,5)" fg:x="1366" fg:w="3"/><text x="94.3920%" y="1231.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (3 samples, 0.21%)</title><rect x="94.1420%" y="1205" width="0.2068%" height="15" fill="rgb(224,175,18)" fg:x="1366" fg:w="3"/><text x="94.3920%" y="1215.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.21%)</title><rect x="94.1420%" y="1189" width="0.2068%" height="15" fill="rgb(220,129,12)" fg:x="1366" fg:w="3"/><text x="94.3920%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (3 samples, 0.21%)</title><rect x="94.1420%" y="1173" width="0.2068%" height="15" fill="rgb(210,19,36)" fg:x="1366" fg:w="3"/><text x="94.3920%" y="1183.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="94.2798%" y="1157" width="0.0689%" height="15" fill="rgb(219,96,14)" fg:x="1368" fg:w="1"/><text x="94.5298%" y="1167.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="94.2798%" y="1141" width="0.0689%" height="15" fill="rgb(249,106,1)" fg:x="1368" fg:w="1"/><text x="94.5298%" y="1151.50"></text></g><g><title>core::ffi::c_str::CStr::from_ptr (1 samples, 0.07%)</title><rect x="94.3487%" y="1221" width="0.0689%" height="15" fill="rgb(249,155,20)" fg:x="1369" fg:w="1"/><text x="94.5987%" y="1231.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="94.3487%" y="1205" width="0.0689%" height="15" fill="rgb(244,168,9)" fg:x="1369" fg:w="1"/><text x="94.5987%" y="1215.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.34%)</title><rect x="94.1420%" y="1253" width="0.3446%" height="15" fill="rgb(216,23,50)" fg:x="1366" fg:w="5"/><text x="94.3920%" y="1263.50"></text></g><g><title>&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.34%)</title><rect x="94.1420%" y="1237" width="0.3446%" height="15" fill="rgb(224,219,20)" fg:x="1366" fg:w="5"/><text x="94.3920%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::DirEntry&gt; (1 samples, 0.07%)</title><rect x="94.4176%" y="1221" width="0.0689%" height="15" fill="rgb(222,156,15)" fg:x="1370" fg:w="1"/><text x="94.6676%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::ffi::c_str::CString&gt; (1 samples, 0.07%)</title><rect x="94.4176%" y="1205" width="0.0689%" height="15" fill="rgb(231,97,17)" fg:x="1370" fg:w="1"/><text x="94.6676%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (2 samples, 0.14%)</title><rect x="94.4866%" y="1189" width="0.1378%" height="15" fill="rgb(218,70,48)" fg:x="1371" fg:w="2"/><text x="94.7366%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (2 samples, 0.14%)</title><rect x="94.4866%" y="1173" width="0.1378%" height="15" fill="rgb(212,196,52)" fg:x="1371" fg:w="2"/><text x="94.7366%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::os_str::Buf&gt; (2 samples, 0.14%)</title><rect x="94.4866%" y="1157" width="0.1378%" height="15" fill="rgb(243,203,18)" fg:x="1371" fg:w="2"/><text x="94.7366%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="94.4866%" y="1141" width="0.1378%" height="15" fill="rgb(252,125,41)" fg:x="1371" fg:w="2"/><text x="94.7366%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="94.4866%" y="1125" width="0.1378%" height="15" fill="rgb(223,180,33)" fg:x="1371" fg:w="2"/><text x="94.7366%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="94.4866%" y="1109" width="0.1378%" height="15" fill="rgb(254,159,46)" fg:x="1371" fg:w="2"/><text x="94.7366%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.14%)</title><rect x="94.4866%" y="1093" width="0.1378%" height="15" fill="rgb(254,38,10)" fg:x="1371" fg:w="2"/><text x="94.7366%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.14%)</title><rect x="94.4866%" y="1077" width="0.1378%" height="15" fill="rgb(208,217,32)" fg:x="1371" fg:w="2"/><text x="94.7366%" y="1087.50"></text></g><g><title>cfree (2 samples, 0.14%)</title><rect x="94.4866%" y="1061" width="0.1378%" height="15" fill="rgb(221,120,13)" fg:x="1371" fg:w="2"/><text x="94.7366%" y="1071.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="94.5555%" y="1045" width="0.0689%" height="15" fill="rgb(246,54,52)" fg:x="1372" fg:w="1"/><text x="94.8055%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (4 samples, 0.28%)</title><rect x="94.4866%" y="1237" width="0.2757%" height="15" fill="rgb(242,34,25)" fg:x="1371" fg:w="4"/><text x="94.7366%" y="1247.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.28%)</title><rect x="94.4866%" y="1221" width="0.2757%" height="15" fill="rgb(247,209,9)" fg:x="1371" fg:w="4"/><text x="94.7366%" y="1231.50"></text></g><g><title>sysinfo::linux::disk::get_all_disks_inner::{{closure}} (4 samples, 0.28%)</title><rect x="94.4866%" y="1205" width="0.2757%" height="15" fill="rgb(228,71,26)" fg:x="1371" fg:w="4"/><text x="94.7366%" y="1215.50"></text></g><g><title>std::path::Path::file_name (2 samples, 0.14%)</title><rect x="94.6244%" y="1189" width="0.1378%" height="15" fill="rgb(222,145,49)" fg:x="1373" fg:w="2"/><text x="94.8744%" y="1199.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2 samples, 0.14%)</title><rect x="94.6244%" y="1173" width="0.1378%" height="15" fill="rgb(218,121,17)" fg:x="1373" fg:w="2"/><text x="94.8744%" y="1183.50"></text></g><g><title>std::path::Components::parse_next_component_back (2 samples, 0.14%)</title><rect x="94.6244%" y="1157" width="0.1378%" height="15" fill="rgb(244,50,7)" fg:x="1373" fg:w="2"/><text x="94.8744%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::rposition (2 samples, 0.14%)</title><rect x="94.6244%" y="1141" width="0.1378%" height="15" fill="rgb(246,229,37)" fg:x="1373" fg:w="2"/><text x="94.8744%" y="1151.50"></text></g><g><title>std::path::Components::parse_next_component_back::{{closure}} (1 samples, 0.07%)</title><rect x="94.6933%" y="1125" width="0.0689%" height="15" fill="rgb(225,18,5)" fg:x="1374" fg:w="1"/><text x="94.9433%" y="1135.50"></text></g><g><title>std::path::Components::is_sep_byte (1 samples, 0.07%)</title><rect x="94.6933%" y="1109" width="0.0689%" height="15" fill="rgb(213,204,8)" fg:x="1374" fg:w="1"/><text x="94.9433%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (98 samples, 6.75%)</title><rect x="88.0772%" y="1381" width="6.7540%" height="15" fill="rgb(238,103,6)" fg:x="1278" fg:w="98"/><text x="88.3272%" y="1391.50">core::ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (98 samples, 6.75%)</title><rect x="88.0772%" y="1365" width="6.7540%" height="15" fill="rgb(222,25,35)" fg:x="1278" fg:w="98"/><text x="88.3272%" y="1375.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (98 samples, 6.75%)</title><rect x="88.0772%" y="1349" width="6.7540%" height="15" fill="rgb(213,203,35)" fg:x="1278" fg:w="98"/><text x="88.3272%" y="1359.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (98 samples, 6.75%)</title><rect x="88.0772%" y="1333" width="6.7540%" height="15" fill="rgb(221,79,53)" fg:x="1278" fg:w="98"/><text x="88.3272%" y="1343.50">&lt;alloc::v..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 2.41%)</title><rect x="92.4190%" y="1317" width="2.4121%" height="15" fill="rgb(243,200,35)" fg:x="1341" fg:w="35"/><text x="92.6690%" y="1327.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (35 samples, 2.41%)</title><rect x="92.4190%" y="1301" width="2.4121%" height="15" fill="rgb(248,60,25)" fg:x="1341" fg:w="35"/><text x="92.6690%" y="1311.50">co..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.69%)</title><rect x="94.1420%" y="1285" width="0.6892%" height="15" fill="rgb(227,53,46)" fg:x="1366" fg:w="10"/><text x="94.3920%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.69%)</title><rect x="94.1420%" y="1269" width="0.6892%" height="15" fill="rgb(216,120,32)" fg:x="1366" fg:w="10"/><text x="94.3920%" y="1279.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (5 samples, 0.34%)</title><rect x="94.4866%" y="1253" width="0.3446%" height="15" fill="rgb(220,134,1)" fg:x="1371" fg:w="5"/><text x="94.7366%" y="1263.50"></text></g><g><title>sysinfo::linux::disk::get_all_disks_inner::{{closure}} (1 samples, 0.07%)</title><rect x="94.7622%" y="1237" width="0.0689%" height="15" fill="rgb(237,168,5)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="1247.50"></text></g><g><title>std::fs::DirEntry::path (1 samples, 0.07%)</title><rect x="94.7622%" y="1221" width="0.0689%" height="15" fill="rgb(231,100,33)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="1231.50"></text></g><g><title>std::sys::unix::fs::DirEntry::path (1 samples, 0.07%)</title><rect x="94.7622%" y="1205" width="0.0689%" height="15" fill="rgb(236,177,47)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="1215.50"></text></g><g><title>std::path::Path::join (1 samples, 0.07%)</title><rect x="94.7622%" y="1189" width="0.0689%" height="15" fill="rgb(235,7,49)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="1199.50"></text></g><g><title>std::path::Path::_join (1 samples, 0.07%)</title><rect x="94.7622%" y="1173" width="0.0689%" height="15" fill="rgb(232,119,22)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="1183.50"></text></g><g><title>std::path::PathBuf::push (1 samples, 0.07%)</title><rect x="94.7622%" y="1157" width="0.0689%" height="15" fill="rgb(254,73,53)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="1167.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.07%)</title><rect x="94.7622%" y="1141" width="0.0689%" height="15" fill="rgb(251,35,20)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="1151.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.07%)</title><rect x="94.7622%" y="1125" width="0.0689%" height="15" fill="rgb(241,119,20)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="1135.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.07%)</title><rect x="94.7622%" y="1109" width="0.0689%" height="15" fill="rgb(207,102,14)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="94.7622%" y="1093" width="0.0689%" height="15" fill="rgb(248,201,50)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="94.7622%" y="1077" width="0.0689%" height="15" fill="rgb(222,185,44)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="94.7622%" y="1061" width="0.0689%" height="15" fill="rgb(218,107,18)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="94.7622%" y="1045" width="0.0689%" height="15" fill="rgb(237,177,39)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="94.7622%" y="1029" width="0.0689%" height="15" fill="rgb(246,69,6)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="94.7622%" y="1013" width="0.0689%" height="15" fill="rgb(234,208,37)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="94.7622%" y="997" width="0.0689%" height="15" fill="rgb(225,4,6)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="94.7622%" y="981" width="0.0689%" height="15" fill="rgb(233,45,0)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="94.7622%" y="965" width="0.0689%" height="15" fill="rgb(226,136,5)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="975.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="94.7622%" y="949" width="0.0689%" height="15" fill="rgb(211,91,47)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="959.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="94.7622%" y="933" width="0.0689%" height="15" fill="rgb(242,88,51)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="943.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="94.7622%" y="917" width="0.0689%" height="15" fill="rgb(230,91,28)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="94.7622%" y="901" width="0.0689%" height="15" fill="rgb(254,186,29)" fg:x="1375" fg:w="1"/><text x="95.0122%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;std::path::PathBuf&gt;&gt; (1 samples, 0.07%)</title><rect x="94.8312%" y="1381" width="0.0689%" height="15" fill="rgb(238,6,4)" fg:x="1376" fg:w="1"/><text x="95.0812%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="94.8312%" y="1365" width="0.0689%" height="15" fill="rgb(221,151,16)" fg:x="1376" fg:w="1"/><text x="95.0812%" y="1375.50"></text></g><g><title>sysinfo::linux::disk::get_all_disks_inner (100 samples, 6.89%)</title><rect x="88.0772%" y="1397" width="6.8918%" height="15" fill="rgb(251,143,52)" fg:x="1278" fg:w="100"/><text x="88.3272%" y="1407.50">sysinfo::..</text></g><g><title>std::fs::read_dir (1 samples, 0.07%)</title><rect x="94.9001%" y="1381" width="0.0689%" height="15" fill="rgb(206,90,15)" fg:x="1377" fg:w="1"/><text x="95.1501%" y="1391.50"></text></g><g><title>std::sys::unix::fs::readdir (1 samples, 0.07%)</title><rect x="94.9001%" y="1365" width="0.0689%" height="15" fill="rgb(218,35,8)" fg:x="1377" fg:w="1"/><text x="95.1501%" y="1375.50"></text></g><g><title>opendir (1 samples, 0.07%)</title><rect x="94.9001%" y="1349" width="0.0689%" height="15" fill="rgb(239,215,6)" fg:x="1377" fg:w="1"/><text x="95.1501%" y="1359.50"></text></g><g><title>std::fs::File::open (2 samples, 0.14%)</title><rect x="94.9690%" y="1381" width="0.1378%" height="15" fill="rgb(245,116,39)" fg:x="1378" fg:w="2"/><text x="95.2190%" y="1391.50"></text></g><g><title>std::fs::OpenOptions::open (2 samples, 0.14%)</title><rect x="94.9690%" y="1365" width="0.1378%" height="15" fill="rgb(242,65,28)" fg:x="1378" fg:w="2"/><text x="95.2190%" y="1375.50"></text></g><g><title>std::fs::OpenOptions::_open (2 samples, 0.14%)</title><rect x="94.9690%" y="1349" width="0.1378%" height="15" fill="rgb(252,132,53)" fg:x="1378" fg:w="2"/><text x="95.2190%" y="1359.50"></text></g><g><title>std::sys::unix::fs::File::open (2 samples, 0.14%)</title><rect x="94.9690%" y="1333" width="0.1378%" height="15" fill="rgb(224,159,50)" fg:x="1378" fg:w="2"/><text x="95.2190%" y="1343.50"></text></g><g><title>std::sys::unix::fs::File::open_c (2 samples, 0.14%)</title><rect x="94.9690%" y="1317" width="0.1378%" height="15" fill="rgb(224,93,4)" fg:x="1378" fg:w="2"/><text x="95.2190%" y="1327.50"></text></g><g><title>std::sys::unix::cvt_r (2 samples, 0.14%)</title><rect x="94.9690%" y="1301" width="0.1378%" height="15" fill="rgb(208,81,34)" fg:x="1378" fg:w="2"/><text x="95.2190%" y="1311.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (2 samples, 0.14%)</title><rect x="94.9690%" y="1285" width="0.1378%" height="15" fill="rgb(233,92,54)" fg:x="1378" fg:w="2"/><text x="95.2190%" y="1295.50"></text></g><g><title>open64 (2 samples, 0.14%)</title><rect x="94.9690%" y="1269" width="0.1378%" height="15" fill="rgb(237,21,14)" fg:x="1378" fg:w="2"/><text x="95.2190%" y="1279.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="95.0379%" y="1253" width="0.0689%" height="15" fill="rgb(249,128,51)" fg:x="1379" fg:w="1"/><text x="95.2879%" y="1263.50"></text></g><g><title>std::fs::buffer_capacity_required (3 samples, 0.21%)</title><rect x="95.1068%" y="1349" width="0.2068%" height="15" fill="rgb(223,129,24)" fg:x="1380" fg:w="3"/><text x="95.3568%" y="1359.50"></text></g><g><title>std::fs::File::metadata (3 samples, 0.21%)</title><rect x="95.1068%" y="1333" width="0.2068%" height="15" fill="rgb(231,168,25)" fg:x="1380" fg:w="3"/><text x="95.3568%" y="1343.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (3 samples, 0.21%)</title><rect x="95.1068%" y="1317" width="0.2068%" height="15" fill="rgb(224,39,20)" fg:x="1380" fg:w="3"/><text x="95.3568%" y="1327.50"></text></g><g><title>std::sys::unix::fs::try_statx (3 samples, 0.21%)</title><rect x="95.1068%" y="1301" width="0.2068%" height="15" fill="rgb(225,152,53)" fg:x="1380" fg:w="3"/><text x="95.3568%" y="1311.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (3 samples, 0.21%)</title><rect x="95.1068%" y="1285" width="0.2068%" height="15" fill="rgb(252,17,24)" fg:x="1380" fg:w="3"/><text x="95.3568%" y="1295.50"></text></g><g><title>statx (3 samples, 0.21%)</title><rect x="95.1068%" y="1269" width="0.2068%" height="15" fill="rgb(250,114,30)" fg:x="1380" fg:w="3"/><text x="95.3568%" y="1279.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.07%)</title><rect x="95.3136%" y="1317" width="0.0689%" height="15" fill="rgb(229,5,4)" fg:x="1383" fg:w="1"/><text x="95.5636%" y="1327.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.07%)</title><rect x="95.3136%" y="1301" width="0.0689%" height="15" fill="rgb(225,176,49)" fg:x="1383" fg:w="1"/><text x="95.5636%" y="1311.50"></text></g><g><title>&lt;sysinfo::linux::system::System as sysinfo::traits::SystemExt&gt;::refresh_disks_list (110 samples, 7.58%)</title><rect x="87.8704%" y="1429" width="7.5810%" height="15" fill="rgb(224,221,49)" fg:x="1275" fg:w="110"/><text x="88.1204%" y="1439.50">&lt;sysinfo::..</text></g><g><title>sysinfo::linux::disk::get_all_disks (107 samples, 7.37%)</title><rect x="88.0772%" y="1413" width="7.3742%" height="15" fill="rgb(253,169,27)" fg:x="1278" fg:w="107"/><text x="88.3272%" y="1423.50">sysinfo::l..</text></g><g><title>sysinfo::linux::utils::get_all_data (7 samples, 0.48%)</title><rect x="94.9690%" y="1397" width="0.4824%" height="15" fill="rgb(211,206,16)" fg:x="1378" fg:w="7"/><text x="95.2190%" y="1407.50"></text></g><g><title>sysinfo::linux::utils::get_all_data_from_file (5 samples, 0.34%)</title><rect x="95.1068%" y="1381" width="0.3446%" height="15" fill="rgb(244,87,35)" fg:x="1380" fg:w="5"/><text x="95.3568%" y="1391.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (5 samples, 0.34%)</title><rect x="95.1068%" y="1365" width="0.3446%" height="15" fill="rgb(246,28,10)" fg:x="1380" fg:w="5"/><text x="95.3568%" y="1375.50"></text></g><g><title>std::io::default_read_to_string (2 samples, 0.14%)</title><rect x="95.3136%" y="1349" width="0.1378%" height="15" fill="rgb(229,12,44)" fg:x="1383" fg:w="2"/><text x="95.5636%" y="1359.50"></text></g><g><title>std::io::append_to_string (2 samples, 0.14%)</title><rect x="95.3136%" y="1333" width="0.1378%" height="15" fill="rgb(210,145,37)" fg:x="1383" fg:w="2"/><text x="95.5636%" y="1343.50"></text></g><g><title>std::io::default_read_to_string::{{closure}} (1 samples, 0.07%)</title><rect x="95.3825%" y="1317" width="0.0689%" height="15" fill="rgb(227,112,52)" fg:x="1384" fg:w="1"/><text x="95.6325%" y="1327.50"></text></g><g><title>std::io::default_read_to_end (1 samples, 0.07%)</title><rect x="95.3825%" y="1301" width="0.0689%" height="15" fill="rgb(238,155,34)" fg:x="1384" fg:w="1"/><text x="95.6325%" y="1311.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.07%)</title><rect x="95.9338%" y="1365" width="0.0689%" height="15" fill="rgb(239,226,36)" fg:x="1392" fg:w="1"/><text x="96.1838%" y="1375.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.07%)</title><rect x="95.9338%" y="1349" width="0.0689%" height="15" fill="rgb(230,16,23)" fg:x="1392" fg:w="1"/><text x="96.1838%" y="1359.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="95.9338%" y="1333" width="0.0689%" height="15" fill="rgb(236,171,36)" fg:x="1392" fg:w="1"/><text x="96.1838%" y="1343.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="95.9338%" y="1317" width="0.0689%" height="15" fill="rgb(221,22,14)" fg:x="1392" fg:w="1"/><text x="96.1838%" y="1327.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.14%)</title><rect x="96.5541%" y="1333" width="0.1378%" height="15" fill="rgb(242,43,11)" fg:x="1401" fg:w="2"/><text x="96.8041%" y="1343.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.14%)</title><rect x="96.5541%" y="1317" width="0.1378%" height="15" fill="rgb(232,69,23)" fg:x="1401" fg:w="2"/><text x="96.8041%" y="1327.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (17 samples, 1.17%)</title><rect x="95.7960%" y="1381" width="1.1716%" height="15" fill="rgb(216,180,54)" fg:x="1390" fg:w="17"/><text x="96.0460%" y="1391.50"></text></g><g><title>core::slice::memchr::memchr (14 samples, 0.96%)</title><rect x="96.0028%" y="1365" width="0.9649%" height="15" fill="rgb(216,5,24)" fg:x="1393" fg:w="14"/><text x="96.2528%" y="1375.50"></text></g><g><title>core::slice::memchr::memchr_aligned (13 samples, 0.90%)</title><rect x="96.0717%" y="1349" width="0.8959%" height="15" fill="rgb(225,89,9)" fg:x="1394" fg:w="13"/><text x="96.3217%" y="1359.50"></text></g><g><title>core::slice::memchr::memchr_naive (4 samples, 0.28%)</title><rect x="96.6919%" y="1333" width="0.2757%" height="15" fill="rgb(243,75,33)" fg:x="1403" fg:w="4"/><text x="96.9419%" y="1343.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 1.45%)</title><rect x="95.5892%" y="1413" width="1.4473%" height="15" fill="rgb(247,141,45)" fg:x="1387" fg:w="21"/><text x="95.8392%" y="1423.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (21 samples, 1.45%)</title><rect x="95.5892%" y="1397" width="1.4473%" height="15" fill="rgb(232,177,36)" fg:x="1387" fg:w="21"/><text x="95.8392%" y="1407.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (1 samples, 0.07%)</title><rect x="96.9676%" y="1381" width="0.0689%" height="15" fill="rgb(219,125,36)" fg:x="1407" fg:w="1"/><text x="97.2176%" y="1391.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.07%)</title><rect x="96.9676%" y="1365" width="0.0689%" height="15" fill="rgb(227,94,9)" fg:x="1407" fg:w="1"/><text x="97.2176%" y="1375.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.07%)</title><rect x="96.9676%" y="1349" width="0.0689%" height="15" fill="rgb(240,34,52)" fg:x="1407" fg:w="1"/><text x="97.2176%" y="1359.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.07%)</title><rect x="96.9676%" y="1333" width="0.0689%" height="15" fill="rgb(216,45,12)" fg:x="1407" fg:w="1"/><text x="97.2176%" y="1343.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="97.0365%" y="1381" width="0.0689%" height="15" fill="rgb(246,21,19)" fg:x="1408" fg:w="1"/><text x="97.2865%" y="1391.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.07%)</title><rect x="97.0365%" y="1365" width="0.0689%" height="15" fill="rgb(213,98,42)" fg:x="1408" fg:w="1"/><text x="97.2865%" y="1375.50"></text></g><g><title>core::str::&lt;impl str&gt;::split (1 samples, 0.07%)</title><rect x="97.1054%" y="1381" width="0.0689%" height="15" fill="rgb(250,136,47)" fg:x="1409" fg:w="1"/><text x="97.3554%" y="1391.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (4 samples, 0.28%)</title><rect x="97.0365%" y="1413" width="0.2757%" height="15" fill="rgb(251,124,27)" fg:x="1408" fg:w="4"/><text x="97.2865%" y="1423.50"></text></g><g><title>&lt;sysinfo::linux::system::System as sysinfo::traits::SystemExt&gt;::refresh_memory::{{closure}} (4 samples, 0.28%)</title><rect x="97.0365%" y="1397" width="0.2757%" height="15" fill="rgb(229,180,14)" fg:x="1408" fg:w="4"/><text x="97.2865%" y="1407.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_start (2 samples, 0.14%)</title><rect x="97.1744%" y="1381" width="0.1378%" height="15" fill="rgb(245,216,25)" fg:x="1410" fg:w="2"/><text x="97.4244%" y="1391.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_start_matches (2 samples, 0.14%)</title><rect x="97.1744%" y="1365" width="0.1378%" height="15" fill="rgb(251,43,5)" fg:x="1410" fg:w="2"/><text x="97.4244%" y="1375.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_reject (2 samples, 0.14%)</title><rect x="97.1744%" y="1349" width="0.1378%" height="15" fill="rgb(250,128,24)" fg:x="1410" fg:w="2"/><text x="97.4244%" y="1359.50"></text></g><g><title>core::str::pattern::Searcher::next_reject (2 samples, 0.14%)</title><rect x="97.1744%" y="1333" width="0.1378%" height="15" fill="rgb(217,117,27)" fg:x="1410" fg:w="2"/><text x="97.4244%" y="1343.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (2 samples, 0.14%)</title><rect x="97.1744%" y="1317" width="0.1378%" height="15" fill="rgb(245,147,4)" fg:x="1410" fg:w="2"/><text x="97.4244%" y="1327.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="97.1744%" y="1301" width="0.1378%" height="15" fill="rgb(242,201,35)" fg:x="1410" fg:w="2"/><text x="97.4244%" y="1311.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="97.2433%" y="1285" width="0.0689%" height="15" fill="rgb(218,181,1)" fg:x="1411" fg:w="1"/><text x="97.4933%" y="1295.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.07%)</title><rect x="97.2433%" y="1269" width="0.0689%" height="15" fill="rgb(222,6,29)" fg:x="1411" fg:w="1"/><text x="97.4933%" y="1279.50"></text></g><g><title>core::str::&lt;impl str&gt;::split (2 samples, 0.14%)</title><rect x="97.3122%" y="1413" width="0.1378%" height="15" fill="rgb(208,186,3)" fg:x="1412" fg:w="2"/><text x="97.5622%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (1 samples, 0.07%)</title><rect x="97.4500%" y="1397" width="0.0689%" height="15" fill="rgb(216,36,26)" fg:x="1414" fg:w="1"/><text x="97.7000%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (1 samples, 0.07%)</title><rect x="97.4500%" y="1381" width="0.0689%" height="15" fill="rgb(248,201,23)" fg:x="1414" fg:w="1"/><text x="97.7000%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (1 samples, 0.07%)</title><rect x="97.4500%" y="1365" width="0.0689%" height="15" fill="rgb(251,170,31)" fg:x="1414" fg:w="1"/><text x="97.7000%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1 samples, 0.07%)</title><rect x="97.4500%" y="1349" width="0.0689%" height="15" fill="rgb(207,110,25)" fg:x="1414" fg:w="1"/><text x="97.7000%" y="1359.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="97.4500%" y="1333" width="0.0689%" height="15" fill="rgb(250,54,15)" fg:x="1414" fg:w="1"/><text x="97.7000%" y="1343.50"></text></g><g><title>__close (1 samples, 0.07%)</title><rect x="97.4500%" y="1317" width="0.0689%" height="15" fill="rgb(227,68,33)" fg:x="1414" fg:w="1"/><text x="97.7000%" y="1327.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="97.4500%" y="1301" width="0.0689%" height="15" fill="rgb(238,34,41)" fg:x="1414" fg:w="1"/><text x="97.7000%" y="1311.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.07%)</title><rect x="97.5190%" y="1333" width="0.0689%" height="15" fill="rgb(220,11,15)" fg:x="1415" fg:w="1"/><text x="97.7690%" y="1343.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.07%)</title><rect x="97.5190%" y="1317" width="0.0689%" height="15" fill="rgb(246,111,35)" fg:x="1415" fg:w="1"/><text x="97.7690%" y="1327.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.07%)</title><rect x="97.5190%" y="1301" width="0.0689%" height="15" fill="rgb(209,88,53)" fg:x="1415" fg:w="1"/><text x="97.7690%" y="1311.50"></text></g><g><title>open64 (1 samples, 0.07%)</title><rect x="97.5190%" y="1285" width="0.0689%" height="15" fill="rgb(231,185,47)" fg:x="1415" fg:w="1"/><text x="97.7690%" y="1295.50"></text></g><g><title>std::fs::File::open (2 samples, 0.14%)</title><rect x="97.5190%" y="1397" width="0.1378%" height="15" fill="rgb(233,154,1)" fg:x="1415" fg:w="2"/><text x="97.7690%" y="1407.50"></text></g><g><title>std::fs::OpenOptions::open (2 samples, 0.14%)</title><rect x="97.5190%" y="1381" width="0.1378%" height="15" fill="rgb(225,15,46)" fg:x="1415" fg:w="2"/><text x="97.7690%" y="1391.50"></text></g><g><title>std::fs::OpenOptions::_open (2 samples, 0.14%)</title><rect x="97.5190%" y="1365" width="0.1378%" height="15" fill="rgb(211,135,41)" fg:x="1415" fg:w="2"/><text x="97.7690%" y="1375.50"></text></g><g><title>std::sys::unix::fs::File::open (2 samples, 0.14%)</title><rect x="97.5190%" y="1349" width="0.1378%" height="15" fill="rgb(208,54,0)" fg:x="1415" fg:w="2"/><text x="97.7690%" y="1359.50"></text></g><g><title>std::sys::unix::fs::cstr (1 samples, 0.07%)</title><rect x="97.5879%" y="1333" width="0.0689%" height="15" fill="rgb(244,136,14)" fg:x="1416" fg:w="1"/><text x="97.8379%" y="1343.50"></text></g><g><title>alloc::ffi::c_str::CString::new (1 samples, 0.07%)</title><rect x="97.5879%" y="1317" width="0.0689%" height="15" fill="rgb(241,56,14)" fg:x="1416" fg:w="1"/><text x="97.8379%" y="1327.50"></text></g><g><title>&lt;&amp;[u8] as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.07%)</title><rect x="97.5879%" y="1301" width="0.0689%" height="15" fill="rgb(205,80,24)" fg:x="1416" fg:w="1"/><text x="97.8379%" y="1311.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.07%)</title><rect x="97.5879%" y="1285" width="0.0689%" height="15" fill="rgb(220,57,4)" fg:x="1416" fg:w="1"/><text x="97.8379%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="97.5879%" y="1269" width="0.0689%" height="15" fill="rgb(226,193,50)" fg:x="1416" fg:w="1"/><text x="97.8379%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="97.5879%" y="1253" width="0.0689%" height="15" fill="rgb(231,168,22)" fg:x="1416" fg:w="1"/><text x="97.8379%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="97.5879%" y="1237" width="0.0689%" height="15" fill="rgb(254,215,14)" fg:x="1416" fg:w="1"/><text x="97.8379%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="97.5879%" y="1221" width="0.0689%" height="15" fill="rgb(211,115,16)" fg:x="1416" fg:w="1"/><text x="97.8379%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="97.5879%" y="1205" width="0.0689%" height="15" fill="rgb(236,210,16)" fg:x="1416" fg:w="1"/><text x="97.8379%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="97.5879%" y="1189" width="0.0689%" height="15" fill="rgb(221,94,12)" fg:x="1416" fg:w="1"/><text x="97.8379%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="97.5879%" y="1173" width="0.0689%" height="15" fill="rgb(235,218,49)" fg:x="1416" fg:w="1"/><text x="97.8379%" y="1183.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="97.5879%" y="1157" width="0.0689%" height="15" fill="rgb(217,114,14)" fg:x="1416" fg:w="1"/><text x="97.8379%" y="1167.50"></text></g><g><title>&lt;sysinfo::linux::system::System as sysinfo::traits::SystemExt&gt;::refresh_memory (33 samples, 2.27%)</title><rect x="95.4514%" y="1429" width="2.2743%" height="15" fill="rgb(216,145,22)" fg:x="1385" fg:w="33"/><text x="95.7014%" y="1439.50">&lt;..</text></g><g><title>sysinfo::linux::utils::get_all_data (4 samples, 0.28%)</title><rect x="97.4500%" y="1413" width="0.2757%" height="15" fill="rgb(217,112,39)" fg:x="1414" fg:w="4"/><text x="97.7000%" y="1423.50"></text></g><g><title>sysinfo::linux::utils::get_all_data_from_file (1 samples, 0.07%)</title><rect x="97.6568%" y="1397" width="0.0689%" height="15" fill="rgb(225,85,32)" fg:x="1417" fg:w="1"/><text x="97.9068%" y="1407.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (1 samples, 0.07%)</title><rect x="97.6568%" y="1381" width="0.0689%" height="15" fill="rgb(245,209,47)" fg:x="1417" fg:w="1"/><text x="97.9068%" y="1391.50"></text></g><g><title>std::fs::buffer_capacity_required (1 samples, 0.07%)</title><rect x="97.6568%" y="1365" width="0.0689%" height="15" fill="rgb(218,220,15)" fg:x="1417" fg:w="1"/><text x="97.9068%" y="1375.50"></text></g><g><title>std::fs::File::metadata (1 samples, 0.07%)</title><rect x="97.6568%" y="1349" width="0.0689%" height="15" fill="rgb(222,202,31)" fg:x="1417" fg:w="1"/><text x="97.9068%" y="1359.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (1 samples, 0.07%)</title><rect x="97.6568%" y="1333" width="0.0689%" height="15" fill="rgb(243,203,4)" fg:x="1417" fg:w="1"/><text x="97.9068%" y="1343.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.07%)</title><rect x="97.6568%" y="1317" width="0.0689%" height="15" fill="rgb(237,92,17)" fg:x="1417" fg:w="1"/><text x="97.9068%" y="1327.50"></text></g><g><title>libc::unix::linux_like::linux::makedev (1 samples, 0.07%)</title><rect x="97.6568%" y="1301" width="0.0689%" height="15" fill="rgb(231,119,7)" fg:x="1417" fg:w="1"/><text x="97.9068%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn generator::Updatable&gt;&gt;&gt; (1 samples, 0.07%)</title><rect x="97.7257%" y="1429" width="0.0689%" height="15" fill="rgb(237,82,41)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="97.7257%" y="1413" width="0.0689%" height="15" fill="rgb(226,81,48)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::boxed::Box&lt;dyn generator::Updatable&gt;]&gt; (1 samples, 0.07%)</title><rect x="97.7257%" y="1397" width="0.0689%" height="15" fill="rgb(234,70,51)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn generator::Updatable&gt;&gt; (1 samples, 0.07%)</title><rect x="97.7257%" y="1381" width="0.0689%" height="15" fill="rgb(251,86,4)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;generator::SensorDataHandler&lt;u64&gt;&gt; (1 samples, 0.07%)</title><rect x="97.7257%" y="1365" width="0.0689%" height="15" fill="rgb(244,144,28)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;hdf5::hl::dataset::Dataset&gt; (1 samples, 0.07%)</title><rect x="97.7257%" y="1349" width="0.0689%" height="15" fill="rgb(232,161,39)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;hdf5::handle::Handle&gt; (1 samples, 0.07%)</title><rect x="97.7257%" y="1333" width="0.0689%" height="15" fill="rgb(247,34,51)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1343.50"></text></g><g><title>&lt;hdf5::handle::Handle as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="97.7257%" y="1317" width="0.0689%" height="15" fill="rgb(225,132,2)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1327.50"></text></g><g><title>hdf5::sync::sync (1 samples, 0.07%)</title><rect x="97.7257%" y="1301" width="0.0689%" height="15" fill="rgb(209,159,44)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1311.50"></text></g><g><title>&lt;hdf5::handle::Handle as core::ops::drop::Drop&gt;::drop::{{closure}} (1 samples, 0.07%)</title><rect x="97.7257%" y="1285" width="0.0689%" height="15" fill="rgb(251,214,1)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1295.50"></text></g><g><title>hdf5::handle::Handle::decref (1 samples, 0.07%)</title><rect x="97.7257%" y="1269" width="0.0689%" height="15" fill="rgb(247,84,47)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1279.50"></text></g><g><title>hdf5::sync::sync (1 samples, 0.07%)</title><rect x="97.7257%" y="1253" width="0.0689%" height="15" fill="rgb(240,111,43)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1263.50"></text></g><g><title>hdf5::handle::Handle::decref::{{closure}} (1 samples, 0.07%)</title><rect x="97.7257%" y="1237" width="0.0689%" height="15" fill="rgb(215,214,35)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1247.50"></text></g><g><title>H5Idec_ref (1 samples, 0.07%)</title><rect x="97.7257%" y="1221" width="0.0689%" height="15" fill="rgb(248,207,23)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1231.50"></text></g><g><title>H5I_dec_app_ref (1 samples, 0.07%)</title><rect x="97.7257%" y="1205" width="0.0689%" height="15" fill="rgb(214,186,4)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1215.50"></text></g><g><title>H5I_dec_ref (1 samples, 0.07%)</title><rect x="97.7257%" y="1189" width="0.0689%" height="15" fill="rgb(220,133,22)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1199.50"></text></g><g><title>[libhdf5.so.200.2.0] (1 samples, 0.07%)</title><rect x="97.7257%" y="1173" width="0.0689%" height="15" fill="rgb(239,134,19)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1183.50"></text></g><g><title>H5VL_dataset_close (1 samples, 0.07%)</title><rect x="97.7257%" y="1157" width="0.0689%" height="15" fill="rgb(250,140,9)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1167.50"></text></g><g><title>[libhdf5.so.200.2.0] (1 samples, 0.07%)</title><rect x="97.7257%" y="1141" width="0.0689%" height="15" fill="rgb(225,59,14)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1151.50"></text></g><g><title>H5VL__native_dataset_close (1 samples, 0.07%)</title><rect x="97.7257%" y="1125" width="0.0689%" height="15" fill="rgb(214,152,51)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1135.50"></text></g><g><title>H5D_close (1 samples, 0.07%)</title><rect x="97.7257%" y="1109" width="0.0689%" height="15" fill="rgb(251,227,43)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1119.50"></text></g><g><title>H5O_close (1 samples, 0.07%)</title><rect x="97.7257%" y="1093" width="0.0689%" height="15" fill="rgb(241,96,17)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1103.50"></text></g><g><title>H5F_try_close (1 samples, 0.07%)</title><rect x="97.7257%" y="1077" width="0.0689%" height="15" fill="rgb(234,198,43)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1087.50"></text></g><g><title>[libhdf5.so.200.2.0] (1 samples, 0.07%)</title><rect x="97.7257%" y="1061" width="0.0689%" height="15" fill="rgb(220,108,29)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1071.50"></text></g><g><title>[libhdf5.so.200.2.0] (1 samples, 0.07%)</title><rect x="97.7257%" y="1045" width="0.0689%" height="15" fill="rgb(226,163,33)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1055.50"></text></g><g><title>H5AC_flush (1 samples, 0.07%)</title><rect x="97.7257%" y="1029" width="0.0689%" height="15" fill="rgb(205,194,45)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1039.50"></text></g><g><title>H5C_flush_cache (1 samples, 0.07%)</title><rect x="97.7257%" y="1013" width="0.0689%" height="15" fill="rgb(206,143,44)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1023.50"></text></g><g><title>H5C__flush_single_entry (1 samples, 0.07%)</title><rect x="97.7257%" y="997" width="0.0689%" height="15" fill="rgb(236,136,36)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="1007.50"></text></g><g><title>H5F_block_write (1 samples, 0.07%)</title><rect x="97.7257%" y="981" width="0.0689%" height="15" fill="rgb(249,172,42)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="991.50"></text></g><g><title>H5PB_write (1 samples, 0.07%)</title><rect x="97.7257%" y="965" width="0.0689%" height="15" fill="rgb(216,139,23)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="975.50"></text></g><g><title>H5F__accum_write (1 samples, 0.07%)</title><rect x="97.7257%" y="949" width="0.0689%" height="15" fill="rgb(207,166,20)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="959.50"></text></g><g><title>[libhdf5.so.200.2.0] (1 samples, 0.07%)</title><rect x="97.7257%" y="933" width="0.0689%" height="15" fill="rgb(210,209,22)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="943.50"></text></g><g><title>H5FL_blk_realloc (1 samples, 0.07%)</title><rect x="97.7257%" y="917" width="0.0689%" height="15" fill="rgb(232,118,20)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="927.50"></text></g><g><title>H5FL_blk_malloc (1 samples, 0.07%)</title><rect x="97.7257%" y="901" width="0.0689%" height="15" fill="rgb(238,113,42)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="911.50"></text></g><g><title>[libhdf5.so.200.2.0] (1 samples, 0.07%)</title><rect x="97.7257%" y="885" width="0.0689%" height="15" fill="rgb(231,42,5)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="895.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="97.7257%" y="869" width="0.0689%" height="15" fill="rgb(243,166,24)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="97.7257%" y="853" width="0.0689%" height="15" fill="rgb(237,226,12)" fg:x="1418" fg:w="1"/><text x="97.9757%" y="863.50"></text></g><g><title>generator::initialize_disk_data (1 samples, 0.07%)</title><rect x="97.7946%" y="1413" width="0.0689%" height="15" fill="rgb(229,133,24)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1423.50"></text></g><g><title>generator::SensorDataHandler&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="97.7946%" y="1397" width="0.0689%" height="15" fill="rgb(238,33,43)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1407.50"></text></g><g><title>hdf5::hl::dataset::DatasetBuilderEmptyShape::create (1 samples, 0.07%)</title><rect x="97.7946%" y="1381" width="0.0689%" height="15" fill="rgb(227,59,38)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1391.50"></text></g><g><title>hdf5::sync::sync (1 samples, 0.07%)</title><rect x="97.7946%" y="1365" width="0.0689%" height="15" fill="rgb(230,97,0)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1375.50"></text></g><g><title>hdf5::hl::dataset::DatasetBuilderEmptyShape::create::{{closure}} (1 samples, 0.07%)</title><rect x="97.7946%" y="1349" width="0.0689%" height="15" fill="rgb(250,173,50)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1359.50"></text></g><g><title>hdf5::hl::dataset::DatasetBuilderInner::create (1 samples, 0.07%)</title><rect x="97.7946%" y="1333" width="0.0689%" height="15" fill="rgb(240,15,50)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;hdf5::hl::plist::dataset_access::DatasetAccess&gt; (1 samples, 0.07%)</title><rect x="97.7946%" y="1317" width="0.0689%" height="15" fill="rgb(221,93,22)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;hdf5::handle::Handle&gt; (1 samples, 0.07%)</title><rect x="97.7946%" y="1301" width="0.0689%" height="15" fill="rgb(245,180,53)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1311.50"></text></g><g><title>&lt;hdf5::handle::Handle as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="97.7946%" y="1285" width="0.0689%" height="15" fill="rgb(231,88,51)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1295.50"></text></g><g><title>hdf5::sync::sync (1 samples, 0.07%)</title><rect x="97.7946%" y="1269" width="0.0689%" height="15" fill="rgb(240,58,21)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1279.50"></text></g><g><title>&lt;hdf5::handle::Handle as core::ops::drop::Drop&gt;::drop::{{closure}} (1 samples, 0.07%)</title><rect x="97.7946%" y="1253" width="0.0689%" height="15" fill="rgb(237,21,10)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1263.50"></text></g><g><title>hdf5::handle::Handle::decref (1 samples, 0.07%)</title><rect x="97.7946%" y="1237" width="0.0689%" height="15" fill="rgb(218,43,11)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1247.50"></text></g><g><title>hdf5::sync::sync (1 samples, 0.07%)</title><rect x="97.7946%" y="1221" width="0.0689%" height="15" fill="rgb(218,221,29)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1231.50"></text></g><g><title>hdf5::handle::Handle::decref::{{closure}} (1 samples, 0.07%)</title><rect x="97.7946%" y="1205" width="0.0689%" height="15" fill="rgb(214,118,42)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1215.50"></text></g><g><title>H5Idec_ref (1 samples, 0.07%)</title><rect x="97.7946%" y="1189" width="0.0689%" height="15" fill="rgb(251,200,26)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1199.50"></text></g><g><title>H5I_dec_app_ref (1 samples, 0.07%)</title><rect x="97.7946%" y="1173" width="0.0689%" height="15" fill="rgb(237,101,39)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1183.50"></text></g><g><title>H5I_dec_ref (1 samples, 0.07%)</title><rect x="97.7946%" y="1157" width="0.0689%" height="15" fill="rgb(251,117,11)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1167.50"></text></g><g><title>H5P_close (1 samples, 0.07%)</title><rect x="97.7946%" y="1141" width="0.0689%" height="15" fill="rgb(216,223,23)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1151.50"></text></g><g><title>H5SL_insert (1 samples, 0.07%)</title><rect x="97.7946%" y="1125" width="0.0689%" height="15" fill="rgb(251,54,12)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1135.50"></text></g><g><title>[libhdf5.so.200.2.0] (1 samples, 0.07%)</title><rect x="97.7946%" y="1109" width="0.0689%" height="15" fill="rgb(254,176,54)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1119.50"></text></g><g><title>H5FL_fac_free (1 samples, 0.07%)</title><rect x="97.7946%" y="1093" width="0.0689%" height="15" fill="rgb(210,32,8)" fg:x="1419" fg:w="1"/><text x="98.0446%" y="1103.50"></text></g><g><title>generator::initialize_data_file (2 samples, 0.14%)</title><rect x="97.7946%" y="1429" width="0.1378%" height="15" fill="rgb(235,52,38)" fg:x="1419" fg:w="2"/><text x="98.0446%" y="1439.50"></text></g><g><title>hdf5::hl::file::File::create (1 samples, 0.07%)</title><rect x="97.8635%" y="1413" width="0.0689%" height="15" fill="rgb(231,4,44)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1423.50"></text></g><g><title>hdf5::hl::file::File::open_as (1 samples, 0.07%)</title><rect x="97.8635%" y="1397" width="0.0689%" height="15" fill="rgb(249,2,32)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1407.50"></text></g><g><title>hdf5::hl::file::FileBuilder::open_as (1 samples, 0.07%)</title><rect x="97.8635%" y="1381" width="0.0689%" height="15" fill="rgb(224,65,26)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1391.50"></text></g><g><title>hdf5::sync::sync (1 samples, 0.07%)</title><rect x="97.8635%" y="1365" width="0.0689%" height="15" fill="rgb(250,73,40)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1375.50"></text></g><g><title>&lt;hdf5::sync::sync::LOCK as core::ops::deref::Deref&gt;::deref (1 samples, 0.07%)</title><rect x="97.8635%" y="1349" width="0.0689%" height="15" fill="rgb(253,177,16)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1359.50"></text></g><g><title>&lt;hdf5::sync::sync::LOCK as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.07%)</title><rect x="97.8635%" y="1333" width="0.0689%" height="15" fill="rgb(217,32,34)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1343.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="97.8635%" y="1317" width="0.0689%" height="15" fill="rgb(212,7,10)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1327.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.07%)</title><rect x="97.8635%" y="1301" width="0.0689%" height="15" fill="rgb(245,89,8)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1311.50"></text></g><g><title>std::sync::once::Once::call_inner (1 samples, 0.07%)</title><rect x="97.8635%" y="1285" width="0.0689%" height="15" fill="rgb(237,16,53)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1295.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.07%)</title><rect x="97.8635%" y="1269" width="0.0689%" height="15" fill="rgb(250,204,30)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1279.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (1 samples, 0.07%)</title><rect x="97.8635%" y="1253" width="0.0689%" height="15" fill="rgb(208,77,27)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1263.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.07%)</title><rect x="97.8635%" y="1237" width="0.0689%" height="15" fill="rgb(250,204,28)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1247.50"></text></g><g><title>&lt;hdf5::sync::sync::LOCK as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 0.07%)</title><rect x="97.8635%" y="1221" width="0.0689%" height="15" fill="rgb(244,63,21)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1231.50"></text></g><g><title>lazy_static::initialize (1 samples, 0.07%)</title><rect x="97.8635%" y="1205" width="0.0689%" height="15" fill="rgb(236,85,44)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1215.50"></text></g><g><title>&lt;hdf5::sync::LIBRARY_INIT as lazy_static::LazyStatic&gt;::initialize (1 samples, 0.07%)</title><rect x="97.8635%" y="1189" width="0.0689%" height="15" fill="rgb(215,98,4)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1199.50"></text></g><g><title>&lt;hdf5::sync::LIBRARY_INIT as core::ops::deref::Deref&gt;::deref (1 samples, 0.07%)</title><rect x="97.8635%" y="1173" width="0.0689%" height="15" fill="rgb(235,38,11)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1183.50"></text></g><g><title>&lt;hdf5::sync::LIBRARY_INIT as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 0.07%)</title><rect x="97.8635%" y="1157" width="0.0689%" height="15" fill="rgb(254,186,25)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1167.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="97.8635%" y="1141" width="0.0689%" height="15" fill="rgb(225,55,31)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1151.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.07%)</title><rect x="97.8635%" y="1125" width="0.0689%" height="15" fill="rgb(211,15,21)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1135.50"></text></g><g><title>std::sync::once::Once::call_inner (1 samples, 0.07%)</title><rect x="97.8635%" y="1109" width="0.0689%" height="15" fill="rgb(215,187,41)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1119.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.07%)</title><rect x="97.8635%" y="1093" width="0.0689%" height="15" fill="rgb(248,69,32)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1103.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (1 samples, 0.07%)</title><rect x="97.8635%" y="1077" width="0.0689%" height="15" fill="rgb(252,102,52)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.07%)</title><rect x="97.8635%" y="1061" width="0.0689%" height="15" fill="rgb(253,140,32)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1071.50"></text></g><g><title>&lt;hdf5::sync::LIBRARY_INIT as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 0.07%)</title><rect x="97.8635%" y="1045" width="0.0689%" height="15" fill="rgb(216,56,42)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1055.50"></text></g><g><title>H5open (1 samples, 0.07%)</title><rect x="97.8635%" y="1029" width="0.0689%" height="15" fill="rgb(216,184,14)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1039.50"></text></g><g><title>H5_init_library (1 samples, 0.07%)</title><rect x="97.8635%" y="1013" width="0.0689%" height="15" fill="rgb(237,187,27)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1023.50"></text></g><g><title>H5P_init (1 samples, 0.07%)</title><rect x="97.8635%" y="997" width="0.0689%" height="15" fill="rgb(219,65,3)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="1007.50"></text></g><g><title>H5P__init_package (1 samples, 0.07%)</title><rect x="97.8635%" y="981" width="0.0689%" height="15" fill="rgb(245,83,25)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="991.50"></text></g><g><title>[libhdf5.so.200.2.0] (1 samples, 0.07%)</title><rect x="97.8635%" y="965" width="0.0689%" height="15" fill="rgb(214,205,45)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="975.50"></text></g><g><title>H5P__register_real (1 samples, 0.07%)</title><rect x="97.8635%" y="949" width="0.0689%" height="15" fill="rgb(241,20,18)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="959.50"></text></g><g><title>H5P__add_prop (1 samples, 0.07%)</title><rect x="97.8635%" y="933" width="0.0689%" height="15" fill="rgb(232,163,23)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="943.50"></text></g><g><title>H5SL_insert (1 samples, 0.07%)</title><rect x="97.8635%" y="917" width="0.0689%" height="15" fill="rgb(214,5,46)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="927.50"></text></g><g><title>[libhdf5.so.200.2.0] (1 samples, 0.07%)</title><rect x="97.8635%" y="901" width="0.0689%" height="15" fill="rgb(229,78,17)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="911.50"></text></g><g><title>[libhdf5.so.200.2.0] (1 samples, 0.07%)</title><rect x="97.8635%" y="885" width="0.0689%" height="15" fill="rgb(248,89,10)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="895.50"></text></g><g><title>H5FL_reg_malloc (1 samples, 0.07%)</title><rect x="97.8635%" y="869" width="0.0689%" height="15" fill="rgb(248,54,15)" fg:x="1420" fg:w="1"/><text x="98.1135%" y="879.50"></text></g><g><title>sysinfo::common::CpuRefreshKind::new (1 samples, 0.07%)</title><rect x="97.9325%" y="1413" width="0.0689%" height="15" fill="rgb(223,116,6)" fg:x="1421" fg:w="1"/><text x="98.1825%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.28%)</title><rect x="98.2771%" y="1365" width="0.2757%" height="15" fill="rgb(205,125,38)" fg:x="1426" fg:w="4"/><text x="98.5271%" y="1375.50"></text></g><g><title>&lt;core::slice::iter::Split&lt;T,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.28%)</title><rect x="98.2771%" y="1349" width="0.2757%" height="15" fill="rgb(251,78,38)" fg:x="1426" fg:w="4"/><text x="98.5271%" y="1359.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (3 samples, 0.21%)</title><rect x="98.3460%" y="1333" width="0.2068%" height="15" fill="rgb(253,78,28)" fg:x="1427" fg:w="3"/><text x="98.5960%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Split&lt;T,P&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (2 samples, 0.14%)</title><rect x="98.4149%" y="1317" width="0.1378%" height="15" fill="rgb(209,120,3)" fg:x="1428" fg:w="2"/><text x="98.6649%" y="1327.50"></text></g><g><title>sysinfo::linux::cpu::CpusWrapper::refresh::{{closure}} (2 samples, 0.14%)</title><rect x="98.4149%" y="1301" width="0.1378%" height="15" fill="rgb(238,229,9)" fg:x="1428" fg:w="2"/><text x="98.6649%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.34%)</title><rect x="98.2771%" y="1397" width="0.3446%" height="15" fill="rgb(253,159,18)" fg:x="1426" fg:w="5"/><text x="98.5271%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (5 samples, 0.34%)</title><rect x="98.2771%" y="1381" width="0.3446%" height="15" fill="rgb(244,42,34)" fg:x="1426" fg:w="5"/><text x="98.5271%" y="1391.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (1 samples, 0.07%)</title><rect x="98.5527%" y="1365" width="0.0689%" height="15" fill="rgb(224,8,7)" fg:x="1430" fg:w="1"/><text x="98.8027%" y="1375.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.07%)</title><rect x="98.7595%" y="1349" width="0.0689%" height="15" fill="rgb(210,201,45)" fg:x="1433" fg:w="1"/><text x="99.0095%" y="1359.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (1 samples, 0.07%)</title><rect x="98.7595%" y="1333" width="0.0689%" height="15" fill="rgb(252,185,21)" fg:x="1433" fg:w="1"/><text x="99.0095%" y="1343.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (1 samples, 0.07%)</title><rect x="98.7595%" y="1317" width="0.0689%" height="15" fill="rgb(223,131,1)" fg:x="1433" fg:w="1"/><text x="99.0095%" y="1327.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 0.07%)</title><rect x="98.7595%" y="1301" width="0.0689%" height="15" fill="rgb(245,141,16)" fg:x="1433" fg:w="1"/><text x="99.0095%" y="1311.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (1 samples, 0.07%)</title><rect x="98.7595%" y="1285" width="0.0689%" height="15" fill="rgb(229,55,45)" fg:x="1433" fg:w="1"/><text x="99.0095%" y="1295.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (1 samples, 0.07%)</title><rect x="98.7595%" y="1269" width="0.0689%" height="15" fill="rgb(208,92,15)" fg:x="1433" fg:w="1"/><text x="99.0095%" y="1279.50"></text></g><g><title>read (1 samples, 0.07%)</title><rect x="98.7595%" y="1253" width="0.0689%" height="15" fill="rgb(234,185,47)" fg:x="1433" fg:w="1"/><text x="99.0095%" y="1263.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="98.7595%" y="1237" width="0.0689%" height="15" fill="rgb(253,104,50)" fg:x="1433" fg:w="1"/><text x="99.0095%" y="1247.50"></text></g><g><title>&lt;std::io::Split&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.28%)</title><rect x="98.6216%" y="1397" width="0.2757%" height="15" fill="rgb(205,70,7)" fg:x="1431" fg:w="4"/><text x="98.8716%" y="1407.50"></text></g><g><title>std::io::BufRead::read_until (2 samples, 0.14%)</title><rect x="98.7595%" y="1381" width="0.1378%" height="15" fill="rgb(240,178,43)" fg:x="1433" fg:w="2"/><text x="99.0095%" y="1391.50"></text></g><g><title>std::io::read_until (2 samples, 0.14%)</title><rect x="98.7595%" y="1365" width="0.1378%" height="15" fill="rgb(214,112,2)" fg:x="1433" fg:w="2"/><text x="99.0095%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="98.8284%" y="1349" width="0.0689%" height="15" fill="rgb(206,46,17)" fg:x="1434" fg:w="1"/><text x="99.0784%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="98.8284%" y="1333" width="0.0689%" height="15" fill="rgb(225,220,16)" fg:x="1434" fg:w="1"/><text x="99.0784%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="98.8284%" y="1317" width="0.0689%" height="15" fill="rgb(238,65,40)" fg:x="1434" fg:w="1"/><text x="99.0784%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="98.8284%" y="1301" width="0.0689%" height="15" fill="rgb(230,151,21)" fg:x="1434" fg:w="1"/><text x="99.0784%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="98.8284%" y="1285" width="0.0689%" height="15" fill="rgb(218,58,49)" fg:x="1434" fg:w="1"/><text x="99.0784%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="98.8284%" y="1269" width="0.0689%" height="15" fill="rgb(219,179,14)" fg:x="1434" fg:w="1"/><text x="99.0784%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="98.8284%" y="1253" width="0.0689%" height="15" fill="rgb(223,72,1)" fg:x="1434" fg:w="1"/><text x="99.0784%" y="1263.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="98.8284%" y="1237" width="0.0689%" height="15" fill="rgb(238,126,10)" fg:x="1434" fg:w="1"/><text x="99.0784%" y="1247.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="98.8284%" y="1221" width="0.0689%" height="15" fill="rgb(224,206,38)" fg:x="1434" fg:w="1"/><text x="99.0784%" y="1231.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="98.8973%" y="1397" width="0.0689%" height="15" fill="rgb(212,201,54)" fg:x="1435" fg:w="1"/><text x="99.1473%" y="1407.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="98.8973%" y="1381" width="0.0689%" height="15" fill="rgb(218,154,48)" fg:x="1435" fg:w="1"/><text x="99.1473%" y="1391.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.07%)</title><rect x="98.9662%" y="1397" width="0.0689%" height="15" fill="rgb(232,93,24)" fg:x="1436" fg:w="1"/><text x="99.2162%" y="1407.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[A: N]&gt; for [B]&gt;::ne (1 samples, 0.07%)</title><rect x="98.9662%" y="1381" width="0.0689%" height="15" fill="rgb(245,30,21)" fg:x="1436" fg:w="1"/><text x="99.2162%" y="1391.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::ne (1 samples, 0.07%)</title><rect x="98.9662%" y="1365" width="0.0689%" height="15" fill="rgb(242,148,29)" fg:x="1436" fg:w="1"/><text x="99.2162%" y="1375.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_ne (1 samples, 0.07%)</title><rect x="98.9662%" y="1349" width="0.0689%" height="15" fill="rgb(244,153,54)" fg:x="1436" fg:w="1"/><text x="99.2162%" y="1359.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.07%)</title><rect x="98.9662%" y="1333" width="0.0689%" height="15" fill="rgb(252,87,22)" fg:x="1436" fg:w="1"/><text x="99.2162%" y="1343.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.34%)</title><rect x="99.0351%" y="1397" width="0.3446%" height="15" fill="rgb(210,51,29)" fg:x="1437" fg:w="5"/><text x="99.2851%" y="1407.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.34%)</title><rect x="99.0351%" y="1381" width="0.3446%" height="15" fill="rgb(242,136,47)" fg:x="1437" fg:w="5"/><text x="99.2851%" y="1391.50"></text></g><g><title>sysinfo::linux::utils::to_u64 (5 samples, 0.34%)</title><rect x="99.0351%" y="1365" width="0.3446%" height="15" fill="rgb(238,68,4)" fg:x="1437" fg:w="5"/><text x="99.2851%" y="1375.50"></text></g><g><title>&lt;&amp;u8 as core::ops::arith::Sub&lt;u8&gt;&gt;::sub (1 samples, 0.07%)</title><rect x="99.3108%" y="1349" width="0.0689%" height="15" fill="rgb(242,161,30)" fg:x="1441" fg:w="1"/><text x="99.5608%" y="1359.50"></text></g><g><title>std::fs::File::open (2 samples, 0.14%)</title><rect x="99.3797%" y="1397" width="0.1378%" height="15" fill="rgb(218,58,44)" fg:x="1442" fg:w="2"/><text x="99.6297%" y="1407.50"></text></g><g><title>std::fs::OpenOptions::open (2 samples, 0.14%)</title><rect x="99.3797%" y="1381" width="0.1378%" height="15" fill="rgb(252,125,32)" fg:x="1442" fg:w="2"/><text x="99.6297%" y="1391.50"></text></g><g><title>std::fs::OpenOptions::_open (2 samples, 0.14%)</title><rect x="99.3797%" y="1365" width="0.1378%" height="15" fill="rgb(219,178,0)" fg:x="1442" fg:w="2"/><text x="99.6297%" y="1375.50"></text></g><g><title>std::sys::unix::fs::File::open (2 samples, 0.14%)</title><rect x="99.3797%" y="1349" width="0.1378%" height="15" fill="rgb(213,152,7)" fg:x="1442" fg:w="2"/><text x="99.6297%" y="1359.50"></text></g><g><title>std::sys::unix::fs::File::open_c (2 samples, 0.14%)</title><rect x="99.3797%" y="1333" width="0.1378%" height="15" fill="rgb(249,109,34)" fg:x="1442" fg:w="2"/><text x="99.6297%" y="1343.50"></text></g><g><title>std::sys::unix::cvt_r (2 samples, 0.14%)</title><rect x="99.3797%" y="1317" width="0.1378%" height="15" fill="rgb(232,96,21)" fg:x="1442" fg:w="2"/><text x="99.6297%" y="1327.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (2 samples, 0.14%)</title><rect x="99.3797%" y="1301" width="0.1378%" height="15" fill="rgb(228,27,39)" fg:x="1442" fg:w="2"/><text x="99.6297%" y="1311.50"></text></g><g><title>open64 (2 samples, 0.14%)</title><rect x="99.3797%" y="1285" width="0.1378%" height="15" fill="rgb(211,182,52)" fg:x="1442" fg:w="2"/><text x="99.6297%" y="1295.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="99.3797%" y="1269" width="0.1378%" height="15" fill="rgb(234,178,38)" fg:x="1442" fg:w="2"/><text x="99.6297%" y="1279.50"></text></g><g><title>_start (1,071 samples, 73.81%)</title><rect x="26.1199%" y="1701" width="73.8112%" height="15" fill="rgb(221,111,3)" fg:x="379" fg:w="1071"/><text x="26.3699%" y="1711.50">_start</text></g><g><title>__libc_start_main (1,071 samples, 73.81%)</title><rect x="26.1199%" y="1685" width="73.8112%" height="15" fill="rgb(228,175,21)" fg:x="379" fg:w="1071"/><text x="26.3699%" y="1695.50">__libc_start_main</text></g><g><title>[libc.so.6] (1,071 samples, 73.81%)</title><rect x="26.1199%" y="1669" width="73.8112%" height="15" fill="rgb(228,174,43)" fg:x="379" fg:w="1071"/><text x="26.3699%" y="1679.50">[libc.so.6]</text></g><g><title>main (1,071 samples, 73.81%)</title><rect x="26.1199%" y="1653" width="73.8112%" height="15" fill="rgb(211,191,0)" fg:x="379" fg:w="1071"/><text x="26.3699%" y="1663.50">main</text></g><g><title>std::rt::lang_start_internal (1,071 samples, 73.81%)</title><rect x="26.1199%" y="1637" width="73.8112%" height="15" fill="rgb(253,117,3)" fg:x="379" fg:w="1071"/><text x="26.3699%" y="1647.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,071 samples, 73.81%)</title><rect x="26.1199%" y="1621" width="73.8112%" height="15" fill="rgb(241,127,19)" fg:x="379" fg:w="1071"/><text x="26.3699%" y="1631.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,071 samples, 73.81%)</title><rect x="26.1199%" y="1605" width="73.8112%" height="15" fill="rgb(218,103,12)" fg:x="379" fg:w="1071"/><text x="26.3699%" y="1615.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,071 samples, 73.81%)</title><rect x="26.1199%" y="1589" width="73.8112%" height="15" fill="rgb(236,214,43)" fg:x="379" fg:w="1071"/><text x="26.3699%" y="1599.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,071 samples, 73.81%)</title><rect x="26.1199%" y="1573" width="73.8112%" height="15" fill="rgb(244,144,19)" fg:x="379" fg:w="1071"/><text x="26.3699%" y="1583.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,071 samples, 73.81%)</title><rect x="26.1199%" y="1557" width="73.8112%" height="15" fill="rgb(246,188,10)" fg:x="379" fg:w="1071"/><text x="26.3699%" y="1567.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,071 samples, 73.81%)</title><rect x="26.1199%" y="1541" width="73.8112%" height="15" fill="rgb(212,193,33)" fg:x="379" fg:w="1071"/><text x="26.3699%" y="1551.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,071 samples, 73.81%)</title><rect x="26.1199%" y="1525" width="73.8112%" height="15" fill="rgb(241,51,29)" fg:x="379" fg:w="1071"/><text x="26.3699%" y="1535.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,071 samples, 73.81%)</title><rect x="26.1199%" y="1509" width="73.8112%" height="15" fill="rgb(211,58,19)" fg:x="379" fg:w="1071"/><text x="26.3699%" y="1519.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,071 samples, 73.81%)</title><rect x="26.1199%" y="1493" width="73.8112%" height="15" fill="rgb(229,111,26)" fg:x="379" fg:w="1071"/><text x="26.3699%" y="1503.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,071 samples, 73.81%)</title><rect x="26.1199%" y="1477" width="73.8112%" height="15" fill="rgb(213,115,40)" fg:x="379" fg:w="1071"/><text x="26.3699%" y="1487.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (1,071 samples, 73.81%)</title><rect x="26.1199%" y="1461" width="73.8112%" height="15" fill="rgb(209,56,44)" fg:x="379" fg:w="1071"/><text x="26.3699%" y="1471.50">core::ops::function::FnOnce::call_once</text></g><g><title>generator::main (1,071 samples, 73.81%)</title><rect x="26.1199%" y="1445" width="73.8112%" height="15" fill="rgb(230,108,32)" fg:x="379" fg:w="1071"/><text x="26.3699%" y="1455.50">generator::main</text></g><g><title>sysinfo::traits::SystemExt::refresh_cpu (29 samples, 2.00%)</title><rect x="97.9325%" y="1429" width="1.9986%" height="15" fill="rgb(216,165,31)" fg:x="1421" fg:w="29"/><text x="98.1825%" y="1439.50">s..</text></g><g><title>sysinfo::linux::cpu::CpusWrapper::refresh (28 samples, 1.93%)</title><rect x="98.0014%" y="1413" width="1.9297%" height="15" fill="rgb(218,122,21)" fg:x="1422" fg:w="28"/><text x="98.2514%" y="1423.50">s..</text></g><g><title>std::io::buffered::bufreader::BufReader&lt;R&gt;::new (6 samples, 0.41%)</title><rect x="99.5176%" y="1397" width="0.4135%" height="15" fill="rgb(223,224,47)" fg:x="1444" fg:w="6"/><text x="99.7676%" y="1407.50"></text></g><g><title>std::io::buffered::bufreader::BufReader&lt;R&gt;::with_capacity (6 samples, 0.41%)</title><rect x="99.5176%" y="1381" width="0.4135%" height="15" fill="rgb(238,102,44)" fg:x="1444" fg:w="6"/><text x="99.7676%" y="1391.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::with_capacity (6 samples, 0.41%)</title><rect x="99.5176%" y="1365" width="0.4135%" height="15" fill="rgb(236,46,40)" fg:x="1444" fg:w="6"/><text x="99.7676%" y="1375.50"></text></g><g><title>alloc::boxed::Box&lt;[T]&gt;::new_uninit_slice (6 samples, 0.41%)</title><rect x="99.5176%" y="1349" width="0.4135%" height="15" fill="rgb(247,202,50)" fg:x="1444" fg:w="6"/><text x="99.7676%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.41%)</title><rect x="99.5176%" y="1333" width="0.4135%" height="15" fill="rgb(209,99,20)" fg:x="1444" fg:w="6"/><text x="99.7676%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.41%)</title><rect x="99.5176%" y="1317" width="0.4135%" height="15" fill="rgb(252,27,34)" fg:x="1444" fg:w="6"/><text x="99.7676%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.41%)</title><rect x="99.5176%" y="1301" width="0.4135%" height="15" fill="rgb(215,206,23)" fg:x="1444" fg:w="6"/><text x="99.7676%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.41%)</title><rect x="99.5176%" y="1285" width="0.4135%" height="15" fill="rgb(212,135,36)" fg:x="1444" fg:w="6"/><text x="99.7676%" y="1295.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.41%)</title><rect x="99.5176%" y="1269" width="0.4135%" height="15" fill="rgb(240,189,1)" fg:x="1444" fg:w="6"/><text x="99.7676%" y="1279.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.41%)</title><rect x="99.5176%" y="1253" width="0.4135%" height="15" fill="rgb(242,56,20)" fg:x="1444" fg:w="6"/><text x="99.7676%" y="1263.50"></text></g><g><title>malloc (6 samples, 0.41%)</title><rect x="99.5176%" y="1237" width="0.4135%" height="15" fill="rgb(247,132,33)" fg:x="1444" fg:w="6"/><text x="99.7676%" y="1247.50"></text></g><g><title>[libc.so.6] (5 samples, 0.34%)</title><rect x="99.5865%" y="1221" width="0.3446%" height="15" fill="rgb(208,149,11)" fg:x="1445" fg:w="5"/><text x="99.8365%" y="1231.50"></text></g><g><title>[libc.so.6] (2 samples, 0.14%)</title><rect x="99.7932%" y="1205" width="0.1378%" height="15" fill="rgb(211,33,11)" fg:x="1448" fg:w="2"/><text x="100.0432%" y="1215.50"></text></g><g><title>all (1,451 samples, 100%)</title><rect x="0.0000%" y="1733" width="100.0000%" height="15" fill="rgb(221,29,38)" fg:x="0" fg:w="1451"/><text x="0.2500%" y="1743.50"></text></g><g><title>generator (1,451 samples, 100.00%)</title><rect x="0.0000%" y="1717" width="100.0000%" height="15" fill="rgb(206,182,49)" fg:x="0" fg:w="1451"/><text x="0.2500%" y="1727.50">generator</text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="99.9311%" y="1701" width="0.0689%" height="15" fill="rgb(216,140,1)" fg:x="1450" fg:w="1"/><text x="100.1811%" y="1711.50"></text></g></svg></svg>